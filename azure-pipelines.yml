trigger:
  batch: true
  branches:
    include:
    - master
    
pr:
  branches:
    include:
    - master
    - templates
  paths:
    exclude:
    - Documentation/*
    
variables:
  # Cannot use key:value syntax in root defined variables
  - name: _TeamName
    value: DotNetCore
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: .NETCore

resources:
  containers:
  - container: LinuxContainer
    image: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304

jobs:
- template: /eng/common/templates/jobs/jobs.yml
  parameters:
    enableMicrobuild: true
    enablePublishBuildArtifacts: true
    enablePublishTestResults: true
    enablePublishBuildAssets: true
    enablePublishUsingPipelines: $(_PublishUsingPipelines)
    enableTelemetry: true
    graphFileGeneration:
      enabled: true
      includeToolset: true
    helixRepo: dotnet/arcade
    jobs:
    - job: Windows_NT
      timeoutInMinutes: 90
      pool:
        # For public or PR jobs, use the hosted pool.  For internal jobs use the internal pool.
        # Will eventually change this to two BYOC pools.
        ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
          name: NetCorePublic-Pool
          queue: BuildPool.Windows.10.Amd64.VS2017.Open
        ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
          name: NetCoreInternal-Pool
          queue: BuildPool.Windows.10.Amd64.VS2017
      variables:
      - _Script: eng\common\cibuild.cmd
      - _ValidateSdkArgs: ''
      - _InternalBuildArgs: ''
      - HelixApiAccessToken: ''

      # Only enable publishing in non-public, non PR scenarios.
      - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
        # DotNet-Blob-Feed provides: dotnetfeed-storage-access-key-1
        # Publish-Build-Assets provides: MaestroAccessToken, BotAccount-dotnet-maestro-bot-PAT
        # DotNet-HelixApi-Access provides: HelixApiAccessToken
        - group: DotNet-Blob-Feed
        - group: Publish-Build-Assets
        - group: DotNet-HelixApi-Access
        - _PublishBlobFeedUrl: https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
        - _InternalBuildArgs: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName)
            /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
            /p:DotNetPublishBlobFeedUrl=$(_PublishBlobFeedUrl)
            /p:DotNetPublishToBlobFeed=$(_DotNetPublishToBlobFeed)
            /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
            /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
            /p:OfficialBuildId=$(BUILD.BUILDNUMBER)

      strategy:
        matrix:
          Build_Release:
            _BuildConfig: Release
            # PRs or external builds are not signed.
            ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              _SignType: test
              _DotNetPublishToBlobFeed : false
            ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              _SignType: real
              _DotNetPublishToBlobFeed : true
              _Script: eng\validate-sdk.cmd
              _ValidateSdkArgs: -gitHubPat $(BotAccount-dotnet-maestro-bot-PAT) -barToken $(MaestroAccessToken)
          ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
            Build_Debug:
              _BuildConfig: Debug
              _SignType: test
              _DotNetPublishToBlobFeed : false
      steps:
      - checkout: self
        clean: true
      # Use utility script to run script command dependent on agent OS.
      - script: $(_Script)
          -configuration $(_BuildConfig) 
          -prepareMachine
          $(_InternalBuildArgs)
          $(_ValidateSdkArgs)
          /p:Test=false
        displayName: Windows Build / Publish

      - powershell: eng\common\build.ps1
          -configuration $(_BuildConfig) 
          -prepareMachine
          -ci
          -test
          -projects $(Build.SourcesDirectory)/tests/UnitTests.proj
          /bl:$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/Helix.binlog
        displayName: Run Helix Tests
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
          HelixAccessToken: $(HelixApiAccessToken)

    - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
      - job: Linux
        container: LinuxContainer
        pool:
          ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
            name:  NetCorePublic-Pool
            queue: BuildPool.Ubuntu.1604.Amd64.Open
          ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
            name:  NetCoreInternal-Pool
            queue: BuildPool.Ubuntu.1604.Amd64
        variables:
        - HelixApiAccessToken: ''
        - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
          - group: DotNet-HelixApi-Access
        strategy:
          matrix:
            Build_Debug:
              _BuildConfig: Debug
              _PublishType: none
              _SignType: none
              _DotNetPublishToBlobFeed : false
            Build_Release:
              _BuildConfig: Release
              _PublishType: none
              _SignType: none
              _DotNetPublishToBlobFeed : false
        steps:
        - checkout: self
          clean: true
        - script: eng/common/cibuild.sh
            --configuration $(_BuildConfig)
            --prepareMachine
            /p:Test=false
          displayName: Unix Build / Publish
        - script: eng/common/build.sh
            --configuration $(_BuildConfig)
            --prepareMachine
            --ci
            --test
            --projects $(Build.SourcesDirectory)/tests/UnitTests.proj
            /bl:$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/Helix.binlog
          displayName: Run Helix Tests
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
            HelixAccessToken: $(HelixApiAccessToken)
