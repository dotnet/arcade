# This file is the main entry point for the Build Promotion build definition.

parameters:
  - name: PublishingInfraVersion
    displayName: Which version of publishing should be used to promote the build definition?
    type: number
    default: 2
    values:
      - 2
      - 3
      
  - name: BARBuildId
    displayName: "Maestro ID of the build to be promoted:"
    type: number

  - name: PromoteToChannelIds
    displayName: Which Maestro channels' IDs should the build be promoted to? (comma separated)
    type: string 
    default: ' '

  - name: EnableSourceLinkValidation
    displayName: Should Sourcelink validation be performed?
    type: boolean 
    default: false
    
  - name: EnableNugetValidation
    displayName: Should NuGet metadata validation be performed?
    type: boolean 
    default: false
    
  - name: EnableSigningValidation
    displayName: Should signing validation be performed?
    type: boolean 
    default: false
       
  - name: PublishInstallersAndChecksums
    displayName: Should installers and checksums be published?
    type: boolean 
    default: true
      
  - name: SymbolPublishingAdditionalParameters
    displayName: Additional (MSBuild) properties for symbol publishing
    type: string 
    default: ' '

  - name: ArtifactsPublishingAdditionalParameters
    displayName: Additional (MSBuild) properties for general asset publishing
    type: string 
    default: ' '
    
  - name: SigningValidationAdditionalParameters
    displayName: Additional (MSBuild) properties for signing validation
    type: string 
    default: ' '

trigger: none

variables:
  _DotNetArtifactsCategory: .NETCore

stages:
- stage: prepare_promotion
  displayName: Prepare for Promotion
  jobs:
    - job:
      displayName: Validate Parameters
      variables:
        - template: common\templates\post-build\common-variables.yml
      steps:
        - checkout: none
        
        - task: PowerShell@2
          displayName: Validate Build & Channel
          inputs:
            targetType: inline
            script: |
              # Keeping this script inline so that we don't need to checkout the whole repo to use just one file
              try {
                  $buildApiEndpoint = "$(MaestroApiEndPoint)/api/builds/${Env:BARBuildId}?api-version=$(MaestroApiVersion)"

                  $apiHeaders = New-Object 'System.Collections.Generic.Dictionary[[String],[String]]'
                  $apiHeaders.Add('Accept', 'application/json')
                  $apiHeaders.Add('Authorization',"Bearer ${Env:MAESTRO_API_TOKEN}")

                  $buildInfo = try { Invoke-WebRequest -Method Get -Uri $buildApiEndpoint -Headers $apiHeaders | ConvertFrom-Json } catch { Write-Host "Error: $_" }

                  if (!$buildInfo) {
                    Write-Host "Build with BAR ID ${Env:BARBuildId} was not found in BAR!"
                    exit 1
                  }

                  $channels = ${Env:PromoteToChannelIds} -split "-"
                  foreach ($channelId in $channels) {
                    $channelApiEndpoint = "$(MaestroApiEndPoint)/api/channels/${channelId}?api-version=$(MaestroApiVersion)"
                    $channelInfo = try { Invoke-WebRequest -Method Get -Uri $channelApiEndpoint -Headers $apiHeaders | ConvertFrom-Json } catch { Write-Host "Error: $_" }

                    if (!$channelInfo) {
                      Write-Host "Channel with ID ${channelId} was not found in BAR. Aborting."
                      exit 1
                    }
                  }
                  
                  $azureDevOpsBuildNumber = $buildInfo.azureDevOpsBuildNumber
                  $channelName = $channelInfo.name
                  $azureDevOpsRepository = "Unknown"
                  $lastIndexOfSlash = $buildInfo.azureDevOpsRepository.LastIndexOf('/')

                  if ($lastIndexOfSlash -ne -1) {
                    $azureDevOpsRepository = $buildInfo.azureDevOpsRepository.Substring($lastIndexOfSlash + 1)

                    # Invalid chars in Azdo build number: '"', '/', ':', '<', '>', '\', '|', '?', '@', and '*'
                    $azureDevOpsRepository = $azureDevOpsRepository -replace '["/:<>\\|?@*"]', '_'
                  }

                  $buildNumberName = "Promoting $azureDevOpsRepository build $azureDevOpsBuildNumber to channel(s) ${Env:PromoteToChannelIds}#"

                  # Maximum buildnumber length is 255 chars
                  if ($buildNumberName.Length -GT 255) {
                    $buildNumberName = $buildNumberName.Substring(0, 255)
                  }

                  Write-Host "##vso[build.updatebuildnumber]$buildNumberName"
                  Write-Host "##vso[build.addbuildtag]$channelName"
              }
              catch {
                Write-Host $_
                Write-Host $_.Exception
                Write-Host $_.ScriptStackTrace
                exit 1
              }
          env:
            MAESTRO_API_TOKEN: $(MaestroApiAccessToken)
            BARBuildId: ${{ parameters.BARBuildId }}
            PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}

- ${{ if le(parameters.PublishingInfraVersion, 2) }}:
  - template: \eng\common\templates\post-build\post-build.yml
    parameters:
      PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}
      BARBuildId: ${{ parameters.BARBuildId }}
    
      enableSourceLinkValidation: ${{ parameters.EnableSourceLinkValidation }}
      enableNugetValidation: ${{ parameters.EnableNugetValidation }}
      enableSigningValidation: ${{ parameters.EnableSigningValidation }}
      
      validateDependsOn:
        - prepare_promotion
           
      publishInstallersAndChecksums: ${{ parameters.PublishInstallersAndChecksums }}
      symbolPublishingAdditionalParameters: ${{ parameters.SymbolPublishingAdditionalParameters }}
      artifactsPublishingAdditionalParameters: ${{ parameters.ArtifactsPublishingAdditionalParameters }}
      signingValidationAdditionalParameters: ${{ parameters.SigningValidationAdditionalParameters }}

- ${{ if ge(parameters.PublishingInfraVersion, 3) }}:
  - template: \eng\publishing\v3\publish.yml
    parameters:
      PromoteToChannelIds: ${{ parameters.PromoteToChannelIds }}
      BARBuildId: ${{ parameters.BARBuildId }}
    
      enableSourceLinkValidation: ${{ parameters.EnableSourceLinkValidation }}
      enableNugetValidation: ${{ parameters.EnableNugetValidation }}
      enableSigningValidation: ${{ parameters.EnableSigningValidation }}
      
      validateDependsOn:
        - prepare_promotion
      
      publishInstallersAndChecksums: ${{ parameters.PublishInstallersAndChecksums }}
      symbolPublishingAdditionalParameters: ${{ parameters.SymbolPublishingAdditionalParameters }}
      artifactsPublishingAdditionalParameters: ${{ parameters.ArtifactsPublishingAdditionalParameters }}
      signingValidationAdditionalParameters: ${{ parameters.SigningValidationAdditionalParameters }}
