parameters:
  # Which target pool should be used
  pool:
    name: 'NetCoreInternal-Pool'
    queue: 'BuildPool.Windows.10.Amd64.VS2017'

stages:
- stage: Publish
  dependsOn: validate
  variables:
    - template: ../common-variables.yml
  displayName: Developer Channel
  jobs:
  - template: ../setup-maestro-vars.yml
    parameters:
      pool:
        name: ${{ parameters.pool.name }}
        queue: ${{ parameters.pool.queue }}

  - job:
    displayName: Symbol Publishing
    dependsOn: setupMaestroVars
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.PublicDevRelease_Channel_Id)
    pool:
      name: ${{ parameters.pool.name }}
      queue: ${{ parameters.pool.queue }}
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download PDB Artifacts
        inputs:
          buildType: current
          artifactName: PDBArtifacts
        continueOnError: true

      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          buildType: current
          artifactName: BlobArtifacts

      - task: PowerShell@2
        displayName: Publish
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishToSymbolServers -restore -msbuildEngine dotnet
            /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat) 
            /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat) 
            /p:PDBArtifactsDirectory='$(Build.ArtifactStagingDirectory)/PDBArtifacts/'
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)/BlobArtifacts/'
            /p:Configuration=Release

  - job:
    displayName: Publish to Static Feed
    dependsOn: setupMaestroVars
    variables:
      BARBuildId: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.PublicDevRelease_Channel_Id)
    pool:
      name: ${{ parameters.pool.name }}
      queue: ${{ parameters.pool.queue }}
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Package Artifacts
        inputs:
          buildType: current
          artifactName: PackageArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          buildType: current
          artifactName: BlobArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Asset Manifests
        inputs:
          buildType: current
          artifactName: AssetManifests

      - task: PowerShell@2
        displayName: Publish
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishToPackageFeed -restore -msbuildEngine dotnet 
            /p:AccountKeyToStaticFeed='$(dotnetfeed-storage-access-key-1)' 
            /p:BARBuildId=$(BARBuildId) 
            /p:MaestroApiEndpoint='$(MaestroApiEndpoint)'
            /p:BuildAssetRegistryToken='$(MaestroApiPassword)' 
            /p:ManifestsBasePath='$(Build.ArtifactStagingDirectory)/AssetManifests/' 
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)/BlobArtifacts/' 
            /p:PackageBasePath='$(Build.ArtifactStagingDirectory)/PackageArtifacts/' 
            /p:ArtifactsCategory='$(_DotNetArtifactsCategory)' 
            /p:OverrideAssetsWithSameName=true 
            /p:PassIfExistingItemIdentical=true 
            /p:Configuration=Release 
        

- stage: PublishValidation
  displayName: Publish Validation
  variables:
    - template: ../common-variables.yml  
  jobs:
  - template: ../setup-maestro-vars.yml
    parameters:
      pool:
        name: ${{ parameters.pool.name }}
        queue: ${{ parameters.pool.queue }}

  - job:
    displayName: Symbol Availability
    dependsOn: setupMaestroVars
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.PublicDevRelease_Channel_Id)
    pool:
      name: ${{ parameters.pool.name }}
      queue: ${{ parameters.pool.queue }}
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Package Artifacts
        inputs:
          buildType: current
          artifactName: PackageArtifacts

      - task: PowerShell@2
        displayName:  Install DotNet Symbol
        inputs:
          scriptType: inlineScript
          inlineScript: |
            dotnet tool install dotnet-symbol --tool-path $(Agent.BuildDirectory)/SymbolTool --version $(SymbolToolVersion) --add-source https://api.nuget.org/v3/index.json
        
      - task: PowerShell@2
        displayName: Check Symbol Availability
        inputs:
          targetType: filePath
          filePath: '$(Build.SourcesDirectory)/eng/common/release/CheckSymbols.ps1'
          arguments: -InputPath $(Build.ArtifactStagingDirectory)/PackageArtifacts/ -ExtractPath $(Agent.BuildDirectory)/Temp/ -SymbolToolPath $(Agent.BuildDirectory)/SymbolTool/

  - job:
    displayName: Gather Drop
    dependsOn: setupMaestroVars
    variables:
      BARBuildId: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.PublicDevRelease_Channel_Id)
    pool:
      name: ${{ parameters.pool.name }}
      queue: ${{ parameters.pool.queue }}
    steps:
      - task: PowerShell@2
        displayName: Setup Darc CLI
        inputs:
          targetType: filePath
          filePath: '$(Build.SourcesDirectory)/eng/common/darc-init.ps1'

      - task: PowerShell@2
        displayName: Run Darc gather-drop
        inputs:
          scriptType: inlineScript
          inlineScript: |
            darc gather-drop --non-shipping --continue-on-error --id $(BARBuildId) --output-dir $(Agent.BuildDirectory)/Temp/Drop/ --bar-uri $(MaestroApiEndpoint) --password $(MaestroApiPassword)
        continueOnError: true

  - template: ../promote-build.yml
    parameters:
      ChannelId: ${{ variables.PublicDevRelease_Channel_Id }}
      pool:
        name: ${{ parameters.pool.name }}
        queue: ${{ parameters.pool.queue }}
