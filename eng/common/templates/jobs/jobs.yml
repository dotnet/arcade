parameters:
  # Optional: 'true' if failures in job.yml job should not fail the job
  continueOnError: false

  # Optional: Enable installing Microbuild plugin
  #           if 'true', these "variables" must be specified in the variables object or as part of the queue matrix
  #             _TeamName - the name of your team
  #             _SignType - 'test' or 'real'
  enableMicrobuild: false

  # Optional: Include PublishBuildArtifacts task
  enablePublishBuildArtifacts: false

  # Optional: Enable publishing to the build asset registry
  enablePublishBuildAssets: false

  # Optional: Include PublishTestResults task
  enablePublishTestResults: false

  # Optional: enable sending telemetry
  #           if 'true', these "variables" must be specified in the variables object or as part of the queue matrix
  #             _HelixBuildConfig - differentiate between Debug, Release, other
  #             _HelixSource - Example: build/product/
  #             _HelixType - Example: official/dotnet/arcade/$(Build.SourceBranch)
  enableTelemetry: false

  # Required: A collection of jobs to run - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#job
  jobs: []

  # Optional: If specified, then automatically derive "_HelixSource" variable for telemetry
  helixRepo: ''

  # Optional: Define the type for helix telemetry (must end in '/')
  helixType: build/product/

  # Optional: Override automatically derived dependsOn value for "publish build assets" job
  publishBuildAssetsDependsOn: ''

  # Optional: should run as a public build even in the internal project
  #           if 'true', the build won't run any of the internal only steps, even if it is running in non-public projects.
  runAsPublic: false

# Internal resources (telemetry, microbuild) can only be accessed from non-public projects,
# and some (Microbuild) should only be applied to non-PR cases for internal builds.

jobs:
- ${{ each job in parameters.jobs }}:
  - template: ../job/job.yml
    parameters: 
      # pass along parameters
      continueOnError: ${{ parameters.continueOnError }}

      enableMicrobuild: ${{ parameters.enableMicrobuild }}

      enablePublishBuildArtifacts: ${{ parameters.enablePublishBuildArtifacts }}

      enablePublishBuildAssets: ${{ parameters.enablePublishBuildAssets }}

      enablePublishTestResults: ${{ parameters.enablePublishTestResults }}

      enableTelemetry: ${{ parameters.enableTelemetry }}

      runAsPublic: ${{ parameters.runAsPublic }}

      # pass along job properties
      cancelTimeoutInMinutes: ${{ job.cancelTimeoutInMinutes }}

      condition: ${{ job.condition }}

      container: ${{ job.container }}

      dependsOn: ${{ job.dependsOn }}

      displayName: ${{ job.displayName }}

      helixRepo: ${{ parameters.helixRepo }}

      helixType: ${{ parameters.helixType }}

      name: ${{ job.job }}

      pool: ${{ job.pool }}

      strategy: ${{ job.strategy }}

      timeoutInMinutes: ${{ job.timeoutInMinutes }}

      variables: ${{ job.variables }}

      workspace: ${{ job.workspace }}

      steps: ${{ job.steps }}

- ${{ if and(eq(parameters.enablePublishBuildAssets, true), eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: ../job/publish-build-assets.yml
    parameters:
      continueOnError: ${{ parameters.continueOnError }}
      dependsOn:
      - ${{ if ne(parameters.publishBuildAssetsDependsOn, '') }}:
        - ${{ each job in parameters.publishBuildAssetsDependsOn }}:
          - ${{ job.job }}
      - ${{ if eq(parameters.publishBuildAssetsDependsOn, '') }}:
        - ${{ each job in parameters.jobs }}:
          - ${{ job.job }}
      pool:
        vmImage: vs2017-win2016
      runAsPublic: ${{ parameters.runAsPublic }}
