<Project>

  <PropertyGroup>
    <XliffTasksProjectDirectory>$([MSBuild]::NormalizeDirectory('$(RepoRoot)', 'src', 'Microsoft.DotNet.XliffTasks'))</XliffTasksProjectDirectory>
    <XliffTasksBaseOutputDirectory>$(ArtifactsBinDir)Microsoft.DotNet.XliffTasks\$(Configuration)\</XliffTasksBaseOutputDirectory>
    <!-- Keep TFMs in sync with Microsoft.DotNet.XliffTasks.csproj -->
    <XliffTasksDirectory Condition="'$(MSBuildRuntimeType)' == 'Core'">$(XliffTasksBaseOutputDirectory)$(NetToolMinimum)\</XliffTasksDirectory>
    <XliffTasksDirectory Condition="'$(MSBuildRuntimeType)' != 'Core'">$(XliffTasksBaseOutputDirectory)$(NetFrameworkToolCurrent)\</XliffTasksDirectory>
    <!-- XliffTasks tasks should be invoked out-of-proc in this repository to avoid assembly lock issues. -->
    <XliffTasksTaskFactory>TaskHostFactory</XliffTasksTaskFactory>
    <!-- Make sure that the XliffTasks P2P is built before xliff targets are invoked. -->
    <GetXlfSourcesDependsOnTargets>ResolveProjectReferences</GetXlfSourcesDependsOnTargets>
  </PropertyGroup>

  <!-- Props and targets files get automatically imported when referencing XliffTasks via a PackageReference,
       but that's not the case when using ProjectReference: https://github.com/NuGet/Home/issues/6624.
       Props files should ideally be imported from the project file or other props files but it doesn't matter in this case. -->
  <Import Project="$(XliffTasksProjectDirectory)build\Microsoft.DotNet.XliffTasks.props" />
  <Import Project="$(XliffTasksProjectDirectory)build\Microsoft.DotNet.XliffTasks.targets" Condition="'$(IsCrossTargetingBuild)' != 'true'" />
  <Import Project="$(XliffTasksProjectDirectory)buildCrossTargeting\Microsoft.DotNet.XliffTasks.targets" Condition="'$(IsCrossTargetingBuild)' == 'true'" />

  <ItemGroup>
    <ProjectReference Include="$(XliffTasksProjectDirectory)Microsoft.DotNet.XliffTasks.csproj"
                      ReferenceOutputAssembly="false"
                      PrivateAssets="all"
                      Private="false">
      <!-- Keep TFMs in sync with Microsoft.DotNet.XliffTasks.csproj -->
      <SetTargetFramework Condition="'$(MSBuildRuntimeType)' == 'Core'">TargetFramework=$(NetToolMinimum)</SetTargetFramework>
      <SetTargetFramework Condition="'$(MSBuildRuntimeType)' != 'Core'">TargetFramework=$(NetFrameworkToolCurrent)</SetTargetFramework>
    </ProjectReference>
  </ItemGroup>

</Project>
