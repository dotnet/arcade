phases:

- phase: Build_Windows_NT
  displayName: Build Windows_NT
  variables: 
    __PublishType: blob
    __PublishBlobFeedUrl: https://dotnetfeed.blob.core.windows.net/dotnet-tools-internal/temp/index.json
  queue:
    parallel: 2
    demands: 
      - agent.os -equals Windows_NT
    matrix:
      Debug:
        buildConfig: Debug
      Release:
        buildConfig: Release
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
  - script: build\CIBuild.cmd -configuration $(buildConfig)
    name: Build
    condition: ne(variables['buildConfig'], 'Release')
    env:
      OfficialBuildId: $(BUILD.BUILDNUMBER)
  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'DotNet-VSTS'
      KeyVaultName: EngKeyVault
      SecretsFilter: 'dotnetfeed-storage-access-key-1'
    condition: eq(variables['buildConfig'], 'Release')
  # Build and Publish on the Release configuration
  - script: build\CIBuild.cmd -configuration $(buildConfig)
              /p:PB_PublishType=$(__PublishType)
              /p:PB_PublishBlobFeedUrl=$(__PublishBlobFeedUrl)
              /p:PB_PublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
    name: Build_Publish
    displayName: Build / Publish
    env:
      OfficialBuildId: $(BUILD.BUILDNUMBER)
    condition: eq(variables['buildConfig'], 'Release')

- phase: Build_Linux
  displayName: Build Linux
  variables:
    # set _PREVIEW_VSTS_DOCKER_IMAGE to the docker image you want to automatically run in a container
    _PREVIEW_VSTS_DOCKER_IMAGE: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304
  queue:
    parallel: 2
    demands:
    - agent.os -equals linux
    matrix:
      Debug:
        buildConfig: Debug
      Release:
        buildConfig: Release
  steps:
    - checkout: self
      clean: true
      fetchDepth: 1
    - script: build/cibuild.sh --configuration $(buildConfig)
      name: Build
      env:
        OfficialBuildId: $(BUILD.BUILDNUMBER)
        
