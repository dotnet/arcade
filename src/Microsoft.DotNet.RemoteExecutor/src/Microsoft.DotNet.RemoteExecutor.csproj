<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(NetCurrent);$(NetFrameworkMinimum)</TargetFrameworks>
    <!-- The assembly is used as both a library and an executable. -->
    <OutputType>Exe</OutputType>
    <Description>This package provides support for running tests out-of-process.</Description>
    <ExcludeFromSourceBuild>true</ExcludeFromSourceBuild>
    <IsPackable>true</IsPackable>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);PackBuildOutputs</TargetsForTfmSpecificContentInPackage>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Diagnostics.Runtime" Version="$(MicrosoftDiagnosticsRuntimeVersion)" />
    <PackageReference Include="System.Runtime.InteropServices.RuntimeInformation" Version="$(SystemRuntimeInteropServicesRuntimeInformation)" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" />
  </ItemGroup>

  <ItemGroup>
    <None Include="build\$(MSBuildProjectName).targets" PackagePath="build\$(MSBuildProjectName).targets" Pack="true" />
    <None Include="$(RepoRoot)LICENSE.txt" PackagePath="LICENSE.txt" Pack="true" />
    <None Include="$(RepoRoot)THIRD-PARTY-NOTICES.txt" PackagePath="THIRD-PARTY-NOTICES.txt" Pack="true" />
  </ItemGroup>

  <Target Name="PackBuildOutputs"
          DependsOnTargets="CopyFilesToOutputDirectory">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(ProjectDepsFilePath)" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'" PackagePath="lib\$(TargetFramework)\" />
      <TfmSpecificPackageFile Include="@(AppConfigWithTargetPath->'$(OutDir)%(TargetPath)')" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" PackagePath="lib\$(TargetFramework)\" />
    </ItemGroup>
  </Target>

</Project>
