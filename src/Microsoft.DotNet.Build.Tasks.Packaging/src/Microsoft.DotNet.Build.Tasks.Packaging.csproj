<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(NetCurrent);$(NetFrameworkToolCurrent)</TargetFrameworks>
    <IsPackable>true</IsPackable>
    <PackageType>MSBuildSdk</PackageType>
    <Title>Packaging Targets and Tasks used by Dotnet repos</Title>
    <PackageDescription>This package provides the following MSBuild tasks:

- ApplyBaseLine
- ApplyMetaPackages
- ApplyPreReleaseSuffix
- CreateTrimDependencyGroups
- FilterUnknownPackages
- GeneratePackageReport
- GenerateRuntimeDependencies
- GetApplicableAssetsFromPackageReports
- GetApplicableAssetsFromPackages
- GetAssemblyReferences
- GetInboxFrameworks
- GetLastStablePackage
- GetLayoutFiles
- GetMinimumNETStandard
- GetPackageDescription
- GetPackageDestination
- GetPackageFromModule
- GetPackageVersion
- GetSupportedPackagesFromPackageReports
- HarvestPackage
- NuGetPack
- PromoteDependencies
- SplitDependenciesBySupport
- SplitReferences
- UpdatePackageIndex
- ValidationTask</PackageDescription>
    <BeforePack>$(BeforePack);AddRuntimeJson</BeforePack>
  </PropertyGroup>

  <ItemGroup>
    <!-- nuget pack needs an actual empty file to use for placeholders for empty directories
         so we must provide one.
         nuget's pack task treats _._ as special, to pack it must be in a folder on its own -->
    <None Include="build\content\_._"
          Pack="true"
          PackagePath="build\content\_._" />
  </ItemGroup>

  <ItemGroup>
    <PackageDownload Include="Microsoft.NETCore.Platforms" Version="[$(MicrosoftNETCorePlatformsVersion)]" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="$(MicrosoftBuildTasksCoreVersion)" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="NuGet.Commands" Version="$(NuGetCommandsVersion)" />
    <PackageReference Include="NuGet.Packaging" Version="$(NuGetPackagingVersion)" />
    <PackageReference Include="NuGet.ProjectModel" Version="$(NuGetProjectModelVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
    <Compile Include="..\..\Common\Internal\AssemblyResolver.cs" />
    <Compile Include="..\..\Common\Internal\BuildTask.Desktop.cs" />
    <PackageReference Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
  </ItemGroup>

   <ItemGroup>
    <Compile Include="..\..\Common\Internal\BuildTask.cs" />
    <Compile Include="..\..\Common\Internal\EnumerableExtensions.cs" />
  </ItemGroup>

  <Target Name="AddRuntimeJson" AfterTargets="ResolveReferences">
    <PropertyGroup>
      <_runtimeJsonPath>$(NuGetPackageRoot)microsoft.netcore.platforms\$(MicrosoftNETCorePlatformsVersion)\runtime.json</_runtimeJsonPath>
    </PropertyGroup>

     <Error Condition="'$(_runtimeJsonPath)'==''" Text="Could not locate '$(_runtimeJsonPath)'." />
     
     <ItemGroup>
       <None Include="$(_runtimeJsonPath)"
             CopyToOutputDirectory="PreserveNewest"
             Pack="true"
             PackagePath="build\runtime.json" />
     </ItemGroup>
  </Target>

  <Import Project="$(RepositoryEngineeringDir)BuildTask.targets" />

</Project>
