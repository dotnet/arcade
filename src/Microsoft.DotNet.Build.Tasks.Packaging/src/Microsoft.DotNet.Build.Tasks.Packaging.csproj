<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;$(TargetFrameworkForNETSDK)</TargetFrameworks>
    <TargetFrameworks Condition="'$(DotNetBuildFromSource)' == 'true'">$(TargetFrameworkForNETSDK)</TargetFrameworks>
    <CopyLocalLockFileAssemblies Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp2.1'))">true</CopyLocalLockFileAssemblies>
    <PackageType>MSBuildSdk</PackageType>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IsPackable>true</IsPackable>

    <!-- Package Properties -->
    <Title>Packaging Targets and Tasks used by Dotnet repos</Title>
    <MinClientVersion>2.8.1</MinClientVersion>
    <PackageDescription>This package provides the following MSBuild tasks:

- ApplyBaseLine
- ApplyMetaPackages
- ApplyPreReleaseSuffix
- CreateTrimDependencyGroups
- FilterUnknownPackages
- GenerateNetStandardSupportTable
- GeneratePackageReport
- GenerateRuntimeDependencies
- GenerateRuntimeGraph
- GetApplicableAssetsFromPackageReports
- GetApplicableAssetsFromPackages
- GetAssemblyReferences
- GetInboxFrameworks
- GetLastStablePackage
- GetLayoutFiles
- GetMinimumNETStandard
- GetPackageDescription
- GetPackageDestination
- GetPackageFromModule
- GetPackageVersion
- GetSupportedPackagesFromPackageReports
- HarvestPackage
- NuGetPack
- PromoteDependencies
- SplitDependenciesBySupport
- SplitReferences
- UpdatePackageIndex
- ValidationTask
- VerifyClosure
- VerifyTypes</PackageDescription>

    <DefaultItemExcludes Condition="'$(TargetFramework)' != 'net472'">**/*.Desktop.*</DefaultItemExcludes>
    <BeforePack>$(BeforePack);AddRuntimeJson</BeforePack>
  </PropertyGroup>

  <ItemGroup>
    <!-- nuget pack needs an actual empty file to use for placeholders for empty directories
         so we must provide one.
         nuget's pack task treats _._ as special, to pack it must be in a folder on its own -->
    <None Include="build\content\_._" Pack="true" PackagePath="build\content\_._" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build" Version="$(MicrosoftBuildVersion)" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="$(MicrosoftBuildTasksCoreVersion)" />
    <!--Need to reference version 2.8.2 of CodeAnalysis so that we don't have downgrade issues with System.Reflection.Metadata version-->
    <PackageReference Include="Microsoft.CodeAnalysis" Version="2.8.2" Condition="'$(DotNetBuildFromSource)' != 'true'" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="NuGet.Commands" Version="$(NuGetVersion)" />
    <PackageReference Include="NuGet.Packaging" Version="$(NuGetVersion)" />
    <PackageReference Include="NuGet.ProjectModel" Version="$(NuGetVersion)" />
    <PackageReference Include="System.Text.Json" Version="$(SystemTextJsonVersion)" />
    <PackageReference Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
    <PackageReference Include="Microsoft.NETCore.Platforms" Version="$(MicrosoftNETCorePlatformsVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net472'">
    <Compile Include="..\..\Common\Internal\AssemblyResolver.cs" />
    <Compile Include="..\..\Common\Internal\BuildTask.Desktop.cs" />
  </ItemGroup>

   <ItemGroup>
    <Compile Include="..\..\Common\Internal\BuildTask.cs" />
    <Compile Include="..\..\Common\Internal\EnumerableExtensions.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Common\Microsoft.Arcade.Common\Microsoft.Arcade.Common.csproj" />
  </ItemGroup>

  <ItemGroup>
    <_candidatPackageFolders Include="$(NuGetPackageFolders)" />
  </ItemGroup>

  <!-- Find the packages from one of many package folders -->
  <Target Name="FindRuntimeJson" Inputs="%(_candidatPackageFolders.Identity)" Outputs="unused">
    <PropertyGroup>
      <_candidatePackageFolder>%(_candidatPackageFolders.Identity)</_candidatePackageFolder>
      <_runtimeJsonSubPath>Microsoft.NETCore.Platforms\2.1.0\runtime.json</_runtimeJsonSubPath>
      <_runtimeJsonPath Condition="'$(_runtimeJsonPath)' == '' AND Exists('$(_candidatePackageFolder)\$(_runtimeJsonSubPath)')">$(_candidatePackageFolder)\$(_runtimeJsonSubPath)</_runtimeJsonPath>
      <_runtimeJsonPath Condition="'$(_runtimeJsonPath)' == '' AND Exists('$(_candidatePackageFolder)\$(_runtimeJsonSubPath.ToLower())')">$(_candidatePackageFolder)\$(_runtimeJsonSubPath.ToLower())</_runtimeJsonPath>
    </PropertyGroup>
  </Target>

  <Target Name="AddRuntimeJson" DependsOnTargets="FindRuntimeJson" AfterTargets="ResolveReferences">
     <Error Condition="'$(_runtimeJsonPath)'==''" Text="Could not locate '$(_runtimeJsonSubPath)' under any of '$(NuGetPackageFolders)'" />
     <ItemGroup>
       <None Include="$(_runtimeJsonPath)" CopyToOutputDirectory="PreserveNewest" Pack="true" PackagePath="build\runtime.json" />
     </ItemGroup>
  </Target>

  <Import Project="$(RepoRoot)eng\BuildTask.targets" />
</Project>
