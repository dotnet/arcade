<?xml version="1.0" encoding="utf-8"?>
<!-- All Rights Reserved. Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- Workaround for https://github.com/Microsoft/msbuild/issues/1310 -->
  <Target Name="ForceGenerationOfBindingRedirects"
          AfterTargets="ResolveAssemblyReferences"
          BeforeTargets="GenerateBindingRedirects"
          Condition="'$(AutoGenerateBindingRedirects)' == 'true'">
    <PropertyGroup>
      <!-- Needs to be set in a target because it has to be set after the initial evaluation in the common targets -->
      <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    </PropertyGroup>
  </Target>

  <!--
    Workaround to fix IntelliSense file generation for XAML projects
    https://github.com/dotnet/project-system/issues/2488
  -->
  <Target Name="WorkaroundForXamlIntelliSenseBuildIssue" AfterTargets="_CheckCompileDesignTimePrerequisite">
    <PropertyGroup>
      <BuildingProject>false</BuildingProject>
    </PropertyGroup>
  </Target>

  <PropertyGroup>
    <IsWpfTempProject>false</IsWpfTempProject>
    <IsWpfTempProject Condition="'$(MSBuildProjectExtension)' == '.tmp_proj' or $(MSBuildProjectName.EndsWith('_wpftmp'))">true</IsWpfTempProject>
  </PropertyGroup>

  <!--
    Workaround for WPF temp projects.

    XAML targets create a temp project with OutDir set, which makes the SDK create an empty directory for it,
    polluting the output dir. Avoid creating these directories.
    https://github.com/dotnet/sdk/issues/1367

    WPF temp-projects do not import .props and .targets files from NuGet packages.
    (see https://github.com/dotnet/sourcelink/issues/91)
  -->
  <PropertyGroup Condition="'$(IsWpfTempProject)' == 'true'">
    <OutDir/>
    <DeterministicSourcePaths Condition="'$(IsWpfTempProject)' == 'true'">false</DeterministicSourcePaths>
  </PropertyGroup>

  <!--
    Workaround for a race condition https://github.com/Microsoft/msbuild/issues/1479.
  -->
  <PropertyGroup>
    <TargetFrameworkMonikerAssemblyAttributesPath>$(IntermediateOutputPath)$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>

  <!-- Portable PDBs are not included by default -->
  <PropertyGroup Condition="'$(DebugType)' == 'portable'">
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <!--
    Workarounds for insufficient support for tools packages by NuGet Pack: https://github.com/NuGet/Home/issues/6321.
    
    Project that produce tools packages use .nuspec file in order to include all the needed dependencies.
    This target translates common msbuild properties to NuSpec properties.
  -->
  <Target Name="InitializeStandardNuspecProperties" 
          BeforeTargets="GenerateNuspec"
          DependsOnTargets="_InitializeNuspecRepositoryInformationPropertiesWorkaround"
          Condition="'$(NuspecFile)' != '' and '$(NuspecProperties)' == ''">

    <PropertyGroup>
      <PackageProjectUrl Condition="'$(PackageProjectUrl)' == ''">$(RepositoryUrl)</PackageProjectUrl>
    </PropertyGroup>

    <Error Text="Description must be specified" Condition="'$(Description)' == ''"/>
    <Error Text="PackageProjectUrl must be specified" Condition="'$(PackageProjectUrl)' == ''"/>

    <ItemGroup>
      <NuSpecProperty Include="PackageId=$(PackageId)"/>
      <NuSpecProperty Include="Authors=$(Authors)"/>
      <NuSpecProperty Include="Description=$(Description)"/>    
      <NuSpecProperty Include="Copyright=$(Copyright)"/>
      <NuSpecProperty Include="Version=$(Version)"/>
      <NuSpecProperty Include="Serviceable=$(Serviceable)"/>    
      <NuSpecProperty Include="DevelopmentDependency=$(DevelopmentDependency)"/>                        
      <NuSpecProperty Include="RequireLicenseAcceptance=$(PackageRequireLicenseAcceptance)"/>                                     
      <NuSpecProperty Include="PackageLicenseUrl=$(PackageLicenseUrl)"/>                
      <NuSpecProperty Include="PackageProjectUrl=$(PackageProjectUrl)"/>                
      <NuSpecProperty Include="PackageIconUrl=$(PackageIconUrl)" Condition="'$(PackageIconUrl)' != ''" />          
      <NuSpecProperty Include="PackageReleaseNotes=$(PackageReleaseNotes)" Condition="'$(PackageReleaseNotes)' != ''" />                    
      <NuSpecProperty Include="PackageTags=$(PackageTags)" Condition="'$(PackageTags)' != ''" />    
      <NuSpecProperty Include="RepositoryUrl=$(RepositoryUrl)" Condition="'$(RepositoryUrl)' != ''" />        
      <NuSpecProperty Include="RepositoryType=$(RepositoryType)" Condition="'$(RepositoryType)' != ''" />          
      <NuSpecProperty Include="RepositoryCommit=$(RepositoryCommit)" Condition="'$(RepositoryCommit)' != ''" />              
      <NuSpecProperty Include="ProjectDirectory=$(MSBuildProjectDirectory)"/>                     
    </ItemGroup>
    <PropertyGroup>
      <NuspecProperties>@(NuSpecProperty, ';')</NuspecProperties>
    </PropertyGroup>
  </Target>

  <!--
    Initialize Repository* properties from properties set by a source control package, if available in the project.
  -->
  <Target Name="_InitializeNuspecRepositoryInformationPropertiesWorkaround"
          DependsOnTargets="InitializeSourceControlInformation"
          Condition="'$(SourceControlInformationFeatureSupported)' == 'true'">
    <PropertyGroup>
      <!-- The project must specify PublishRepositoryUrl=true in order to publish the URL, in order to prevent inadvertent leak of internal URL. -->
      <RepositoryUrl Condition="'$(RepositoryUrl)' == '' and '$(PublishRepositoryUrl)' == 'true'">$(PrivateRepositoryUrl)</RepositoryUrl>
      <RepositoryCommit Condition="'$(RepositoryCommit)' == ''">$(SourceRevisionId)</RepositoryCommit>
    </PropertyGroup>
  </Target>

  <!-- 
    Publish before packaging (see https://github.com/NuGet/Home/issues/6321).
    Note: TargetFrameworkIdentifier is defined by the .NET SDK imported before these targets
  -->
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(NuspecFile)' != ''">
    <TargetsForTfmSpecificContentInPackage>Publish;$(TargetsForTfmSpecificContentInPackage)</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>

  <!--
    Workaround for not having VS 15.7 on MicroBuild machines.
    Remove when machines are upgraded.
  -->
  <Target Name="InitializeSourceControlInformation" />
  <PropertyGroup>
    <SourceControlInformationFeatureSupported>true</SourceControlInformationFeatureSupported>
  </PropertyGroup>

</Project>
