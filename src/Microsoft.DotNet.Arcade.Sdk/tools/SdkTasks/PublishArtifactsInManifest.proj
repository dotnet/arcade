<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Execute">
  <!--
    The target in this file initially calls `SetupTargetFeeds.proj` to create the list of
    target feed descriptors for the artifacts and then calls the `PublishArtifactsInManifest` 
    task (from Tasks.Feed) to publish the artifacts described in the informed build manifest.
    
    Parameters:
      - PublishingInfraVersion                  : Which version of the publishing infra should be used.
      - TargetChannels                          : Comma-separated list of Maestro++ Channel IDs to which the build should
                                                  be assigned to once the assets are published.
      - ManifestsBasePath                       : Full path to place where build manifests are stored.
      - BlobBasePath                            : Full path to place where all packages/blobs, from all manifests, are stored.
      - PackageBasePath                         
      - BARBuildId                              : BAR ID of the build being published.
      - MaestroApiEndpoint                      : Maestro API/Token. Used for updating asset locations.
      - BuildAssetRegistryToken
      - NugetPath                               : Full path to nuget.exe. Used for pushing to AzDO feeds.
      - PublishInstallersAndChecksums           : Whether installers & checksums should be published.
      - AzureDevOpsFeedsKey                     : Token used to publish to *any* AzDO feed in dnceng.

      Optional aka.ms link generation parameters:
        - AkaMSClientId                         : Client ID for the aka.ms AD application
        - AkaMSClientSecret                     : Client secret for the aka.ms AD application
        - AkaMSTenant                           : Tenant ID for aka.ms link generation. Defaults to ncd
        - AkaMSOwners                           : Semi-colon delimited list of aliases of the owners of generated links. Defaults to dn-bot
        - AkaMSCreatedBy                        : Semi-colon delimited list of aliases of the creator/updator links. Defaults to dn-bot

    Parameters required by SetupTargetFeeds.proj:
      - IsInternalBuild
      - IsStableBuild
      - RepositoryName
      - CommitSha
      - AzureStorageAccountName
      - AzureStorageAccountKey
      - AzureDevOpsFeedsBaseUrl
      - ArtifactsCategory
      - AzureStorageTargetFeedPAT               : PAT for accessing dotnetfeed Azure Storage

    Optional parameters for SetupTargetFeeds.proj
      - PublishInstallersAndChecksums   : This control whether installers & checksums should be published to public feeds on public builds
     
      Parameters for public builds:
          - InstallersTargetStaticFeed
          - InstallersAzureAccountKey
          - ChecksumsTargetStaticFeed
          - ChecksumsAzureAccountKey
        
      Parameters for internal builds:
          - InternalInstallersTargetStaticFeed
          - InternalInstallersTargetStaticFeedKey
          - InternalChecksumsTargetStaticFeed
          - InternalChecksumsTargetStaticFeedKey
  -->

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <NETCORE_ENGINEERING_TELEMETRY>Publish</NETCORE_ENGINEERING_TELEMETRY>

    <!-- Default publishing infra target is 2. -->
    <PublishingInfraVersion Condition="'$(PublishingInfraVersion)' == ''">2</PublishingInfraVersion>
  </PropertyGroup>

  <Import Project="SetupTargetFeeds.proj" Condition="'$(PublishingInfraVersion)' == '2'" />

  <Target Name="Execute">
    <CallTarget Targets="SetupTargetFeeds" Condition="'$(PublishingInfraVersion)' == '2'">
      <Output TaskParameter="TargetOutputs" ItemName="TargetFeedConfig"/>
    </CallTarget>

    <Error Condition="'$(ManifestsBasePath)' == ''" Text="ManifestsBasePath is empty. Please provide the full path to asset manifest(s) directory." />
    <Error Condition="'$(BlobBasePath)' == '' OR '$(PackageBasePath)' == ''" Text="A valid full path to BlobBasePath and PackageBasePath is required." />

    <ItemGroup>
      <ManifestFiles Include="$(ManifestsBasePath)\*.xml" />
    </ItemGroup>

    <PropertyGroup>
      <AkaMSTenant Condition="'$(AkaMSTenant)' == ''">ncd</AkaMSTenant>
      <AkaMSOwners Condition="'$(AkaMSOwners)' == ''">dn-bot</AkaMSOwners>
      <AkaMSCreatedBy Condition="'$(AkaMSCreatedBy)' == ''">dn-bot</AkaMSCreatedBy>

      <InstallersFeedKey>$(InstallersAzureAccountKey)</InstallersFeedKey>
      <InstallersFeedKey Condition="'$(InternalBuild)' == 'true'">$(InternalInstallersTargetStaticFeedKey)</InstallersFeedKey>

      <ChecksumsFeedKey>$(ChecksumsAzureAccountKey)</ChecksumsFeedKey>
      <ChecksumsFeedKey Condition="'$(InternalBuild)' == 'true'">$(InternalChecksumsTargetStaticFeedKey)</ChecksumsFeedKey>
    </PropertyGroup>

    <Error
      Condition="'@(ManifestFiles)' == ''"
      Text="No manifest file was found in the provided path: $(ManifestsBasePath)" />

    <!-- 
      Publish artifacts from all manifests.
    -->
    <PublishArtifactsInManifest
      InternalBuild="$(IsInternalBuild)"
      TargetFeedConfig="@(TargetFeedConfig)"
      TargetChannels="$(TargetChannels)"
      BARBuildId="$(BARBuildId)"
      MaestroApiEndpoint="$(MaestroApiEndpoint)"
      BuildAssetRegistryToken="$(BuildAssetRegistryToken)"
      PublishInstallersAndChecksums="$(PublishInstallersAndChecksums)"
      ChecksumsFeedKey="$(ChecksumsFeedKey)"
      InstallersFeedKey="$(InstallersFeedKey)"
      AzureDevOpsFeedsKey="$(AzureDevOpsFeedsKey)"
      AzureStorageTargetFeedKey="$(AzureStorageTargetFeedPAT)"
      AssetManifestPaths="@(ManifestFiles)"
      BlobAssetsBasePath="$(BlobBasePath)"
      PackageAssetsBasePath="$(PackageBasePath)"
      NugetPath="$(NugetPath)"
      AkaMSClientId="$(AkaMSClientId)"
      AkaMSClientSecret="$(AkaMSClientSecret)"
      AkaMSTenant="$(AkaMSTenant)"
      AkaMSOwners="$(AkaMSOwners)"
      AkaMSCreatedBy="$(AkaMSCreatedBy)" />
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Feed" Version="$(MicrosoftDotNetBuildTasksFeedVersion)" />
  </ItemGroup>
</Project>
