<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->
<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Execute">

  <!--
    The target in this file initially calls `SetupTargetFeeds.proj` to create the list of
    target feed descriptors for the artifacts and then calls the `PublishArtifactsInManifest` 
    task (from Tasks.Feed) to publish the artifacts described in the informed build manifest.
    
    Parameters:
      - PublishingInfraVersion                  : Which version of the publishing infra should be used.
      - TargetChannels                          : Comma-separated list of Maestro++ Channel IDs to which the build should
                                                  be assigned to once the assets are published.
      - ManifestsBasePath                       : Full path to place where build manifests are stored.
      - BlobBasePath                            : Full path to place where all packages/blobs, from all manifests, are stored.
      - PackageBasePath                         
      - BARBuildId                              : BAR ID of the build being published.
      - MaestroApiEndpoint                      : Maestro API/Token. Used for updating asset locations.
      - BuildAssetRegistryToken
      - NugetPath                               : Full path to nuget.exe. Used for pushing to AzDO feeds.
      - PublishInstallersAndChecksums           : Whether installers & checksums should be published.
      - AzureDevOpsFeedsKey                     : Token used to publish to *any* AzDO feed in dnceng.
      - PublishSpecialClrFiles                  : If true, the special coreclr module indexed files like DBI, DAC and SOS are published
      - TempSymbolsAzureDevOpsOrg               : Azure DevOps org to use as staging ground for publishing symbols
      - TempSymbolsAzureDevOpsOrgToken          : Token for the Azure DevOps org to use as staging ground for publishing symbols. Must have symbol_manage scope.
      - SymbolRequestProject                    : Project to use for symbol publishing requests. This must be created with symt team and will hold publishing policies for public servers.
      - ManagedIdentityClientId                 : Client ID of the managed identity to use for symbolrequest and asset publishing.
      - SymbolPublishingExclusionsFile          : Files that have to be excluded from symbol publishing 
      - PdbArtifactsBasePath                    : Path to dlls and pdbs
      - AzdoApiToken                            : Token used to call the Azure Api to download artifacts and symbols
      - ArtifactsBasePath                       : Staging directory 
      - UseStreamingPublishing                  : When set to true it will use Azure Api to download the artifacts and symbols using streaming,
                                                  else all the artifacts and symbols are downloaded before publishing.

      Optional aka.ms link generation parameters:
        - AkaMSClientId                         : Client ID for the aka.ms Entra 
        - AkaMSClientCertificate                : Client certificate for the aka.ms Entra application
        - AkaMSTenant                           : Tenant ID for aka.ms link generation. Defaults to ncd
        - AkaMSOwners                           : Semi-colon delimited list of aliases of the owners of generated links. Defaults to dn-bot
        - AkaMSCreatedBy                        : Semi-colon delimited list of aliases of the creator/updator links. Defaults to dn-bot
        - BuildQuality                          : Build quality. Can be daily, signed, validated, preview or ga. Defaults to daily.

      Optional feed override parameters:
        - AllowFeedOverrides                    : Option to allow feed overrides if they are supplied. Defaults to false.
        - InstallersFeedOverride                : Override for the installers feed
        - ChecksumsFeedOverride                 : Override for the checksums feed
        - TransportFeedOverride                 : Override for the transport feed
        - ShippingFeedOverride                  : Override for the shipping feed
        - SymbolsFeedOverride                   : Override for the symbols feed

    Parameters required by SetupTargetFeeds.proj:
      - IsInternalBuild
      - IsStableBuild
      - RepositoryName
      - CommitSha
      - AzureStorageAccountName
      - AzureStorageAccountKey
      - AzureDevOpsFeedsBaseUrl
      - ArtifactsCategory

    Optional parameters for SetupTargetFeeds.proj
      - PublishInstallersAndChecksums   : This control whether installers & checksums should be published to public feeds on public builds
     
      Parameters for public builds:
          - InstallersTargetStaticFeed
          - InstallersAzureAccountKey
          - ChecksumsTargetStaticFeed
          - ChecksumsAzureAccountKey
        
      Parameters for internal builds:
          - InternalInstallersTargetStaticFeed
          - InternalInstallersTargetStaticFeedKey
          - InternalChecksumsTargetStaticFeed
          - InternalChecksumsTargetStaticFeedKey

    NOTE: For symbol publishing using V3, ConvertPortablePdbsToWindowsPdbs is always set to false, because this is an expensive task so this is done in the staging pipeline post signing.
  -->

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <NETCORE_ENGINEERING_TELEMETRY>Publish</NETCORE_ENGINEERING_TELEMETRY>
  </PropertyGroup>

  <Target Name="Execute">

    <Error Condition="'$(ManifestsBasePath)' == ''" Text="ManifestsBasePath is empty. Please provide the full path to asset manifest(s) directory." />
    <Error Condition="'$(BlobBasePath)' == '' OR '$(PackageBasePath)' == ''" Text="A valid full path to BlobBasePath and PackageBasePath is required." />

    <ItemGroup>
      <MergedManifest Condition="Exists('$(BlobBasePath)\MergedManifest.xml')" Include="$(BlobBasePath)\MergedManifest.xml" />
      <ManifestFiles Include="@(MergedManifest)" />
      <ManifestFiles Condition="'@(ManifestFiles)' == ''" Include="$(ManifestsBasePath)\*.xml" />
    </ItemGroup>

    <PropertyGroup>
      <AkaMSTenant Condition="'$(AkaMSTenant)' == ''">ncd</AkaMSTenant>
      <AkaMSOwners Condition="'$(AkaMSOwners)' == ''">jamshedd;leecow;rbhanda;v-susles</AkaMSOwners>
      <AkaMSCreatedBy Condition="'$(AkaMSCreatedBy)' == ''">dn-bot</AkaMSCreatedBy>
      <AkaMSGroupOwner Condition="'$(AkaMSGroupOwner)' == ''">ddfwlink</AkaMSGroupOwner>
      <PublishSpecialClrFiles Condition="'$(PublishSpecialClrFiles)' == ''">false</PublishSpecialClrFiles>
      <BuildQuality Condition="'$(BuildQuality)' == ''">daily</BuildQuality>
      <AllowFeedOverrides Condition="'$(AllowFeedOverrides)' == ''">false</AllowFeedOverrides>
      <UseStreamingPublishing Condition="'$(UseStreamingPublishing)' == ''">false</UseStreamingPublishing>
      <ArtifactsBasePath Condition="'$(ArtifactsBasePath)' == ''">$(BlobBasePath)</ArtifactsBasePath>
      <NonStreamingPublishingMaxClients Condition="'$(NonStreamingPublishingMaxClients)' == ''">12</NonStreamingPublishingMaxClients>
      <StreamingPublishingMaxClients Condition="'$(UseStreamingPublishing)' == 'true' and '$(StreamingPublishingMaxClients)' == ''">16</StreamingPublishingMaxClients>
    </PropertyGroup>

    <ItemGroup>
      <FeedKey Include="https://pkgs.dev.azure.com/dnceng" Key="$(AzureDevOpsFeedsKey)"/>
      <FeedSasUri Include="$(ChecksumsFeedOverride)" Base64Uri="$(ChecksumsFeedBase64SasUri)" Condition="'$(ChecksumsFeedOverride)' != ''"/>
      <FeedSasUri Include="$(InstallersFeedOverride)" Base64Uri="$(InstallersFeedBase64SasUri)" Condition="'$(InstallersFeedOverride)' != ''"/>
      <FeedSasUri Include="https://dotnetbuilds.blob.core.windows.net/public" Base64Uri="$(DotNetBuildsPublicUriBase64)"/>
      <FeedSasUri Include="https://dotnetbuilds.blob.core.windows.net/public-checksums" Base64Uri="$(DotNetBuildsPublicChecksumsUriBase64)"/>
      <FeedSasUri Include="https://dotnetbuilds.blob.core.windows.net/internal" Base64Uri="$(DotNetBuildsInternalUriBase64)"/>
      <FeedSasUri Include="https://dotnetbuilds.blob.core.windows.net/internal-checksums" Base64Uri="$(DotNetBuildsInternalChecksumsUriBase64)"/>
      <FeedOverride Include="https://dotnetbuilds.blob.core.windows.net/public-checksums" Replacement="$(ChecksumsFeedOverride)" Condition="'$(ChecksumsFeedOverride)' != ''"/>
      <FeedOverride Include="https://dotnetbuilds.blob.core.windows.net/public" Replacement="$(InstallersFeedOverride)" Condition="'$(InstallersFeedOverride)' != ''"/>
      <FeedOverride Include="https://dotnetbuilds.blob.core.windows.net/internal-checksums" Replacement="$(ChecksumsFeedOverride)" Condition="'$(ChecksumsFeedOverride)' != ''"/>
      <FeedOverride Include="https://dotnetbuilds.blob.core.windows.net/internal" Replacement="$(InstallersFeedOverride)" Condition="'$(InstallersFeedOverride)' != ''"/>
      <FeedOverride Include="transport-packages" Replacement="$(TransportFeedOverride)" Condition="'$(TransportFeedOverride)' != ''"/>
      <FeedOverride Include="shipping-packages" Replacement="$(ShippingFeedOverride)" Condition="'$(ShippingFeedOverride)' != ''"/>
    </ItemGroup>

    <Error
      Condition="'@(ManifestFiles)' == ''"
      Text="No manifest file was found in the provided path: $(ManifestsBasePath)" />

    <!-- 
      Publish artifacts from all manifests.
    -->
    <PublishArtifactsInManifest
      InternalBuild="$(IsInternalBuild)"
      TargetFeedConfig="@(TargetFeedConfig)"
      TargetChannels="$(TargetChannels)"
      BARBuildId="$(BARBuildId)"
      MaestroApiEndpoint="$(MaestroApiEndpoint)"
      BuildAssetRegistryToken="$(BuildAssetRegistryToken)"
      PublishInstallersAndChecksums="$(PublishInstallersAndChecksums)"
      AssetManifestPaths="@(ManifestFiles)"
      BlobAssetsBasePath="$(BlobBasePath)"
      PackageAssetsBasePath="$(PackageBasePath)"
      NugetPath="$(NugetPath)"
      AkaMSClientId="$(AkaMSClientId)"
      AkaMSClientCertificate="$(AkaMSClientCertificate)"
      AkaMSTenant="$(AkaMSTenant)"
      AkaMSOwners="$(AkaMSOwners)"
      AkaMSGroupOwner="$(AkaMSGroupOwner)"
      AkaMSCreatedBy="$(AkaMSCreatedBy)" 
      ManagedIdentityClientId="$(ManagedIdentityClientId)"
      SymbolPublishingExclusionsFile="$(SymbolPublishingExclusionsFile)"
      PdbArtifactsBasePath="$(PDBArtifactsBasePath)"
      PublishSpecialClrFiles="$(PublishSpecialClrFiles)"
      TempSymbolsAzureDevOpsOrg="$(TempSymbolsAzureDevOpsOrg)"
      TempSymbolsAzureDevOpsOrgToken="$(TempSymbolsAzureDevOpsOrgToken)"
      SymbolRequestProject="$(SymbolRequestProject)"
      BuildQuality="$(BuildQuality)"
      AllowFeedOverrides="$(AllowFeedOverrides)"
      AzdoApiToken="$(AzdoApiToken)"
      ArtifactsBasePath="$(ArtifactsBasePath)"
      BuildId="$(BuildId)"
      AzureDevOpsOrg="$(AzureDevOpsOrg)"
      AzureProject="$(AzureProject)"
      UseStreamingPublishing="$(UseStreamingPublishing)"
      StreamingPublishingMaxClients="$(StreamingPublishingMaxClients)"
      NonStreamingPublishingMaxClients="$(NonStreamingPublishingMaxClients)"
      FeedKeys="@(FeedKey)"
      FeedSasUris="@(FeedSasUri)"
      FeedOverrides="@(FeedOverride)"
      />
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Feed" Version="$(MicrosoftDotNetBuildTasksFeedVersion)" />
  </ItemGroup>

</Project>
