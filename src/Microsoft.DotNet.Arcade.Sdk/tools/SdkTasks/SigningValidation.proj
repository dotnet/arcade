<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->
<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Execute">
  <!--
    This MSBuild file is intended to be used as the body of the default 
    publishing release pipeline. The release pipeline will use this file
    to invoke the SignCheck tool to validate that packages about to
    be published are correctly signed.
  
    Parameters:
  
      - PackageBasePath         : Directory containing all files that need to be validated.
      - SignCheckExclusionsFile : Path to file containing exclusion list to be used by SignCheck.
      - EnableJarSigningCheck   : Whether .jar files should be validated.
      - EnableStrongNameCheck   : Whether strong name check should be performed.
  -->

  <Import Condition="'$(BuildManifestFile)' == '' and Exists('$(RepositoryEngineeringDir)Signing.props')" Project="$(RepositoryEngineeringDir)Signing.props" />
  <Import Condition="Exists('$(BuildManifestFile)')" Project="$(BuildManifestFile)" />

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <NETCORE_ENGINEERING_TELEMETRY>Build</NETCORE_ENGINEERING_TELEMETRY>
    <SignCheckTaskAssembly>$(NuGetPackageRoot)Microsoft.DotNet.SignCheck\$(MicrosoftDotNetSignCheckVersion)\tools\Microsoft.DotNet.SignCheck.exe</SignCheckTaskAssembly>
  </PropertyGroup>

  <UsingTask TaskName="SignCheck.SignCheckTask" AssemblyFile="$(SignCheckTaskAssembly)" />

  <Target Name="Execute">
    <PropertyGroup>
      <SignCheckInputDir>$(PackageBasePath)</SignCheckInputDir>
      <SignCheckLog Condition="'$(SignCheckLog)' == ''">$(ArtifactsLogDir)\signcheck.log</SignCheckLog>
      <SignCheckErrorLog Condition="'$(SignCheckErrorLog)' == ''">$(ArtifactsLogDir)\signcheck.errors.log</SignCheckErrorLog>
      <InputFiles Condition="'$(BuildManifestFile)' == ''">$(SignCheckInputDir)</InputFiles>
      <InputFiles Condition="'$(BuildManifestFile)' != ''">@(ItemsToSign)</InputFiles>
    </PropertyGroup>

    <Error Condition="'$(MSBuildRuntimeType)' == 'Core'" Text="Signing validation task does not run on core." />

    <Message Text="Using build manifest file '$(BuildManifestFile)'" Condition="Exists('$(BuildManifestFile)')" />
      <!--
        Documentation for these arguments is available here:
        https://github.com/dotnet/arcade/tree/master/src/SignCheck
      -->
    <SignCheckTask 
      Recursive="true"
      FileStatus="UnsignedFiles"
      InputFiles="$(InputFiles)"
      ExclusionsFile="$(SignCheckExclusionsFile)"
      EnableJarSignatureVerification="$(EnableJarSigningCheck)"
      VerifyStrongName="$(EnableStrongNameCheck)"
      LogFile="$(SignCheckLog)"
      ErrorLogFile="$(SignCheckErrorLog)"
      ArtifactFolder="$(SignCheckInputDir)"/>

    <Error 
      Text="Signing validation failed. Check $(SignCheckErrorLog) for more information." 
      Condition="Exists($(SignCheckErrorLog)) and '$([System.IO.File]::ReadAllText($(SignCheckErrorLog)))' != ''" />

    <Message
      Text="##vso[artifact.upload containerfolder=LogFiles;artifactname=LogFiles]{SignCheckErrorLog}"
      Condition="Exists($(SignCheckErrorLog)) and '$([System.IO.File]::ReadAllText($(SignCheckErrorLog)))' != ''" />
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.SignCheck" Version="$(MicrosoftDotNetSignCheckVersion)" />
  </ItemGroup>
</Project>
