<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->
<Project>

  <!--
    Sets versions of packages used by the toolset unless they were already specified by the repo.
    Version.props shall be imported prior this file.
  -->

  <PropertyGroup>
    <OfficialBuild>false</OfficialBuild>
    <OfficialBuild Condition="'$(OfficialBuildId)' != ''">true</OfficialBuild>
  </PropertyGroup>

  <Import Project="DefaultVersions.Generated.props"/>
  <Import Project="$(VersionsPropsPath)" Condition="Exists('$(VersionsPropsPath)')"/>

  <!-- TODO: remove once all repos remove RestoreSources from their Version.props files -->
  <PropertyGroup>
    <RestoreSources/>
  </PropertyGroup>

  <!-- 
    Prevent NuGet from using cached packages 
    Workaround for https://github.com/NuGet/Home/issues/3116
  -->
  <PropertyGroup>
    <RestoreNoCache Condition="'$(ContinuousIntegrationBuild)' == 'true'">true</RestoreNoCache>
  </PropertyGroup>
  
  <!--
    Arcade SDK features.
  -->
  <PropertyGroup>
    <!-- Opt-out features -->
    <UsingToolXliff Condition="'$(UsingToolXliff)' == ''">true</UsingToolXliff>
    <UsingToolPdbConverter Condition="'$(UsingToolPdbConverter)' == ''">true</UsingToolPdbConverter>

    <!-- Opt-in features -->
    <UsingToolVSSDK Condition="'$(UsingToolVSSDK)' == ''">false</UsingToolVSSDK>
    <UsingToolIbcOptimization Condition="'$(UsingToolIbcOptimization)' == ''">false</UsingToolIbcOptimization>
    <UsingToolVisualStudioIbcTraining Condition="'$(UsingToolVisualStudioIbcTraining)' == ''">false</UsingToolVisualStudioIbcTraining>
    <UsingToolNuGetRepack Condition="'$(UsingToolNuGetRepack)' == ''">false</UsingToolNuGetRepack>
    <UsingToolSymbolUploader Condition="'$(UsingToolSymbolUploader)' == ''">false</UsingToolSymbolUploader>

    <!-- Deprecated features -->
    <!--
      The UsingToolXUnit property is deprecated,
      use the TestRunnerName property to choose which test runner to use.
    -->
    <UsingToolXUnit Condition="'$(UsingToolXUnit)' == ''">true</UsingToolXUnit>

    <!--
      Use compilers from the Microsoft.Net.Compilers/Microsoft.NETCore.Compilers package.
      Repo can set this property to true if it needs to use a different version of the compiler than the one in the dotnet SDK.
    -->
    <UsingToolMicrosoftNetCompilers Condition="'$(UsingToolMicrosoftNetCompilers)' == ''">false</UsingToolMicrosoftNetCompilers>
  </PropertyGroup>

  <!--
    Disable features when building from source.
  -->
  <PropertyGroup Condition="'$(DotNetBuildFromSource)' == 'true'">
    <UsingToolPdbConverter>false</UsingToolPdbConverter>
    <UsingToolVSSDK>false</UsingToolVSSDK>
    <UsingToolIbcOptimization>false</UsingToolIbcOptimization>
    <UsingToolVisualStudioIbcTraining>false</UsingToolVisualStudioIbcTraining>
    <UsingToolSymbolUploader>false</UsingToolSymbolUploader>
    <UsingToolNuGetRepack>false</UsingToolNuGetRepack>
  </PropertyGroup>

  <!--
    Default versions
  -->
  <PropertyGroup>
    <DropAppVersion Condition="'$(DropAppVersion)' == ''">18.165.29912-buildid11693003</DropAppVersion>
    <MicroBuildPluginsSwixBuildVersion Condition="'$(MicroBuildPluginsSwixBuildVersion)' == ''">1.0.422</MicroBuildPluginsSwixBuildVersion>
    <MicroBuildCoreVersion Condition="'$(MicroBuildCoreVersion)' == ''">0.2.0</MicroBuildCoreVersion>
    <MicrosoftDotNetIBCMergeVersion Condition="'$(MicrosoftDotNetIBCMergeVersion)' == ''">5.0.7-beta.20159.1</MicrosoftDotNetIBCMergeVersion>
    <MicrosoftNETTestSdkVersion Condition="'$(MicrosoftNETTestSdkVersion)' == ''">16.6.1</MicrosoftNETTestSdkVersion>
    <MicrosoftNetFrameworkReferenceAssembliesVersion Condition="'$(MicrosoftNetFrameworkReferenceAssembliesVersion)' == ''">1.0.0-preview.2</MicrosoftNetFrameworkReferenceAssembliesVersion>
    <MicrosoftVSSDKBuildToolsVersion Condition="'$(MicrosoftVSSDKBuildToolsVersion)' == ''">15.1.192</MicrosoftVSSDKBuildToolsVersion>
    <MicrosoftDotnetNuGetRepackTasksVersion Condition="'$(MicrosoftDotnetNuGetRepackTasksVersion)' == ''">$(ArcadeSdkVersion)</MicrosoftDotnetNuGetRepackTasksVersion>
    <MicrosoftDotNetSignToolVersion Condition="'$(MicrosoftDotNetSignToolVersion)' == ''">$(ArcadeSdkVersion)</MicrosoftDotNetSignToolVersion>
    <MicrosoftTestPlatformVersion Condition="'$(MicrosoftTestPlatformVersion)' == ''">16.5.0</MicrosoftTestPlatformVersion>
    <XUnitVersion Condition="'$(XUnitVersion)' == ''">2.4.1</XUnitVersion>
    <XUnitRunnerConsoleVersion Condition="'$(XUnitRunnerConsoleVersion)' == ''">$(XUnitVersion)</XUnitRunnerConsoleVersion>
    <!-- Version 2.4.3 of xunit.runner.visualstudio was released to fix testing of net5 projects without updating any other xunit packages -->
    <XUnitRunnerVisualStudioVersion Condition="'$(XUnitRunnerVisualStudioVersion)' == ''">2.4.3</XUnitRunnerVisualStudioVersion>
    <MSTestVersion Condition="'$(MSTestVersion)' == ''">2.0.0</MSTestVersion>
    <MSTestTestAdapterVersion Condition="'$(MSTestTestAdapterVersion)' == ''">$(MSTestVersion)</MSTestTestAdapterVersion>
    <MSTestTestFrameworkVersion Condition="'$(MSTestTestFrameworkVersion)' == ''">$(MSTestVersion)</MSTestTestFrameworkVersion>
    <MicrosoftDotNetBuildTasksFeedVersion Condition="'$(MicrosoftDotNetBuildTasksFeedVersion)' == ''">$(ArcadeSdkVersion)</MicrosoftDotNetBuildTasksFeedVersion>
    <MicrosoftDotNetBuildTasksInstallersVersion Condition="'$(MicrosoftDotNetBuildTasksInstallersVersion)' == ''">$(ArcadeSdkVersion)</MicrosoftDotNetBuildTasksInstallersVersion>
    <NUnitVersion Condition="'$(NUnitVersion)' == ''">3.12.0</NUnitVersion>
    <NUnit3TestAdapterVersion Condition="'$(NUnit3TestAdapterVersion)' == ''">3.15.1</NUnit3TestAdapterVersion>
    <VSWhereVersion Condition="'$(VSWhereVersion)' == ''">2.6.7</VSWhereVersion>
    <SNVersion Condition="'$(SNVersion)' == ''">1.0.0</SNVersion>
    <MicrosoftDotNetBuildTasksVisualStudioVersion Condition="'$(MicrosoftDotNetBuildTasksVisualStudioVersion)' == ''">$(ArcadeSdkVersion)</MicrosoftDotNetBuildTasksVisualStudioVersion>
    <MicrosoftDotNetSourceBuildTasksVersion Condition="'$(MicrosoftDotNetSourceBuildTasksVersion)' == ''">$(ArcadeSdkVersion)</MicrosoftDotNetSourceBuildTasksVersion>
    <RichCodeNavPackageVersion Condition="'$(RichCodeNavPackageVersion)' == ''">0.1.1832-alpha</RichCodeNavPackageVersion>
  </PropertyGroup>

  <!-- RestoreSources overrides - defines DotNetRestoreSources variable if available -->
  <Import Project="$(DotNetPackageVersionPropsPath)" Condition="'$(DotNetPackageVersionPropsPath)' != ''"/>
  <!-- 
    Defaults for properties that need to be available to all CI build steps and are dependent on settings specified in eng/Versions.props.
  -->
  <PropertyGroup>
    <IbcOptimizationDataDir Condition="'$(UsingToolVisualStudioIbcTraining)' == 'true'">$(ArtifactsDir)ibc\</IbcOptimizationDataDir>
  </PropertyGroup>
</Project>
