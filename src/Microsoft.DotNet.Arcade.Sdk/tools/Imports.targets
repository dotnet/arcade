<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!--
    Import NuGet targets to WPF temp projects (workaround for https://github.com/dotnet/sourcelink/issues/91) 
  -->
  <Import Project="$(_WpfTempProjectNuGetFilePathNoExt).targets" Condition="'$(_WpfTempProjectNuGetFilePathNoExt)' != '' and Exists('$(_WpfTempProjectNuGetFilePathNoExt).targets')"/>

  <PropertyGroup>
    <DeployProjectOutput Condition="'$(DeployProjectOutput)' == ''">$(__DeployProjectOutput)</DeployProjectOutput>
    
    <!-- Run Deploy step by default when the solution is build directly via msbuild (from command line or VS). -->
    <DeployProjectOutput Condition="'$(DeployProjectOutput)' == ''">true</DeployProjectOutput>
  </PropertyGroup>

  <!-- Default empty deploy target. -->
  <Target Name="Deploy" AfterTargets="Build" Condition="'$(DeployProjectOutput)' == 'true'" />

  <!--
    Set PackageOutputPath based on the IsShipping flag set by projects.
    This distinction allows signing and publishing tools to determine which assets to sign/publish and which to ignore.

    Unless specified owtherwise project is assumed to produce binaries/package that ship.
    Test projects automatically set IsShipping to false.
  -->
  <PropertyGroup>
    <IsShipping Condition="'$(IsShipping)' == ''">true</IsShipping>

    <PackageOutputPath Condition="'$(IsShipping)' == 'true'">$(ArtifactsShippingPackagesDir)</PackageOutputPath>
    <PackageOutputPath Condition="'$(IsShipping)' != 'true'">$(ArtifactsNonShippingPackagesDir)</PackageOutputPath>

    <IsSwixProject>false</IsSwixProject>
    <IsSwixProject Condition="'$(VisualStudioInsertionComponent)' != '' and '$(IsVsixProject)' != 'true'">true</IsSwixProject>
  </PropertyGroup>

  <Import Project="StrongName.targets"/>
  <Import Project="GenerateInternalsVisibleTo.targets" />
  <Import Project="GenerateResxSource.targets" />
  <Import Project="Workarounds.targets"/>
  <Import Project="RepositoryInfo.targets"/>
  <Import Project="Version.targets"/>
  <Import Project="Tests.targets" Condition="'$(DisableArcadeTestFramework)' != 'true'" />

  <Import Project="Performance.targets" Condition="'$(DisableArcadeTestFramework)' != 'true'" />
  <Import Project="Localization.targets" Condition="'$(UsingToolXliff)' == 'true'"/>
  <Import Project="VisualStudio.targets" Condition="'$(UsingToolVSSDK)' == 'true' and ('$(IsVsixProject)' == 'true' or '$(IsSwixProject)' == 'true' or '$(GeneratePkgDefFile)' == 'true') and '$(DesignTimeBuild)' != 'true' and '$(BuildingForLiveUnitTesting)' != 'true' and '$(MSBuildRuntimeType)' != 'Core'"/>
  <Import Project="OptimizationData.targets" Condition="'$(UsingToolIbcOptimization)' == 'true' and '$(IbcOptimizationDataDir)' != ''"/>
  <Import Project="SymStore.targets" Condition="'$(ContinuousIntegrationBuild)' == 'true' and '$(OS)' == 'Windows_NT'"/>

</Project>
