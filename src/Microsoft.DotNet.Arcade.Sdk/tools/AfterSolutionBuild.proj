<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>
  <Import Project="BuildStep.props" />

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />
  <Target Name="Clean" />
  <Target Name="Build" />
  <Target Name="Test" />
  <Target Name="Pack" />
  <Target Name="IntegrationTest" />
  <Target Name="PerformanceTest" />

  <Import Project="Version.BeforeCommonTargets.targets" />
  <Import Project="$(RepoRoot)/eng/AfterSolutionBuild.props" Condition="Exists('$(RepoRoot)/eng/AfterSolutionBuild.props')" />
  <!-- LightCommandPackagesDir is created by the "CreateLightCommandPackageDrop" task which runs in the wix targets
       https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Build.Tasks.SharedFramework.Sdk/targets/windows/wix.targets.  A default value
       is defined in Arcade, https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/tools/RepoLayout.props -->
  <Target Name="CreateLightCommandPackageZip"
          Condition="Exists('$(LightCommandPackagesDir)')"
          AfterTargets="Build">
    <PropertyGroup>
      <LightCommandPackagesName>LightCommandPackages</LightCommandPackagesName>
      <LightCommandPackagesName Condition="'$(Version)' != ''">$(LightCommandPackagesName)-$(Version)</LightCommandPackagesName>
      <LightCommandPackagesName Condition="'$(LightCommandPackagesNameSuffix)' != ''">$(LightCommandPackagesName)-$(LightCommandPackagesNameSuffix)</LightCommandPackagesName>
      <LightCommandPackagesName>$(LightCommandPackagesName).zip</LightCommandPackagesName>
    </PropertyGroup>
    <ZipDirectory
      DestinationFile="$(ArtifactsDir)$(LightCommandPackagesName)"
      Overwrite="true"
      SourceDirectory="$(LightCommandPackagesDir)" />
  </Target>

  <Import Project="BuildReleasePackages.targets" Condition="'$(UsingToolNuGetRepack)' == 'true'" />

  <!-- Repository extension point -->
  <Import Project="$(RepositoryEngineeringDir)AfterSolutionBuild.targets" Condition="Exists('$(RepositoryEngineeringDir)AfterSolutionBuild.targets')"/>

</Project>
