@page
@using Maestro.Web.Pages.Account
@model Maestro.Web.Pages.Account.TokensModel
@{
    ViewBag.Title = "Tokens";
}


<div class="alert alert-danger" if-not="string.IsNullOrEmpty(Model.Error)">
    <strong>Error: </strong> @Model.Error
</div>
<div class="alert alert-info" if-not="string.IsNullOrEmpty(Model.Message)">
    @Model.Message
</div>
<div class="card">
    <div class="card-header">Tokens</div>
    <div class="card-body p-0">
        <div class="listgroup">
            <div class="listgroup-item" if="Model.Tokens.Count == 0">
                You Have No Tokens, Create One.
            </div>
            <div class="listgroup-item" style="background-color: rgba(108, 198, 68, 0.1);" if-not="string.IsNullOrEmpty(Model.CreatedTokenValue)">
                <strong>&#x2713;</strong> <code id="token-value">@Model.CreatedTokenValue</code> <a href="#" title="Copy to Clipboard" id="copy-button">&#x1f4cb;</a>
                <script type="text/javascript">
                    $("#copy-button").tooltip();
                    $("#copy-button").on("click",
                        function(event) {
                            event.preventDefault();

                            var oldTitle = $("#copy-button").attr("data-original-title");

                            var text = $("#token-value").text();
                            var copyTextArea = document.createElement("textarea");
                            copyTextArea.value = text;
                            document.body.appendChild(copyTextArea);
                            copyTextArea.select();
                            try {
                                var successful = document.execCommand("copy");
                                var msg = successful ? "Copied!" : "Unable to copy!";
                                $("#copy-button").attr("data-original-title", msg).tooltip("show");
                            } catch (err) {
                                console.error("Unable to copy!");
                            }
                            document.body.removeChild(copyTextArea);
                            $("#copy-button").attr("data-original-title", oldTitle);
                        });
                </script>
            </div>
            @foreach (TokensModel.TokenModel token in Model.Tokens)
            {
                if (token.Id == Model.CreatedTokenId)
                {
                    continue;
                }
                <div class="listgroup-item">
                    <div class="float-right">
                        <form class="form-inline" method="post" asp-page-handler="DeleteToken">
                            <input type="hidden" name="TokenId" value="@token.Id"/>
                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                        </form>
                    </div>
                    <span><strong>@token.Name</strong> created @token.Created.Humanize()</span>
                </div>
            }
        </div>
    </div>
</div>
<div class="card">
    <div class="card-header">Create Token</div>
    <div class="card-body">
        <form asp-page-handler="NewToken" class="needs-validation" method="post" autocomplete="off" novalidate>
            <div class="form-group">
                <label asp-for="TokenName"></label>
                <input class="form-control" type="text" name="TokenName" required/>
                <div class="invalid-feedback">
                    A token name is required.
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>
</div>
