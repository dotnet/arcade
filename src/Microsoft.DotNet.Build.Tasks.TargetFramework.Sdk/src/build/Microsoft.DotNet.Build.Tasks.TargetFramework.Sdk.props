<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>  
  <PropertyGroup>
    <DotNetBuildTasksTargetFrameworkSdkAssembly Condition="'$(DotNetBuildTasksTargetFrameworkSdkAssembly)' == '' AND '$(MSBuildRuntimeType)' == 'core'">..\tools\netcoreapp2.1\Microsoft.DotNet.Build.Tasks.TargetFramework.Sdk.dll</DotNetBuildTasksTargetFrameworkSdkAssembly>
    <DotNetBuildTasksTargetFrameworkSdkAssembly Condition="'$(DotNetBuildTasksTargetFrameworkSdkAssembly)' == '' AND '$(MSBuildRuntimeType)' != 'core'">..\tools\net472\Microsoft.DotNet.Build.Tasks.TargetFramework.Sdk.dll</DotNetBuildTasksTargetFrameworkSdkAssembly>
    <TargetFrameworkSuffix>AnyOS</TargetFrameworkSuffix >
  </PropertyGroup>
  
  <PropertyGroup Condition="$(TargetFramework.Contains('-'))">
    <TargetFrameworkSuffix>$(TargetFramework.SubString($([MSBuild]::Add($(TargetFramework.IndexOf('-')), 1))))</TargetFrameworkSuffix >
    <_TargetFrameworkWithoutProfile>$(TargetFramework.SubString(0, $(TargetFramework.IndexOf('-'))))</_TargetFrameworkWithoutProfile>
  </PropertyGroup>
 
  <!-- Split $(TargetFramework) (e.g. net45) into short identifier and short version (e.g. 'net' and '45'). -->
  <PropertyGroup Condition="'$(TargetFramework)' != '' and !$(TargetFramework.Contains(',')) and !$(TargetFramework.Contains('+'))">
   <_TargetFrameworkWithoutProfile Condition="'$(_TargetFrameworkWithoutProfile)' == ''">$(TargetFramework)</_TargetFrameworkWithoutProfile>
   <_ShortFrameworkIdentifier>$(_TargetFrameworkWithoutProfile.TrimEnd('.0123456789'))</_ShortFrameworkIdentifier>
   <_ShortFrameworkVersion>$(_TargetFrameworkWithoutProfile.Substring($(_ShortFrameworkIdentifier.Length)))</_ShortFrameworkVersion>
  </PropertyGroup>
  
  <!-- Map short name to long name. See earlier comment for example of how to work with identifiers that are not recognized here. -->
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == ''">
    <TargetFrameworkIdentifier Condition="'$(_ShortFrameworkIdentifier)' == 'netstandard'">.NETStandard</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ShortFrameworkIdentifier)' == 'netcoreapp'">.NETCoreApp</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ShortFrameworkIdentifier)' == 'net'">.NETFramework</TargetFrameworkIdentifier>
  </PropertyGroup>

  <!-- Versions with dots are taken as is and just given leading 'v'. -->
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == '' and '$(_ShortFrameworkVersion)' != '' and $(_ShortFrameworkVersion.Contains('.'))">
    <TargetFrameworkVersion>v$(_ShortFrameworkVersion)</TargetFrameworkVersion>
  </PropertyGroup>

  <!-- Versions with no dots and up to 3 characters get leading 'v' and implicit dots between characters. -->
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == '' and '$(_ShortFrameworkVersion)' != ''">
    <TargetFrameworkVersion Condition="$(_ShortFrameworkVersion.Length) == 1">v$(_ShortFrameworkVersion[0]).0</TargetFrameworkVersion>
    <TargetFrameworkVersion Condition="$(_ShortFrameworkVersion.Length) == 2">v$(_ShortFrameworkVersion[0]).$(_ShortFrameworkVersion[1])</TargetFrameworkVersion>
    <TargetFrameworkVersion Condition="$(_ShortFrameworkVersion.Length) == 3">v$(_ShortFrameworkVersion[0]).$(_ShortFrameworkVersion[1]).$(_ShortFrameworkVersion[2])</TargetFrameworkVersion>
  </PropertyGroup>
</Project>
