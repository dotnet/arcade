<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->
<Project TreatAsLocalProperty="TargetFramework">
  <!-- Add unparsed TargetFrameworks property to GetTargetFrameworks return item metadata to read from it later. -->
  <ItemDefinitionGroup>
    <_ThisProjectBuildMetadata>
      <RawTargetFrameworks>$(TargetFrameworks)</RawTargetFrameworks>
    </_ThisProjectBuildMetadata>
  </ItemDefinitionGroup>

  <PropertyGroup>
    <DotNetBuildTasksTargetFrameworkSdkAssembly Condition="'$(DotNetBuildTasksTargetFrameworkSdkAssembly)' == '' AND '$(MSBuildRuntimeType)' == 'core'">..\tools\netcoreapp2.1\Microsoft.DotNet.Build.Tasks.TargetFramework.Sdk.dll</DotNetBuildTasksTargetFrameworkSdkAssembly>
    <DotNetBuildTasksTargetFrameworkSdkAssembly Condition="'$(DotNetBuildTasksTargetFrameworkSdkAssembly)' == '' AND '$(MSBuildRuntimeType)' != 'core'">..\tools\net472\Microsoft.DotNet.Build.Tasks.TargetFramework.Sdk.dll</DotNetBuildTasksTargetFrameworkSdkAssembly>
    <_OriginalTargetFramework>$(TargetFramework)</_OriginalTargetFramework>
    <TargetFrameworkPattern><![CDATA[(?<v1>netstandard2.0|netstandard2.1|net461|net462|net47|netcoreapp2.0|netcoreapp2.1|netcoreapp3.1|netcoreapp3.0)(-[^;]+)]]></TargetFrameworkPattern>
  </PropertyGroup>

  <PropertyGroup Condition="$(TargetFramework.Contains('-'))">
    <TargetFrameworkSuffix>$(TargetFramework.SubString($([MSBuild]::Add($(TargetFramework.IndexOf('-')), 1))))</TargetFrameworkSuffix>
    <!-- Strip away the TargetPlatform during the build because the assets file and nuget generated files does not know about the TargetPlatform for frameworks older than net5.0.-->
    <TargetFramework>$([System.Text.RegularExpressions.Regex]::Replace('$(TargetFramework)', '$(TargetFrameworkPattern)', '${v1}'))</TargetFramework>
  </PropertyGroup>
</Project>
