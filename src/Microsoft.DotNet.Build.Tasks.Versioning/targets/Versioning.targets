<!-- Copyright (c) .NET Foundation. All rights reserved. -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <_MicrosoftDotNetBuildTasksVersioningTaskAssembly Condition="'$(MSBuildRuntimeType)'=='Core'">$(MSBuildThisFileDirectory)netcoreapp2.0\Microsoft.DotNet.Build.Tasks.Versioning.dll</_MicrosoftDotNetBuildTasksVersioningTaskAssembly>
    <_MicrosoftDotNetBuildTasksVersioningTaskAssembly Condition="'$(MSBuildRuntimeType)'!='Core'">$(MSBuildThisFileDirectory)net45\Microsoft.DotNet.Build.Tasks.Versioning.dll</_MicrosoftDotNetBuildTasksVersioningTaskAssembly>

    <OutputDir Condition="'$(OutputDir)'==''">$(MSBuildThisFileDirectory)..\..\..\artifacts\obj\Microsoft.DotNet.Build.Tasks.Versioning\</OutputDir>

    <VersioningCacheFile Condition="'$(VersioningCacheFile)'==''">$(OutputDir)VersioningCache.props</VersioningCacheFile>
    
    <ShouldCreateVersionFileDuringBuild Condition="Exists('$(VersioningCacheFile)')=='false'">true</ShouldCreateVersionFileDuringBuild>
  </PropertyGroup>

  <!-- If VersioningCacheFile exists already then import it; If it doesn't we are going to create it. -->
  <Import Condition="Exists('$(VersioningCacheFile)')" Project="$(VersioningCacheFile)" />

  <Target Name="GenerateVersions">
    <!--
      We are going to generate a new date when all these matches:
        - The user specified that a date is needed on the versioning string;
        - The ShrotDate was not specified as a parameter.
        
      The GenerateVersioningDate task will try to extract the date from the 
      OfficialBuildId in case it is not empty. Otherwise, it will generate a 
      new date.
    -->
    <GenerateVersioningDate Condition="'$(IncludeDate)'=='true' and '$(ShortDate)'==''" SeedDate="$(VersionSeedDate)" OfficialBuildId="$(OfficialBuildId)" ComparisonDate="$(VersionComparisonDate)" Padding="$(Padding)" SemVerOne="$(SemVerOne)">
      <Output TaskParameter="GeneratedRevision" PropertyName="Revision"  />
      <Output TaskParameter="GeneratedShortDate" PropertyName="ShortDate"  />
    </GenerateVersioningDate>

    <!--
      In effect we have three pre-defined version format strings. These look like:
        stable           = 3.0.1
        final-prerelease = 1.2.0-preview1.final
        dev              = 1.2.0-preview1.08530.0+asdf34234
      when the SemVerOne flag is activated all '.' and '+' after $(Patch) are replaced by '-':  
        stable           = 3.0.1
        final-prerelease = 1.2.0-preview1-final
        dev              = 1.2.0-preview1-08530-0-asdf34234
    -->
    <PropertyGroup>
      <!-- Common to all formats -->
      <VersionString>$(Major).$(Minor).$(Patch)</VersionString>

      <!-- Only the "stable" format doesn't have a PreRelease field. -->
      <TrailingPart Condition="'$(FormatName)'!='stable'">-$(PreRelease)</TrailingPart>

      <!-- Final label specific to the "final-prerelease" format. -->
      <TrailingPart Condition="'$(FormatName)'=='final-prerelease'">$(TrailingPart).final</TrailingPart>

      <!-- Specific fields to "dev" format. Inclusion of Date and Sha fields are optional. -->
      <TrailingPart Condition="'$(FormatName)'=='dev' and '$(IncludeDate)'=='true'">$(TrailingPart).$(ShortDate)</TrailingPart>
      <TrailingPart Condition="'$(FormatName)'=='dev'">$(TrailingPart).$(Revision)</TrailingPart>
      <TrailingPart Condition="'$(FormatName)'=='dev' and '$(IncludeSha)'=='true'">$(TrailingPart)+$(ShortSha)</TrailingPart>

      <!-- For SemVer 1.0 all '+' and '.' characters in the trailing part are replaced by '-'. -->
      <TrailingPart Condition="'$(SemVerOne)'=='true'">$(TrailingPart.Replace('.', '-'))</TrailingPart>
      <TrailingPart Condition="'$(SemVerOne)'=='true'">$(TrailingPart.Replace('+', '-'))</TrailingPart>

      <VersionString>$(VersionString)$(TrailingPart)</VersionString>
    </PropertyGroup>
  </Target>


  <Target Name="CreateVersioningCacheFile" AfterTargets="GenerateVersions" Condition="'$(ShouldCreateVersionFileDuringBuild)'=='true'">
    <PropertyGroup>
      <VersionFileContent>
        <![CDATA[
<!-- This file was automatically generated by the MSBuild Versioning target. -->
<Project>
  <PropertyGroup>
    <ShortDate>$(ShortDate)</ShortDate>
    <Revision>$(Revision)</Revision>
    <ShortSha>$(ShortSha)</ShortSha>
    <Version>$(xxxx)</Version>
    <FileVersion>$(yyyy)</FileVersion>
    <InformationalVersion>$(zzzz)</InformationalVersion>
  </PropertyGroup>
</Project>
]]>
      </VersionFileContent>
    </PropertyGroup>

    <WriteLinesToFile ContinueOnError="WarnAndContinue" File="$(VersioningCacheFile)" Lines="$(VersionFileContent)" />
  </Target>
  
  <UsingTask TaskName="Microsoft.DotNet.Build.Tasks.Versioning.GenerateVersioningDate" AssemblyFile="$(_MicrosoftDotNetBuildTasksVersioningTaskAssembly)" />
</Project>
