<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->
<Project>

  <UsingTask TaskName="NotSupportedAssemblyGenerator" AssemblyFile="$(GenFacadesTargetAssemblyPath)" />

  <PropertyGroup Condition="'$(GeneratePlatformNotSupportedAssemblyMessage)' != ''">
    <CoreCompileDependsOn>UpdateRefToNonSupportedAssembly;$(CoreCompileDependsOn)</CoreCompileDependsOn>
    <!-- Not supported sources are created from the ref assembly, we currently don't produce finalizers in dummy assemblies, so we disable ApiCompat to not fail. -->
    <RunApiCompat>false</RunApiCompat>
    <!-- The refs contains some unsed private fields and empty finalizers.-->
    <NoWarn>$(NoWarn);CA1823;CA1821;CS0169</NoWarn>
  </PropertyGroup>

  <ItemGroup Condition="'$(GeneratePlatformNotSupportedAssembly)' == 'true' or '$(GeneratePlatformNotSupportedAssemblyMessage)' != ''">
    <AssemblyMetadata Include="NotSupported">
      <Value>True</Value>
    </AssemblyMetadata>
  </ItemGroup>

  <ItemGroup Condition="'$(GeneratePlatformNotSupportedAssemblyMessage)' != ''">
    <ProjectReference Include="$(ContractProject)">
      <Targets>GetCompileItems</Targets>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <OutputItemType>ReferenceSources</OutputItemType>
      <!-- MSBuild ignores the Target name in these cases and invokes GetTargetPath, avoid that by disabling build -->
      <BuildReference Condition="'$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true'">false</BuildReference>
    </ProjectReference>
  </ItemGroup>

  <Target Name="GetCompileItems"
          Returns="@(CompileItemsWithFullPath)">
    <ItemGroup>
      <!-- Filtering out the files in the ref folder. -->
      <CompileItemsWithRootedPath Include="@(Compile -> '$([System.IO.Path]::GetFullPath('%(Compile.Identity)'))')" IsRooted="$([System.IO.Path]::IsPathRooted('%(Compile.Identity)'))" />
      <CompileItemsWithFullPath Include="@(CompileItemsWithRootedPath)" Condition="'%(IsRooted)' == 'false'" />
    </ItemGroup>
  </Target>

  <Target Name="GenerateNotSupportedAssemblySourceFromRef">
    <!-- Populates the Reference Sources while building in VS-->
    <MSBuild
      Projects="@(ProjectReference)"
      Targets="GetCompileItems"
      Properties="%(ProjectReference.SetTargetFramework)"
      Condition="'%(ProjectReference.Targets)' == 'GetCompileItems' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true')">
      <Output TaskParameter="TargetOutputs" ItemName="ReferenceSources" />
    </MSBuild>
    
    <ItemGroup>
      <UpdateReferencePaths Include="@(ReferenceSources)" NotSupportedPath="$(IntermediateOutputPath)\%(Filename).notsupported%(Extension)"/>
    </ItemGroup>
  </Target>

  <Target Name="UpdateRefToNonSupportedAssembly"
        DependsOnTargets="GenerateNotSupportedAssemblySourceFromRef"
        AfterTargets="ResolveProjectReferences"
        Condition="'$(GeneratePlatformNotSupportedAssemblyMessage)' != ''"
        Inputs="@(UpdateReferencePaths)"
        Outputs="@(UpdateReferencePaths->'%(NotSupportedPath)')" >

    <NotSupportedAssemblyGenerator
      SourceFiles="@(UpdateReferencePaths)"
      Message="$(GeneratePlatformNotSupportedAssemblyMessage)"
      ApiExclusionListPath="$(ApiExclusionListPath)" />

    <ItemGroup>
      <Compile Include="@(UpdateReferencePaths->'%(NotSupportedPath)')" />
      <FileWrites Include="@(UpdateReferencePaths->'%(NotSupportedPath)')" />
    </ItemGroup>
  </Target>
</Project>
