<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>
  <PropertyGroup>
    <!-- Tell ResolveMatchingContract to run and resolve contract to project reference -->
    <ResolveMatchingContract>true</ResolveMatchingContract>
    <GeneratePartialFacadeSourceDependsOn>
      $(GeneratePartialFacadeSourceDependsOn);ResolveMatchingContract
    </GeneratePartialFacadeSourceDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <OutputSourcePath>$(IntermediateOutputPath)\$(AssemblyTitle).Forwards.cs</OutputSourcePath>
    <CoreCompileDependsOn Condition="'$(DesignTimeBuild)' != 'true'">
      $(CoreCompileDependsOn);GeneratePartialFacadeSource
    </CoreCompileDependsOn>
  </PropertyGroup>

  <UsingTask TaskName="GenPartialFacadeSource" AssemblyFile="$(GenFacadesTargetAssemblyPath)" />

  <Target Name="GeneratePartialFacadeSource"
          Inputs="$(MSBuildAllProjects);@(ResolvedMatchingContract);@(ReferencePath);@(Compile)"
          Outputs="$(OutputSourcePath)"
          DependsOnTargets="$(GeneratePartialFacadeSourceDependsOn)">

    <PropertyGroup>
      <OutputSourcePath>$(IntermediateOutputPath)\$(AssemblyTitle).Forwards.cs</OutputSourcePath>
      <ReferenceAssembly>%(ResolvedMatchingContract.Identity)</ReferenceAssembly>
    </PropertyGroup>

    <GenPartialFacadeSource
      ReferencePaths="@(ReferencePath)"
      ReferenceAssembly="$(ReferenceAssembly)"
      CompileFiles="@(Compile)"
      DefineConstants="$(DefineConstants)"
      IgnoreMissingTypes="$(GenFacadesIgnoreMissingTypes)"
      IgnoreMissingTypesList="@(GenFacadesIgnoreMissingType)"
      OmitTypes="@(GenFacadesOmitType)"
      OutputSourcePath="$(OutputSourcePath)"
      SeedTypePreferences="@(SeedTypePreference)"
    />

    <ItemGroup>
      <FileWrites Condition="Exists('$(OutputSourcePath)')" Include="$(OutputSourcePath)"/>
    </ItemGroup>

    <ItemGroup>
      <Compile Condition="Exists('$(OutputSourcePath)')" Include="$(OutputSourcePath)"/>
    </ItemGroup>
  </Target>

  <!-- Support zero version seeds by rewriting the output of the compiler. -->
  <PropertyGroup>
    <TargetsTriggeredByCompilation Condition="'$(DesignTimeBuild)' != 'true' AND '$(GenFacadesForceZeroVersionSeeds)' == 'true'">
      $(TargetsTriggeredByCompilation);ClearAssemblyReferenceVersions
    </TargetsTriggeredByCompilation>
  </PropertyGroup>

  <UsingTask TaskName="ClearAssemblyReferenceVersions" AssemblyFile="$(GenFacadesTargetAssemblyPath)" />
  
  <Target Name="ClearAssemblyReferenceVersions">
    <PropertyGroup>
      <_ClearAssemblyReferenceVersionsAssembly>$(IntermediateOutputPath)$(TargetName)$(TargetExt)</_ClearAssemblyReferenceVersionsAssembly>
    </PropertyGroup>

    <!-- Copy the original assembly for debugging purposes -->
    <Copy SourceFiles="$(_ClearAssemblyReferenceVersionsAssembly)"
          DestinationFolder="$(IntermediateOutputPath)ClearRef/">
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites" />
    </Copy>

    <ClearAssemblyReferenceVersions Assembly="$(_ClearAssemblyReferenceVersionsAssembly)" />
  </Target>
</Project>
