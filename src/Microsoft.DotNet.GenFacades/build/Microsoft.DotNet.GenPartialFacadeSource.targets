<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->
<Project>

  <UsingTask TaskName="ClearAssemblyReferenceVersions" AssemblyFile="$(GenFacadesTargetAssemblyPath)" />
  <UsingTask TaskName="GenPartialFacadeSource" AssemblyFile="$(GenFacadesTargetAssemblyPath)" />

  <PropertyGroup>
    <GenFacadesReferencePathItemName Condition="'$(GenFacadesReferencePathItemName)' == ''">ReferencePath</GenFacadesReferencePathItemName>
    <GenFacadesReferenceAssemblyItemName Condition="'$(GenFacadesReferenceAssemblyItemName)' == ''">ResolvedMatchingContract</GenFacadesReferenceAssemblyItemName>
    <!-- Tell ResolveMatchingContract to run and resolve contract to project reference -->
    <ResolveMatchingContract>true</ResolveMatchingContract>
    <GeneratePartialFacadeSourceDependsOn>$(GeneratePartialFacadeSourceDependsOn);ResolveMatchingContract;_GetRoslynAssembliesPath</GeneratePartialFacadeSourceDependsOn>
    <CoreCompileDependsOn Condition="'$(DesignTimeBuild)' != 'true'">$(CoreCompileDependsOn);GeneratePartialFacadeSource</CoreCompileDependsOn>
    <!-- Support zero version seeds by rewriting the output of the compiler. -->
    <TargetsTriggeredByCompilation Condition="'$(DesignTimeBuild)' != 'true' and '$(GenFacadesForceZeroVersionSeeds)' == 'true'">
      $(TargetsTriggeredByCompilation);ClearAssemblyReferenceVersions
    </TargetsTriggeredByCompilation>
    <GenFacadesOutputSourcePath Condition="'$(GenFacadesOutputSourcePath)' == ''">$(IntermediateOutputPath)$(AssemblyTitle).Forwards.cs</GenFacadesOutputSourcePath>
  </PropertyGroup>

  <Target Name="GeneratePartialFacadeSource"
          Inputs="$(MSBuildAllProjects);@($(GenFacadesReferenceAssemblyItemName));@($(GenFacadesReferencePathItemName));@(Compile)"
          Outputs="$(GenFacadesOutputSourcePath)"
          DependsOnTargets="$(GeneratePartialFacadeSourceDependsOn)">
    <GenPartialFacadeSource
      ReferencePaths="@($(GenFacadesReferencePathItemName))"
      ReferenceAssembly="@($(GenFacadesReferenceAssemblyItemName))"
      CompileFiles="@(Compile)"
      DefineConstants="$(DefineConstants)"
      LangVersion="$(LangVersion)"
      IgnoreMissingTypes="$(GenFacadesIgnoreMissingTypes)"
      IgnoreMissingTypesList="@(GenFacadesIgnoreMissingType)"
      OmitTypes="@(GenFacadesOmitType)"
      OutputSourcePath="$(GenFacadesOutputSourcePath)"
      SeedTypePreferences="@(SeedTypePreference)"
      RoslynAssembliesPath="$(RoslynAssembliesPath)" />

    <ItemGroup Condition="Exists('$(GenFacadesOutputSourcePath)')">
      <Compile Include="$(GenFacadesOutputSourcePath)" />
      <FileWrites Include="$(GenFacadesOutputSourcePath)" />
    </ItemGroup>
  </Target>

  <Target Name="ClearAssemblyReferenceVersions">
    <PropertyGroup>
      <_ClearAssemblyReferenceVersionsAssembly>$(IntermediateOutputPath)$(TargetName)$(TargetExt)</_ClearAssemblyReferenceVersionsAssembly>
    </PropertyGroup>

    <!-- Copy the original assembly for debugging purposes -->
    <Copy SourceFiles="$(_ClearAssemblyReferenceVersionsAssembly)"
          DestinationFolder="$(IntermediateOutputPath)ClearRef"
          Condition="'$(GenFacadesForceZeroVersionSeedsDebugMode)' == 'true'">
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites" />
    </Copy>

    <ClearAssemblyReferenceVersions Assembly="$(_ClearAssemblyReferenceVersionsAssembly)" />
  </Target>

</Project>
