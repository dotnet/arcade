<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;$(TargetFrameworkForNETSDK)</TargetFrameworks>
    <TargetFrameworks Condition="'$(DotNetBuildFromSource)' == 'true'">$(TargetFrameworkForNETSDK)</TargetFrameworks>
    <ExcludeFromSourceBuild>false</ExcludeFromSourceBuild>
    <PackageType>MSBuildSdk</PackageType>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IsPackable>true</IsPackable>
    <MsbuildTaskMicrosoftCodeAnalysisCSharpVersion Condition="'$(DotNetBuildOffline)' == 'true'">$(MicrosoftCodeAnalysisCSharpVersion)</MsbuildTaskMicrosoftCodeAnalysisCSharpVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build" Version="$(MicrosoftBuildVersion)" Publish="false" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="$(MicrosoftBuildTasksCoreVersion)" Publish="false" />
    <!-- Microsoft.CodeAnalysis is also loaded by the msbuild. So this version should match the msbuild version of the assembly. -->
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="$(MsbuildTaskMicrosoftCodeAnalysisCSharpVersion)" ExcludeAssets="analyzers" />
    <PackageReference Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
  </ItemGroup>

  <!-- Required for compiling Microsoft.DotNet.GenFacades.ILRewriter -->
  <ItemGroup Condition="'$(DotNetBuildFromSource)' != 'true'">
    <PackageReference Include="Microsoft.Cci" Version="$(MicrosoftCciVersion)" />
    <PackageReference Include="Microsoft.DiaSymReader.Converter" Version="$(MicrosoftDiaSymReaderConverterVersion)" />
    <PackageReference Include="Microsoft.DiaSymReader.Native" Version="$(MicrosoftDiaSymReaderNativeVersion)" />
    <PackageReference Include="System.Diagnostics.TextWriterTraceListener" Version="4.0.0" />
    <PackageReference Include="System.Diagnostics.FileVersionInfo" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
  </ItemGroup>

  <!--
    In the source-build tarball build, Microsoft.CodeAnalysis.CSharp has dependencies on old
    versions of these packages due to repo build order. Override to lift them to the versions passed
    in via DotNetPackageVersionPropsPath.
  -->
  <ItemGroup Condition="'$(DotNetBuildFromSource)' == 'true'">
    <PackageReference Include="System.Collections.Immutable" Version="$(SystemCollectionsImmutableVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildFromSource)' != 'true'">
    <ProjectReference Include="..\Microsoft.Cci.Extensions\Microsoft.Cci.Extensions.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildFromSource)' == 'true'">
    <Compile Remove="ILRewriter\**" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net472'">
    <Compile Include="..\Common\Internal\AssemblyResolver.cs" />
    <Compile Include="..\Common\Internal\BuildTask.Desktop.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\Common\Internal\BuildTask.cs" />
  </ItemGroup>

  <!-- On Core, these native binaries wind up in the Runtimes folder of this package. For Desktop, we have to manually mark them to get them packed -->
  <ItemGroup Condition="'$(TargetFramework)'=='net472' and '$(DotNetBuildFromSource)' != 'true'">
    <None Include="$(NuGetPackageRoot)\microsoft.diasymreader.native\$(MicrosoftDiaSymReaderNativeVersion)\runtimes\win\native\Microsoft.DiaSymReader.Native.x86.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>
    <None Include="$(NuGetPackageRoot)\microsoft.diasymreader.native\$(MicrosoftDiaSymReaderNativeVersion)\runtimes\win\native\Microsoft.DiaSymReader.Native.amd64.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>
  </ItemGroup>


  <Import Project="$(RepoRoot)eng\BuildTask.targets" />

</Project>
