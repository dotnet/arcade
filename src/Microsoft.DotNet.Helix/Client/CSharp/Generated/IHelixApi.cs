// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;

    /// <summary>
    /// This API provides mechanisms for creating Helix jobs and querying their
    /// state and final results. Any API method that requires authentication
    /// (indicated in the description of each method) requires an API key to be
    /// passed either in the form of a query parameter named 'access_token', or
    /// as a header in the form 'Authentication: token APIKEY', where APIKEY is
    /// your key. You can obtain your API key from /UserProfileAll API's that
    /// deal with jobs have optional authentication. Any anonymous access will
    /// be scoped to a limited set of jobs. The 'Telemetry' endpoint only
    /// requires authentication on the initial POST, subsequent calls that pass
    /// the token inherit the authentication from the initial token, so don't
    /// need the api_key passed.
    /// </summary>
    public partial interface IHelixApi : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Gets the IAggregate.
        /// </summary>
        IAggregate Aggregate { get; }

        /// <summary>
        /// Gets the IAnalysis.
        /// </summary>
        IAnalysis Analysis { get; }

        /// <summary>
        /// Gets the IInformation.
        /// </summary>
        IInformation Information { get; }

        /// <summary>
        /// Gets the IJob.
        /// </summary>
        IJob Job { get; }

        /// <summary>
        /// Gets the IRepository.
        /// </summary>
        IRepository Repository { get; }

        /// <summary>
        /// Gets the IScaleSets.
        /// </summary>
        IScaleSets ScaleSets { get; }

        /// <summary>
        /// Gets the IStorage.
        /// </summary>
        IStorage Storage { get; }

        /// <summary>
        /// Gets the ITelemetry.
        /// </summary>
        ITelemetry Telemetry { get; }

        /// <summary>
        /// Gets the IWorkItem.
        /// </summary>
        IWorkItem WorkItem { get; }

    }
}
