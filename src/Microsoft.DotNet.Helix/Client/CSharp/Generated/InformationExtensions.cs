// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Information.
    /// </summary>
    public static partial class InformationExtensions
    {
            /// <summary>
            /// Return queue info queried from Tags on Azure scaleset. The info includes:
            /// 1. Whether the queue exists.
            /// 2. Friendly description (if available) of queue, otherwise instructions how
            /// to fix that (ping dnceng)
            /// 3. Path to place the Jenkins workspace on disk.
            /// 4. Whether queue is used for internal customers only.
            /// 5. What OS the machines in the group use (windows/linux/osx).
            /// 6. List of users to which this queue is restricted, “all” if the queue is
            /// NOT restricted.
            /// 7. If the machine is on premises
            /// 8. What is the current Queue Depth (Number of messages still in the queue)
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='queueId'>
            /// .NET Helix Queue Id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<QueueInfo> QueueInfoMethodAsync(this IInformation operations, string queueId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.QueueInfoMethodWithHttpMessagesAsync(queueId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Return queue info queried from Tags on Azure scaleset. The info includes:
            /// 1. Whether the queue exists.
            /// 2. Friendly description (if available) of queue, otherwise instructions how
            /// to fix that (ping dnceng)
            /// 3. Path to place the Jenkins workspace on disk.
            /// 4. Whether queue is used for internal customers only.
            /// 5. What OS the machines in the group use (windows/linux/osx).
            /// 6. List of users to which this queue is restricted, “all” if the queue is
            /// NOT restricted.
            /// 7. If the machine is on premises
            /// 8. What is the current Queue Depth (Number of messages still in the queue)
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<QueueInfo>> QueueInfoListAsync(this IInformation operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.QueueInfoListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
