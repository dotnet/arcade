// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Telemetry.
    /// </summary>
    public static partial class TelemetryExtensions
    {
            /// <summary>
            /// Sends JobStarted telemetry based on the given
            /// {Helix.LifeTime.Web.Controllers.Api_2018_03_14.JobInfo} and returns a token
            /// to use to send telemetry for the created job.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='info'>
            /// The information about the Job
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> StartJobAsync(this ITelemetry operations, JobInfo info, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.StartJobWithHttpMessagesAsync(info, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Sends Telemetry for the start of a build work item.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xHelixJobToken'>
            /// </param>
            /// <param name='buildUri'>
            /// The uri where build details can be obtained.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> StartBuildWorkItemAsync(this ITelemetry operations, string xHelixJobToken, string buildUri, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.StartBuildWorkItemWithHttpMessagesAsync(xHelixJobToken, buildUri, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Sends Telemetry for the end of a build work item.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xHelixJobToken'>
            /// </param>
            /// <param name='id'>
            /// The id returned from the
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
            /// call.
            /// </param>
            /// <param name='errorCount'>
            /// The number of errors reported for this build.
            /// </param>
            /// <param name='warningCount'>
            /// The number of warnings reported for this build.
            /// </param>
            /// <param name='logUri'>
            /// The Uri where logs for this build may be accessed.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FinishBuildWorkItemAsync(this ITelemetry operations, string xHelixJobToken, string id, int errorCount, int warningCount, string logUri = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.FinishBuildWorkItemWithHttpMessagesAsync(xHelixJobToken, id, errorCount, warningCount, logUri, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Sends Telemetry for the start of an XUnit Test work item.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xHelixJobToken'>
            /// </param>
            /// <param name='friendlyName'>
            /// The friendly name of this work item.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> StartXUnitWorkItemAsync(this ITelemetry operations, string xHelixJobToken, string friendlyName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.StartXUnitWorkItemWithHttpMessagesAsync(xHelixJobToken, friendlyName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Sends Telemetry for the end of an XUnit Test work item.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xHelixJobToken'>
            /// </param>
            /// <param name='id'>
            /// The id returned from the
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
            /// call.
            /// </param>
            /// <param name='exitCode'>
            /// The exitCode of this work item.
            /// </param>
            /// <param name='resultsXmlUri'>
            /// The Uri where XUnit v2 format test results can be accessed.
            /// </param>
            /// <param name='logUri'>
            /// The Uri where logs for this test run may be accessed.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FinishXUnitWorkItemAsync(this ITelemetry operations, string xHelixJobToken, string id, int exitCode, string resultsXmlUri, string logUri = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.FinishXUnitWorkItemWithHttpMessagesAsync(xHelixJobToken, id, exitCode, resultsXmlUri, logUri, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Sends Telemetry for a warning from a work item.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xHelixJobToken'>
            /// </param>
            /// <param name='id'>
            /// The id returned from the
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
            /// or
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
            /// call.
            /// </param>
            /// <param name='eid'>
            /// The id of the warning.
            /// </param>
            /// <param name='message'>
            /// The warning message.
            /// </param>
            /// <param name='logUri'>
            /// The Uri where warning logs may be accessed.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task WarningAsync(this ITelemetry operations, string xHelixJobToken, string id, string eid, string message = default(string), string logUri = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.WarningWithHttpMessagesAsync(xHelixJobToken, id, eid, message, logUri, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Sends Telemetry for an error from a work item.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xHelixJobToken'>
            /// </param>
            /// <param name='id'>
            /// The id returned from the
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
            /// or
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
            /// call.
            /// </param>
            /// <param name='eid'>
            /// The id of the error.
            /// </param>
            /// <param name='message'>
            /// The error message.
            /// </param>
            /// <param name='logUri'>
            /// The Uri where error logs may be accessed.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ErrorAsync(this ITelemetry operations, string xHelixJobToken, string id, string eid, string message = default(string), string logUri = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.ErrorWithHttpMessagesAsync(xHelixJobToken, id, eid, message, logUri, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Sends Telemetry for work item logs.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='xHelixJobToken'>
            /// </param>
            /// <param name='id'>
            /// The id returned from the
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
            /// or
            /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
            /// call.
            /// </param>
            /// <param name='logUri'>
            /// The Uri where logs may be accessed.
            /// </param>
            /// <param name='format'>
            /// The format that this log is in.
            /// </param>
            /// <param name='module'>
            /// The module/dll where these logs came from.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task LogAsync(this ITelemetry operations, string xHelixJobToken, string id, string logUri, string format = default(string), string module = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.LogWithHttpMessagesAsync(xHelixJobToken, id, logUri, format, module, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
