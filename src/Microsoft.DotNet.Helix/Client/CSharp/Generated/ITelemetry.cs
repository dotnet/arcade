// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Telemetry operations.
    /// </summary>
    public partial interface ITelemetry
    {
        /// <summary>
        /// Sends JobStarted telemetry based on the given
        /// {Helix.LifeTime.Web.Controllers.Api_2018_03_14.JobInfo} and returns
        /// a token to use to send telemetry for the created job.
        /// </summary>
        /// <param name='info'>
        /// The information about the Job
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<string>> StartJobWithHttpMessagesAsync(JobInfo info, Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sends Telemetry for the start of a build work item.
        /// </summary>
        /// <param name='xHelixJobToken'>
        /// </param>
        /// <param name='buildUri'>
        /// The uri where build details can be obtained.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<string>> StartBuildWorkItemWithHttpMessagesAsync(string xHelixJobToken, string buildUri, Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sends Telemetry for the end of a build work item.
        /// </summary>
        /// <param name='xHelixJobToken'>
        /// </param>
        /// <param name='id'>
        /// The id returned from the
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
        /// call.
        /// </param>
        /// <param name='errorCount'>
        /// The number of errors reported for this build.
        /// </param>
        /// <param name='warningCount'>
        /// The number of warnings reported for this build.
        /// </param>
        /// <param name='logUri'>
        /// The Uri where logs for this build may be accessed.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> FinishBuildWorkItemWithHttpMessagesAsync(string xHelixJobToken, string id, int errorCount, int warningCount, string logUri = default(string), Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sends Telemetry for the start of an XUnit Test work item.
        /// </summary>
        /// <param name='xHelixJobToken'>
        /// </param>
        /// <param name='friendlyName'>
        /// The friendly name of this work item.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<string>> StartXUnitWorkItemWithHttpMessagesAsync(string xHelixJobToken, string friendlyName, Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sends Telemetry for the end of an XUnit Test work item.
        /// </summary>
        /// <param name='xHelixJobToken'>
        /// </param>
        /// <param name='id'>
        /// The id returned from the
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
        /// call.
        /// </param>
        /// <param name='exitCode'>
        /// The exitCode of this work item.
        /// </param>
        /// <param name='resultsXmlUri'>
        /// The Uri where XUnit v2 format test results can be accessed.
        /// </param>
        /// <param name='logUri'>
        /// The Uri where logs for this test run may be accessed.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> FinishXUnitWorkItemWithHttpMessagesAsync(string xHelixJobToken, string id, int exitCode, string resultsXmlUri, string logUri = default(string), Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sends Telemetry for a warning from a work item.
        /// </summary>
        /// <param name='xHelixJobToken'>
        /// </param>
        /// <param name='id'>
        /// The id returned from the
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
        /// or
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
        /// call.
        /// </param>
        /// <param name='eid'>
        /// The id of the warning.
        /// </param>
        /// <param name='message'>
        /// The warning message.
        /// </param>
        /// <param name='logUri'>
        /// The Uri where warning logs may be accessed.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> WarningWithHttpMessagesAsync(string xHelixJobToken, string id, string eid, string message = default(string), string logUri = default(string), Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sends Telemetry for an error from a work item.
        /// </summary>
        /// <param name='xHelixJobToken'>
        /// </param>
        /// <param name='id'>
        /// The id returned from the
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
        /// or
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
        /// call.
        /// </param>
        /// <param name='eid'>
        /// The id of the error.
        /// </param>
        /// <param name='message'>
        /// The error message.
        /// </param>
        /// <param name='logUri'>
        /// The Uri where error logs may be accessed.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> ErrorWithHttpMessagesAsync(string xHelixJobToken, string id, string eid, string message = default(string), string logUri = default(string), Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sends Telemetry for work item logs.
        /// </summary>
        /// <param name='xHelixJobToken'>
        /// </param>
        /// <param name='id'>
        /// The id returned from the
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartBuildWorkItem(System.String,System.Uri)}
        /// or
        /// {M:Helix.LifeTime.Web.Controllers.Api_2018_03_14.TelemetryApiController.StartXUnitWorkItem(System.String,System.String)}
        /// call.
        /// </param>
        /// <param name='logUri'>
        /// The Uri where logs may be accessed.
        /// </param>
        /// <param name='format'>
        /// The format that this log is in.
        /// </param>
        /// <param name='module'>
        /// The module/dll where these logs came from.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> LogWithHttpMessagesAsync(string xHelixJobToken, string id, string logUri, string format = default(string), string module = default(string), Dictionary<string, List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
