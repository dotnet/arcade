// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AggregatedVMScalingHistory
    {
        /// <summary>
        /// Initializes a new instance of the AggregatedVMScalingHistory class.
        /// </summary>
        public AggregatedVMScalingHistory()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AggregatedVMScalingHistory class.
        /// </summary>
        /// <param name="timestamp">The timestamp at which the snapshot was
        /// taken</param>
        /// <param name="totalMessageCount">Total Number of Messages in all the
        /// queues that the scaleSets are listening to</param>
        /// <param name="totalVMCount">Toal Number of VMs that are provisioned
        /// during snapshot</param>
        public AggregatedVMScalingHistory(System.DateTimeOffset timestamp, int totalMessageCount, int totalVMCount)
        {
            Timestamp = timestamp;
            TotalMessageCount = totalMessageCount;
            TotalVMCount = totalVMCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the timestamp at which the snapshot was taken
        /// </summary>
        [JsonProperty(PropertyName = "Timestamp")]
        public System.DateTimeOffset Timestamp { get; set; }

        /// <summary>
        /// Gets or sets total Number of Messages in all the queues that the
        /// scaleSets are listening to
        /// </summary>
        [JsonProperty(PropertyName = "TotalMessageCount")]
        public int TotalMessageCount { get; set; }

        /// <summary>
        /// Gets or sets toal Number of VMs that are provisioned during
        /// snapshot
        /// </summary>
        [JsonProperty(PropertyName = "TotalVMCount")]
        public int TotalVMCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
