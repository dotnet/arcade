// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ExternalLinkData
    {
        /// <summary>
        /// Initializes a new instance of the ExternalLinkData class.
        /// </summary>
        public ExternalLinkData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExternalLinkData class.
        /// </summary>
        public ExternalLinkData(string workItemStatus = default(string), string workItemStatusMessage = default(string), string description = default(string), string uri = default(string), string warningCount = default(string), IList<string> categories = default(IList<string>), FailureReason failureReason = default(FailureReason))
        {
            WorkItemStatus = workItemStatus;
            WorkItemStatusMessage = workItemStatusMessage;
            Description = description;
            Uri = uri;
            WarningCount = warningCount;
            Categories = categories;
            FailureReason = failureReason;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WorkItemStatus")]
        public string WorkItemStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WorkItemStatusMessage")]
        public string WorkItemStatusMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Uri")]
        public string Uri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WarningCount")]
        public string WarningCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Categories")]
        public IList<string> Categories { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FailureReason")]
        public FailureReason FailureReason { get; set; }

    }
}
