// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ContainerCreationRequest
    {
        /// <summary>
        /// Initializes a new instance of the ContainerCreationRequest class.
        /// </summary>
        public ContainerCreationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerCreationRequest class.
        /// </summary>
        /// <param name="expirationInDays">Utc value of requested expiration
        /// for container that is created for the user.
        /// If this time exceeds maximum allowed, it will be shortened in the
        /// result.</param>
        /// <param name="desiredName">Requested name for the container;  will
        /// be used if possible.</param>
        public ContainerCreationRequest(double? expirationInDays = default(double?), string desiredName = default(string))
        {
            ExpirationInDays = expirationInDays;
            DesiredName = desiredName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets utc value of requested expiration for container that
        /// is created for the user.
        /// If this time exceeds maximum allowed, it will be shortened in the
        /// result.
        /// </summary>
        [JsonProperty(PropertyName = "ExpirationInDays")]
        public double? ExpirationInDays { get; set; }

        /// <summary>
        /// Gets or sets requested name for the container;  will be used if
        /// possible.
        /// </summary>
        [JsonProperty(PropertyName = "DesiredName")]
        public string DesiredName { get; set; }

    }
}
