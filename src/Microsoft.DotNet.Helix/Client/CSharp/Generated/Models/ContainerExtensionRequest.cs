// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ContainerExtensionRequest
    {
        /// <summary>
        /// Initializes a new instance of the ContainerExtensionRequest class.
        /// </summary>
        public ContainerExtensionRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerExtensionRequest class.
        /// </summary>
        /// <param name="extensionInDays">Days to request extension on this
        /// container</param>
        /// <param name="containerName">Name of existing container to
        /// update</param>
        /// <param name="storageAccountName">While the generated container
        /// names should always be distinct, we'll only do work if the
        /// user also know this information.</param>
        public ContainerExtensionRequest(double? extensionInDays = default(double?), string containerName = default(string), string storageAccountName = default(string))
        {
            ExtensionInDays = extensionInDays;
            ContainerName = containerName;
            StorageAccountName = storageAccountName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets days to request extension on this container
        /// </summary>
        [JsonProperty(PropertyName = "ExtensionInDays")]
        public double? ExtensionInDays { get; set; }

        /// <summary>
        /// Gets or sets name of existing container to update
        /// </summary>
        [JsonProperty(PropertyName = "ContainerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Gets or sets while the generated container names should always be
        /// distinct, we'll only do work if the
        /// user also know this information.
        /// </summary>
        [JsonProperty(PropertyName = "StorageAccountName")]
        public string StorageAccountName { get; set; }

    }
}
