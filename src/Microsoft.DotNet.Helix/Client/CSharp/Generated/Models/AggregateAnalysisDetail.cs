// <auto-generated>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
//
// </auto-generated>

namespace Microsoft.DotNet.Helix.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AggregateAnalysisDetail
    {
        /// <summary>
        /// Initializes a new instance of the AggregateAnalysisDetail class.
        /// </summary>
        public AggregateAnalysisDetail()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AggregateAnalysisDetail class.
        /// </summary>
        /// <param name="analysis">The analysis object requested.</param>
        /// <param name="job">The job this analysis is from</param>
        /// <param name="workItem">The workitem this analysis is from</param>
        /// <param name="key">Contains each provided groupBy key and the value
        /// for this particular set</param>
        public AggregateAnalysisDetail(object analysis, string job, string workItem, IDictionary<string, string> key)
        {
            Analysis = analysis;
            Job = job;
            WorkItem = workItem;
            Key = key;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the analysis object requested.
        /// </summary>
        [JsonProperty(PropertyName = "Analysis")]
        public object Analysis { get; set; }

        /// <summary>
        /// Gets or sets the job this analysis is from
        /// </summary>
        [JsonProperty(PropertyName = "Job")]
        public string Job { get; set; }

        /// <summary>
        /// Gets or sets the workitem this analysis is from
        /// </summary>
        [JsonProperty(PropertyName = "WorkItem")]
        public string WorkItem { get; set; }

        /// <summary>
        /// Gets or sets contains each provided groupBy key and the value for
        /// this particular set
        /// </summary>
        [JsonProperty(PropertyName = "Key")]
        public IDictionary<string, string> Key { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Analysis == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Analysis");
            }
            if (Job == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Job");
            }
            if (WorkItem == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "WorkItem");
            }
            if (Key == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Key");
            }
        }
    }
}
