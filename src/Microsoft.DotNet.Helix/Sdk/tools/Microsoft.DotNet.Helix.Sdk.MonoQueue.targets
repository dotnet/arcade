<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <EnableXUnitReporter Condition=" '$(EnableXUnitReporter)' != 'true' ">false</EnableXUnitReporter>
  </PropertyGroup>

  <Choose>
    <When Condition="$(HelixTargetQueue.ToLowerInvariant().Contains('windows'))">
      <PropertyGroup>
        <IsPosixShell>false</IsPosixShell>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <IsPosixShell>true</IsPosixShell>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Import Project="$(_HelixMonoQueueTargets)" Condition="'$(_HelixMonoQueueTargets)' != ''"/>

  <Target Name="AddXUnitReporter" Condition="$(EnableXUnitReporter)" BeforeTargets="CoreTest">
    <ItemGroup>
      <HelixCorrelationPayload Include="$(MSBuildThisFileDirectory)xunit-reporter"/>
    </ItemGroup>
    <PropertyGroup>
      <HelixPostCommands Condition="$(IsPosixShell)">$(HelixPostCommands);$HELIX_PYTHONPATH -B $HELIX_CORRELATION_PAYLOAD/xunit-reporter.py</HelixPostCommands>
      <HelixPostCommands Condition="!$(IsPosixShell)">$(HelixPostCommands);%HELIX_PYTHONPATH% -B %HELIX_CORRELATION_PAYLOAD%\xunit-reporter.py</HelixPostCommands>

      <MaxRetryCount Condition="'$(MaxRetryCount)' == ''">0</MaxRetryCount>
    </PropertyGroup>
  </Target>

  <ItemGroup>
    <HelixProperties Condition="'$(HelixConfiguration)' != ''" Include="configuration" Value="$(HelixConfiguration)" />
    <HelixProperties Condition="'$(HelixArchitecture)' != ''" Include="architecture" Value="$(HelixArchitecture)" />
    <HelixProperties Include="operatingSystem" Value="$(HelixTargetQueue)" />
  </ItemGroup>

  <Target Name="CoreBuild">
  </Target>

  <Target Name="CoreTest">
    <PropertyGroup Condition="$(IsPosixShell)">
      <HelixPreCommands>set -x;$(HelixPreCommands)</HelixPreCommands>
    </PropertyGroup>
    <SendHelixJob Type="$(HelixType)"
                  TargetQueue="$(HelixTargetQueue)"
                  IsPosixShell="$(IsPosixShell)"
                  Creator="$(Creator)"
                  BaseUri="$(HelixBaseUri)"
                  AccessToken="$(HelixAccessToken)"
                  MaxRetryCount="$(MaxRetryCount)"
                  PreCommands="$(HelixPreCommands)"
                  PostCommands="$(HelixPostCommands)"
                  CorrelationPayloads="@(HelixCorrelationPayload)"
                  WorkItems="@(HelixWorkItem)"
                  HelixProperties="@(HelixProperties)">
      <Output TaskParameter="JobCorrelationId" PropertyName="HelixJobId"/>
      <Output TaskParameter="JobCancellationToken" PropertyName="HelixJobCancellationToken"/>
      <Output TaskParameter="ResultsContainerUri" PropertyName="HelixResultsContainer"/>
      <Output TaskParameter="ResultsContainerReadSAS" PropertyName="HelixResultsContainerReadSAS"/>
    </SendHelixJob>
    <ItemGroup>
      <SentJob Include="$(HelixJobId)">
        <WorkItemCount>@(HelixWorkItem->Count())</WorkItemCount>
        <HelixTargetQueue>$(HelixTargetQueue)</HelixTargetQueue>
        <ResultsContainerUri>$(HelixResultsContainer)</ResultsContainerUri>
        <ResultsContainerReadSAS>$(HelixResultsContainerReadSAS)</ResultsContainerReadSAS>
        <HelixJobCancellationToken>$(HelixJobCancellationToken)</HelixJobCancellationToken>
      </SentJob>
    </ItemGroup>

    <PropertyGroup>
      <_AccessTokenSuffix />
      <_AccessTokenSuffix Condition=" '$(HelixAccessToken)' != '' ">&amp;access_token={Get this from helix.dot.net}</_AccessTokenSuffix>
    </PropertyGroup>
    <Message Condition=" '$(HelixBaseUri)' == '' " Text="Sent Helix Job; see work items at https://helix.dot.net/api/jobs/$(HelixJobId)/workitems?api-version=2019-06-17$(_AccessTokenSuffix)" Importance="High" />
    <Message Condition=" '$(HelixBaseUri)' != '' " Text="Sent Helix Job; see work items at $(HelixBaseUri)/api/jobs/$(HelixJobId)/workitems?api-version=2019-06-17$(_AccessTokenSuffix)" Importance="High" />
  </Target>

  <Target Name="Test"
    DependsOnTargets="$(TestDependsOn)"
    Returns="@(SentJob)">
  </Target>
</Project>
