<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <!-- Helix Queues which do not exist (deprecation, typos, or purposful removal for use reduction) will error by default. 
         For users that do not want this to break builds (such as in release branch testing) this property allows to downgrade 
         this failure mode to just a warning, which hopefully still tells the user to remove usage when possible. -->
    <FailOnMissingTargetQueue Condition=" '$(FailOnMissingTargetQueue)' != 'false' ">true</FailOnMissingTargetQueue>
  </PropertyGroup>

  <Choose>
    <When Condition="$(HelixTargetQueue.ToLowerInvariant().Contains('windows'))">
      <PropertyGroup>
        <IsPosixShell>false</IsPosixShell>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <IsPosixShell>true</IsPosixShell>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Import Project="$(_HelixMonoQueueTargets)" Condition="'$(_HelixMonoQueueTargets)' != ''"/>
  
  <Target Name="AddXUnitReporter" Condition="$(EnableXUnitReporter)" BeforeTargets="CoreTest">
    <ItemGroup>
      <HelixCorrelationPayload Include="$(MSBuildThisFileDirectory)xunit-reporter"/>
    </ItemGroup>
    <PropertyGroup>
      <HelixPostCommands Condition="$(IsPosixShell)">$(HelixPostCommands);$HELIX_PYTHONPATH -B $HELIX_CORRELATION_PAYLOAD/xunit-reporter.py</HelixPostCommands>
      <HelixPostCommands Condition="!$(IsPosixShell)">$(HelixPostCommands);%HELIX_PYTHONPATH% -B %HELIX_CORRELATION_PAYLOAD%\xunit-reporter.py</HelixPostCommands>

      <MaxRetryCount Condition="'$(MaxRetryCount)' == ''">0</MaxRetryCount>
    </PropertyGroup>
  </Target>

  <ItemGroup>
    <HelixProperties Condition="'$(HelixConfiguration)' != ''" Include="configuration" Value="$(HelixConfiguration)" />
    <HelixProperties Condition="'$(HelixArchitecture)' != ''" Include="architecture" Value="$(HelixArchitecture)" />
    <HelixProperties Include="operatingSystem" Value="$(HelixTargetQueue)" />
  </ItemGroup>

  <Target Name="CoreBuild">
  </Target>

  <Target Name="CoreTest">
    <PropertyGroup Condition="$(IsPosixShell)">
      <HelixPreCommands>set -x;$(HelixPreCommands)</HelixPreCommands>
    </PropertyGroup>
    <SendHelixJob Type="$(HelixType)"
                  TargetQueue="$(HelixTargetQueue)"
                  FailOnMissingTargetQueue="$(FailOnMissingTargetQueue)"
                  IsPosixShell="$(IsPosixShell)"
                  Creator="$(Creator)"
                  BaseUri="$(HelixBaseUri)"
                  AccessToken="$(HelixAccessToken)"
                  MaxRetryCount="$(MaxRetryCount)"
                  PreCommands="$(HelixPreCommands)"
                  PostCommands="$(HelixPostCommands)"
                  CorrelationPayloads="@(HelixCorrelationPayload)"
                  WorkItems="@(HelixWorkItem)"
                  HelixProperties="@(HelixProperties)">
      <Output TaskParameter="JobCorrelationId" PropertyName="HelixJobId"/>
      <Output TaskParameter="ResultsContainerUri" PropertyName="HelixResultsContainer"/>
      <Output TaskParameter="ResultsContainerReadSAS" PropertyName="HelixResultsContainerReadSAS"/>
    </SendHelixJob>
    <ItemGroup>
      <SentJob Include="$(HelixJobId)">
        <WorkItemCount>@(HelixWorkItem->Count())</WorkItemCount>
        <HelixTargetQueue>$(HelixTargetQueue)</HelixTargetQueue>
        <ResultsContainerUri>$(HelixResultsContainer)</ResultsContainerUri>
        <ResultsContainerReadSAS>$(HelixResultsContainerReadSAS)</ResultsContainerReadSAS>
      </SentJob>
    </ItemGroup>
    <Message Text="Sent Helix Job $(HelixJobId)" Importance="High" />
  </Target>

  <Target Name="Test"
    DependsOnTargets="$(TestDependsOn)"
    Returns="@(SentJob)">
  </Target>
</Project>
