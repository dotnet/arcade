<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      Set by Microsoft.Common.targets, some targets must be removed while others are left as standard extension mechanisms.
    -->
    <CoreBuildDependsOn>
      BuildOnlySettings;
      PrepareForBuild;
      PreBuildEvent;
      ResolveReferences;
      PostBuildEvent
    </CoreBuildDependsOn>

    <PrepareForBuildDependsOn></PrepareForBuildDependsOn>

    <ResolveReferencesDependsOn>
      BeforeResolveReferences;
      AssignProjectConfiguration;
      ResolveProjectReferences;
      FindInvalidProjectReferences;
      AfterResolveReferences
    </ResolveReferencesDependsOn>

    <TestDependsOn>
      Build
    </TestDependsOn>

    <CleanDependsOn>
      BeforeClean;
      UnmanagedUnregistration;
      CoreClean;
      PrepareProjectReferences;
      CleanPublishFolder;
      AfterClean
    </CleanDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <EnableXUnitReporter Condition=" '$(EnableXUnitReporter)' != 'true' ">false</EnableXUnitReporter>
  </PropertyGroup>

  <Choose>
    <When Condition="$(HelixTargetQueue.ToLowerInvariant().Contains('windows'))">
      <PropertyGroup>
        <IsPosixShell>false</IsPosixShell>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <IsPosixShell>true</IsPosixShell>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <When Condition="$(HelixTargetQueue.ToLowerInvariant().Contains('osx'))">
      <PropertyGroup>
        <IsOsx>true</IsOsx>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <IsOsx>false</IsOsx>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Target Name="AddDotNetSdk" Condition="$(IncludeDotNetSdk)" BeforeTargets="AddXUnitReporter">
    <ItemGroup>
      <HelixCorrelationPayload Condition="!$(IsPosixShell)" Include="ignore">
        <Uri>https://netcorenativeassets.blob.core.windows.net/resource-packages/external/windows/dotnet/dotnet-sdk-2.1.403-win-x64</Uri>
      </HelixCorrelationPayload>
      <HelixCorrelationPayload Condition="$(IsPosixShell) And $(IsOsx)" Include="ignore">
        <Uri>https://netcorenativeassets.blob.core.windows.net/resource-packages/external/macos/dotnet/dotnet-sdk-2.1.403-osx-x64.tar.gz</Uri>
      </HelixCorrelationPayload>
      <HelixCorrelationPayload Condition="$(IsPosixShell) And !$(IsOsx)" Include="ignore">
        <Uri>https://netcorenativeassets.blob.core.windows.net/resource-packages/external/linux/dotnet/dotnet-sdk-2.1.403-linux-x64.tar.gz</Uri>
      </HelixCorrelationPayload>
    </ItemGroup>
    <PropertyGroup>
      <HelixPreCommands Condition="$(IsPosixShell)">$(HelixPostCommands);$HELIX_PYTHONPATH $HELIX_CORRELATION_PAYLOAD/xunit-reporter.py</HelixPreCommands>
      <HelixPreCommands Condition="!$(IsPosixShell)">$(HelixPostCommands);%HELIX_PYTHONPATH% %HELIX_CORRELATION_PAYLOAD%\xunit-reporter.py</HelixPreCommands>
    </PropertyGroup>
  </Target>
  
  <Target Name="AddXUnitReporter" Condition="$(EnableXUnitReporter)" BeforeTargets="Test">
    <ItemGroup>
      <HelixCorrelationPayload Include="$(MSBuildThisFileDirectory)xunit-reporter"/>
    </ItemGroup>
    <PropertyGroup>
      <HelixPostCommands Condition="$(IsPosixShell)">$(HelixPostCommands);$HELIX_PYTHONPATH $HELIX_CORRELATION_PAYLOAD/xunit-reporter.py</HelixPostCommands>
      <HelixPostCommands Condition="!$(IsPosixShell)">$(HelixPostCommands);%HELIX_PYTHONPATH% %HELIX_CORRELATION_PAYLOAD%\xunit-reporter.py</HelixPostCommands>
    </PropertyGroup>
  </Target>

  <Target Name="Test"
    DependsOnTargets="$(TestDependsOn)" Returns="@(SentJob)">
    <SendHelixJob Source="$(HelixSource)"
                  Type="$(HelixType)"
                  Build="$(HelixBuild)"
                  TargetQueue="$(HelixTargetQueue)"
                  IsPosixShell="$(IsPosixShell)"
                  BaseUri="$(HelixBaseUri)"
                  AccessToken="$(HelixAccessToken)"
                  PreCommands="$(HelixPreCommands)"
                  PostCommands="$(HelixPostCommands)"
                  CorrelationPayloads="@(HelixCorrelationPayload)"
                  WorkItems="@(HelixWorkItem)">
      <Output TaskParameter="JobCorrelationId" PropertyName="HelixJobId"/>
    </SendHelixJob>
    <ItemGroup>
      <SentJob Include="$(HelixJobId)">
        <WorkItemCount>@(HelixWorkItem->Count())</WorkItemCount>
      </SentJob>
    </ItemGroup>
    <Message Text="Sent Helix Job $(HelixJobId)" Importance="High" />
  </Target>
</Project>
