<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      Set by Microsoft.Common.targets, some targets must be removed while others are left as standard extension mechanisms.
    -->
    <CoreBuildDependsOn>
      BuildOnlySettings;
      PrepareForBuild;
      PreBuildEvent;
      ResolveReferences;
      PostBuildEvent
    </CoreBuildDependsOn>

    <PrepareForBuildDependsOn></PrepareForBuildDependsOn>

    <ResolveReferencesDependsOn>
      BeforeResolveReferences;
      AssignProjectConfiguration;
      ResolveProjectReferences;
      FindInvalidProjectReferences;
      AfterResolveReferences
    </ResolveReferencesDependsOn>

    <TestDependsOn>
      Build;
      ValidateTargetQueues
    </TestDependsOn>

    <CleanDependsOn>
      BeforeClean;
      UnmanagedUnregistration;
      CoreClean;
      PrepareProjectReferences;
      CleanPublishFolder;
      AfterClean
    </CleanDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <WaitForWorkItemCompletion Condition="'$(WaitForWorkItemCompletion)' != 'false'">true</WaitForWorkItemCompletion>

    <!-- Split up HelixTargetQueues list
         In order to support all delimiters (commas, plus and semicolons).
         Note that queues will never have ',', '+' or ';' in their name, and this greatly simplifies providing a queue list in *nix.
    -->
    <_ProcessedTargetQueues>$([System.String]::Copy('$(HelixTargetQueues)').Replace(',',';').Replace('+',';'))</_ProcessedTargetQueues>
  </PropertyGroup>

  <ItemGroup>
    <!-- This Split() is needed since the semicolon in ProcessedTargetQueues is now a literal -->
    <HelixTargetQueue Include="$(_ProcessedTargetQueues.Split(';'))" />
  </ItemGroup>

  <Target Name="ValidateTargetQueues">
    <Error Condition="'@(HelixTargetQueue)' == ''" Text="You must specify at least one target queue to send a job to helix. Use HelixTargetQueues property for multiple or HelixTargetQueue for a single queue." />
  </Target>

  <Import Project="$(_HelixMultiQueueTargets)" Condition="'$(_HelixMultiQueueTargets)' != ''"/>

  <Target Name="Test"
          DependsOnTargets="$(TestDependsOn)">
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Test" Properties="HelixTargetQueue=%(HelixTargetQueue.Identity);%(HelixTargetQueue.AdditionalProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="SentJobs" />
    </MSBuild>
  </Target>

  <Target Name="Wait"
          AfterTargets="Test"
          Condition="$(WaitForWorkItemCompletion)">
    <Message Importance="High" Text="Waiting on job completion..." />
    <HelixWait Jobs="@(SentJobs)" AccessToken="$(HelixAccessToken)" Source="$(HelixSource)" Type="$(HelixType)" Build="$(HelixBuild)" IsExternal="$(IsExternal)" Creator="$(Creator)" />
  </Target>
</Project>
