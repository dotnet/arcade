<Project>

  <Target Name="DetectXHarnessRequest"
          Condition=" '@(XHarnessAppFolderToTest)' != '' OR '@(XHarnessPackageToTest)' != '' OR '@(XHarnessAndroidProject)' != '' OR '@(XHarnessiOSProject)' != '' OR '$(IncludeXHarnessCli)' == 'true' "
          BeforeTargets="AddDotNetSdk;AddXHarnessCli">
    <PropertyGroup>
      <IncludeDotNetCli>true</IncludeDotNetCli>
      <IncludeXHarnessCli>true</IncludeXHarnessCli>
      <DotNetCliPackageType>sdk</DotNetCliPackageType>
      <DotNetCliVersion>3.1.201</DotNetCliVersion>
    </PropertyGroup>
  </Target>

  <Target Name="AddXHarnessCli"
          Condition=" '$(IncludeXHarnessCli)' == 'true' "
          BeforeTargets="CoreTest"
          DependsOnTargets="AddDotNetSdk">

    <Error Condition=" '$(_XHarnessPackageVersion)' == '' " Text="XHarness CLI version not defined! Please specify it using the MicrosoftDotNetXHarnessCLIVersion property" />

    <!-- When XHarnessNupkgPath is set, we send the .nupkg with the job and install the tool from there -->
    <Message Condition=" '$(XHarnessNupkgPath)' != '' " Text="XHarnessNupkgPath is set so XHarnessPackageSource will be ignored" Importance="normal" />

    <PropertyGroup Condition=" '$(XHarnessNupkgPath)' != '' AND $(IsPosixShell) ">
      <XHarnessPackageSource>$HELIX_CORRELATION_ARCHIVE_ROOT</XHarnessPackageSource>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(XHarnessNupkgPath)' != '' AND !$(IsPosixShell) ">
      <XHarnessPackageSource>%HELIX_CORRELATION_ARCHIVE_ROOT%</XHarnessPackageSource>
    </PropertyGroup>

    <ItemGroup Condition=" '$(XHarnessNupkgPath)' != '' ">
      <HelixCorrelationPayload Include="$(XHarnessNupkgPath)" />
    </ItemGroup>

    <!-- When using a dotnet 'tool' that is not installed globally, we must set DOTNET_ROOT.
         This is because a framework dependent dotnet tool only searches in program files folders for runtimes.
         When .NET is not already installed there, we set DOTNET_ROOT to help it find the right one. -->
    <PropertyGroup Condition="$(IsPosixShell)">
      <HelixPreCommands>$(HelixPreCommands);export DOTNET_ROOT=$HELIX_CORRELATION_PAYLOAD/dotnet</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);dotnet tool install --tool-path $HELIX_CORRELATION_PAYLOAD/xharness-cli --version $(_XHarnessPackageVersion) --add-source $(XHarnessPackageSource) $(_XHarnessPackageName)</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);export PATH=$HELIX_CORRELATION_PAYLOAD/xharness-cli:$PATH</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);export XHARNESS_DISABLE_COLORED_OUTPUT=true</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);export XHARNESS_LOG_WITH_TIMESTAMPS=true</HelixPreCommands>
    </PropertyGroup>

    <PropertyGroup Condition="!$(IsPosixShell)">
      <HelixPreCommands>$(HelixPreCommands);set DOTNET_ROOT=%HELIX_CORRELATION_PAYLOAD%\dotnet</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);dotnet tool install --tool-path %HELIX_CORRELATION_PAYLOAD%\xharness-cli --version $(_XHarnessPackageVersion) --add-source $(XHarnessPackageSource) $(_XHarnessPackageName)</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);set PATH=%HELIX_CORRELATION_PAYLOAD%\xharness-cli%3B%PATH%</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);set XHARNESS_DISABLE_COLORED_OUTPUT=true</HelixPreCommands>
      <HelixPreCommands>$(HelixPreCommands);set XHARNESS_LOG_WITH_TIMESTAMPS=true</HelixPreCommands>
    </PropertyGroup>
  </Target>

  <Target Name="BuildXHarnessAndroidProjects"
          Condition=" '@(XHarnessAndroidProject)' != '' "
          BeforeTargets="CoreBuild"
          Outputs="%(XHarnessAndroidProject.Identity)%(XHarnessAndroidProject.AdditionalProperties)">
    <PropertyGroup>
      <_CurrentXHarnessAndroidProject>%(XHarnessAndroidProject.Identity)</_CurrentXHarnessAndroidProject>
      <_CurrentAdditionalProperties>%(XHarnessAndroidProject.AdditionalProperties)</_CurrentAdditionalProperties>
    </PropertyGroup>
    <MSBuild Projects="$(_CurrentXHarnessAndroidProject)" Targets="Build" Properties="$(_CurrentAdditionalProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="XHarnessPackageToTest" />
    </MSBuild>
  </Target>

  <Target Name="BuildXHarnessiOSProjects"
          Condition=" '@(XHarnessiOSProject)' != '' "
          BeforeTargets="CoreBuild"
          Outputs="%(XHarnessiOSProject.Identity)%(XHarnessiOSProject.AdditionalProperties)">
    <PropertyGroup>
      <_CurrentXHarnessiOSProject>%(XHarnessiOSProject.Identity)</_CurrentXHarnessiOSProject>
      <_CurrentAdditionalProperties>%(XHarnessiOSProject.AdditionalProperties)</_CurrentAdditionalProperties>
    </PropertyGroup>
    <MSBuild Projects="$(_CurrentXHarnessiOSProject)" Targets="Build" Properties="$(_CurrentAdditionalProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="XHarnessAppFolderToTest" />
    </MSBuild>
  </Target>

  <Target Name="CreateAndroidWorkItems"
          Condition=" '@(XHarnessPackageToTest)' != '' "
          BeforeTargets="CoreTest">
    <CreateXHarnessAndroidWorkItems AppPackages="@(XHarnessPackageToTest)"
                                    IsPosixShell="$(IsPosixShell)"
                                    WorkItemTimeout="%(XHarnessPackageToTest.WorkItemTimeout)"
                                    TestTimeout="%(XHarnessPackageToTest.TestTimeout)">
      <Output TaskParameter="WorkItems" ItemName="HelixWorkItem"/>
    </CreateXHarnessAndroidWorkItems>
  </Target>

  <Target Name="CreateiOSWorkItems"
          Condition=" '@(XHarnessAppFolderToTest)' != '' "
          BeforeTargets="CoreTest">
    <CreateXHarnessiOSWorkItems AppFolders="@(XHarnessAppFolderToTest)"
                                IsPosixShell="$(IsPosixShell)"
                                XcodeVersion="$(XHarnessXcodeVersion)"
                                WorkItemTimeout="%(XHarnessAppFolderToTest.WorkItemTimeout)"
                                TestTimeout="%(XHarnessAppFolderToTest.TestTimeout)">
      <Output TaskParameter="WorkItems" ItemName="HelixWorkItem"/>
    </CreateXHarnessiOSWorkItems>
  </Target>

</Project>
