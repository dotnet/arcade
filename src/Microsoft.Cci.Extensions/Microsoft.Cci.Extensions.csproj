<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Treat this as a tooling library. -->
    <TargetFrameworks>$(NetToolCurrent);netstandard2.0;$(NetFrameworkToolCurrent)</TargetFrameworks>
    <ExcludeFromSourceOnlyBuild>true</ExcludeFromSourceOnlyBuild>
    <IsPackable>true</IsPackable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\Common\Internal\DisposeAction.cs" Link="Internal\DisposeAction.cs"/>
  </ItemGroup>

  <ItemGroup>
    <!-- Manually reference Microsoft.Cci.dll via a PackageDownload+Reference item instead of
         using a PackageReference to avoid bringing in the old dependency graph. -->
    <PackageDownload Include="Microsoft.Cci" Version="[$(MicrosoftCciVersion)]" />
    <Reference Include="$(NuGetPackageRoot)microsoft.cci\$(MicrosoftCciVersion)\lib\netstandard1.3\Microsoft.Cci.dll" />
    <PackageReference Include="System.Composition" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' != '.NETCoreApp'">
    <PackageReference Include="System.Memory" />
    <PackageReference Include="System.Reflection.Metadata" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
    <Reference Include="System.Net.Http" />
  </ItemGroup>

  <!-- This project is a build task dependency and needs to follow desktop version requirements. -->
  <Import Project="$(RepositoryEngineeringDir)BuildTask.Packages.props" />

</Project>
