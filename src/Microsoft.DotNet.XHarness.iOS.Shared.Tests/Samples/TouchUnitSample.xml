<TouchUnitTestRun>
<NUnitOutput>

<!--This file represents the results of running a test suite-->
<test-results name="" total="2354" errors="0" failures="0" not-run="59" inconclusive="13" ignored="59" skipped="0" invalid="0" date="2019-12-18" time="02:12:41">
  <environment nunit-version="1.0.0.0" clr-version="4.0.50524.0" os-version="Unix 18.5.0.0" platform="Unix" cwd="/Users/builder/Library/Developer/CoreSimulator/Devices/F959903E-C6FD-49F6-AB5C-E7538A61D713/data/Containers/Bundle/Application/D05CC0D3-0874-4B74-9383-8F869A2C63C9/monotouchtest.app" machine-name="xam-macios-mojave-2" user="somebody" user-domain="xam-macios-mojave-2" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestSuite" name="" executed="False" result="Ignored">
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <results>
      <test-suite type="Assembly" name="/Users/builder/Library/Developer/CoreSimulator/Devices/F959903E-C6FD-49F6-AB5C-E7538A61D713/data/Containers/Bundle/Application/D05CC0D3-0874-4B74-9383-8F869A2C63C9/monotouchtest.app/monotouchtest.exe" executed="False" result="Ignored">
        <properties>
          <property name="_PID" value="84924" />
          <property name="_APPDOMAIN" value="MonoTouch" />
        </properties>
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <results>
          <test-suite type="TestFixture" name="PointFTest" executed="True" result="Success" success="True" time="0.024" asserts="42">
            <results>
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0.013" asserts="2" />
              <test-case name="GetHashCodeTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="SubtractTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestAddition" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TestConstructors" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestEmptyField" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestEqualityOp" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestEquals" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestInequalityOp" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestProperties" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="TestSubtraction" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0.001" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PointTest" executed="True" result="Success" success="True" time="0.004" asserts="51">
            <results>
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="AdditionTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CeilingTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ConstructorNegativeLocationTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ConstructorTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="EqualityOpTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="EqualsTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="GetHashCodeTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="InequalityOpTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="NullTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="OffsetTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="OffsetTestPoint" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Point2PointFTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Point2SizeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="PropertyTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="RoundTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SubtractTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SubtractionTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TruncateTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SizeFTest" executed="True" result="Success" success="True" time="0.003" asserts="50">
            <results>
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetHashCodeTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SubtractTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Test2PointF" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Test2Size" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestAddition" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestConstructors" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="TestEmptyField" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestEqualityOp" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestEquals" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestInequalityOp" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestProperties" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="TestSizeF2PointF" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestSubtraction" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SizeTest" executed="True" result="Success" success="True" time="0.003" asserts="46">
            <results>
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetHashCodeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SubtractTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestAddition" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestCeiling" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestConstructors" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestEmptyField" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestEqualityOp" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestEquals" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestInequalityOp" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="TestProperties" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="TestRound" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TestSize2Point" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestSize2SizeF" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestSubtraction" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestTruncate" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TestRectangle" executed="True" result="Success" success="True" time="0.013" asserts="76">
            <results>
              <test-case name="Contains" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="ConvertFromRectangleF" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Empty" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="FromTRLB" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="GetContents" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="GetHashCodeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Inflate" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Intersect" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="IntersectsWith" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="IsEmpty" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Location" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="NegativeHeight" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="NegativeWidth" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Offset" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Operator_Equal" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="Operator_NotEqual" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="Size" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Union" executed="True" result="Success" success="True" time="0.009" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TestRectangleF" executed="True" result="Success" success="True" time="0.005" asserts="76">
            <results>
              <test-case name="Contains" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="ContainsF" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="EdgeIntersection" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Empty" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="GetContents" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="GetHashCodeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Inflate" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Intersect" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="IntersectsWith" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="IsEmpty" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="Location" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="NegativeHeight" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="NegativeWidth" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Offset" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Operator_Equal" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="Operator_NotEqual" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="RectangleToRectangleF" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Size" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Union" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MessageHandlerTest" executed="True" result="Success" success="True" time="2.444" asserts="37">
            <results>
              <test-suite type="ParameterizedMethod" name="AcceptSslCertificatesServicePointManager" executed="True" result="Success" success="True" time="0.643" asserts="0">
                <results>
                  <test-case name="AcceptSslCertificatesServicePointManager(System.Net.Http.HttpClientHandler)" executed="True" result="Success" success="True" time="0.323" asserts="0" />
                  <test-case name="AcceptSslCertificatesServicePointManager(System.Net.Http.NSUrlSessionHandler)" executed="True" result="Success" success="True" time="0.32" asserts="0" />
                </results>
              </test-suite>
              <test-case name="AssertDefaultValuesNSUrlSessionHandler" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-suite type="ParameterizedMethod" name="DnsFailure" executed="True" result="Success" success="True" time="0.329" asserts="9">
                <results>
                  <test-case name="DnsFailure(System.Net.Http.HttpClientHandler)" executed="True" result="Success" success="True" time="0.11" asserts="3" />
                  <test-case name="DnsFailure(System.Net.Http.CFNetworkHandler)" executed="True" result="Success" success="True" time="0.109" asserts="3" />
                  <test-case name="DnsFailure(System.Net.Http.NSUrlSessionHandler)" executed="True" result="Success" success="True" time="0.109" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="RedirectionWithAuthorizationHeaders" executed="True" result="Success" success="True" time="0.937" asserts="6">
                <results>
                  <test-case name="RedirectionWithAuthorizationHeaders(System.Net.Http.HttpClientHandler)" executed="True" result="Success" success="True" time="0.212" asserts="2" />
                  <test-case name="RedirectionWithAuthorizationHeaders(System.Net.Http.CFNetworkHandler)" executed="True" result="Success" success="True" time="0.412" asserts="2" />
                  <test-case name="RedirectionWithAuthorizationHeaders(System.Net.Http.NSUrlSessionHandler)" executed="True" result="Success" success="True" time="0.313" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="RejectSslCertificatesServicePointManager" executed="True" result="Success" success="True" time="0.22" asserts="12">
                <results>
                  <test-case name="RejectSslCertificatesServicePointManager(System.Net.Http.HttpClientHandler)" executed="True" result="Success" success="True" time="0.112" asserts="6" />
                  <test-case name="RejectSslCertificatesServicePointManager(System.Net.Http.NSUrlSessionHandler)" executed="True" result="Success" success="True" time="0.108" asserts="6" />
                </results>
              </test-suite>
              <test-case name="TestNSUrlSessionHandlerCookies" executed="True" result="Success" success="True" time="0.313" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVAssetImageGeneratorTest" executed="True" result="Success" success="True" time="0.031" asserts="14">
            <results>
              <test-case name="AppliesPreferredTrackTransform" executed="True" result="Success" success="True" time="0.007" asserts="1" />
              <test-case name="CopyCGImageAtTime" executed="True" result="Success" success="True" time="0.012" asserts="3" />
              <test-case name="CopyCGImageAtTime_Invalid" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="GenerateCGImagesAsynchronously" executed="True" result="Success" success="True" time="0.009" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVAudioConverterPrimeInfoTest" executed="True" result="Success" success="True" time="0.001" asserts="9">
            <results>
              <test-case name="AreEqualDiffType" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="AreEqualFalseTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AreEqualTrueTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ConstructorTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVBeatRangeTest" executed="True" result="Success" success="True" time="0.001" asserts="9">
            <results>
              <test-case name="AreEqualDiffType" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="AreEqualFalseTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AreEqualTrueTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ConstructorTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVCaptureWhiteBalanceGainsTest" executed="True" result="Success" success="True" time="0.001" asserts="10">
            <results>
              <test-case name="AreEqualDiffType" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="AreEqualFalseTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AreEqualTrueTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ConstructorTest" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVDepthDataTests" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="AvailableDepthDataTypesTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVFoundationEnumTest" executed="True" result="Success" success="True" time="0" asserts="3">
            <results>
              <test-case name="PromptStyle" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVStructTest" executed="True" result="Success" success="True" time="0" asserts="4">
            <results>
              <test-case name="StructSizeTest" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioPlayerTest" executed="True" result="Success" success="True" time="0.016" asserts="3">
            <results>
              <test-case name="FromUrl" executed="True" result="Success" success="True" time="0.016" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PlayerItemTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="FromAssert_Null" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PlayerItemVideoOutputTest" executed="True" result="Success" success="True" time="0.002" asserts="1">
            <results>
              <test-case name="Ctor_CVPixelBufferAttributes" executed="True" result="Success" success="True" time="0.002" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="QueuePlayerTest" executed="True" result="Success" success="True" time="0.003" asserts="0">
            <results>
              <test-case name="NullAllowedTest" executed="True" result="Success" success="True" time="0.003" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SpeechSynthesisVoiceTest" executed="True" result="Success" success="True" time="3.083" asserts="40">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Static" executed="True" result="Success" success="True" time="3.081" asserts="39" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UtilitiesTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="AspectRatio" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VideoCompositionInstructionTest" executed="True" result="Success" success="True" time="0.001" asserts="8">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Seven" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="IdentifierManagerTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="SharedManager" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioBalanceFadeTest" executed="True" result="Success" success="True" time="0.002" asserts="1">
            <results>
              <test-case name="GetBalanceFade" executed="True" result="Success" success="True" time="0.002" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioChannelLayoutTest" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="FromAudioChannelBitmap" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromAudioChannelLayoutTag" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetChannelMap" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetMatrixMixMap" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetNumberOfChannels" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetTagForChannelLayout" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetTagsForNumberOfChannels" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Validate" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioFileGlobalInfoTest" executed="True" result="Success" success="True" time="0.008" asserts="0">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.008" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioFileStreamTest" executed="True" result="Success" success="True" time="0.004" asserts="42">
            <results>
              <test-case name="CafNoData" executed="True" result="Success" success="True" time="0.004" asserts="12" />
              <test-case name="FourCC" executed="True" result="Success" success="True" time="0" asserts="18" />
              <test-case name="UndocumentedFourCC" executed="True" result="Success" success="True" time="0" asserts="12" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioFileTest" executed="True" result="Success" success="True" time="0.003" asserts="1">
            <results>
              <test-case name="ReadTest" executed="True" result="Success" success="True" time="0.003" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioFormatAvailabilityTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="GetDecoders" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetEncoders" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioFormatTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="GetFirstPlayableFormat" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioQueueTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="ChannelAssignments" executed="True" result="Success" success="True" time="0.038" asserts="1" />
              <test-case name="InvalidAudioBasicDescription" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="ProcessingTap" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="Fails on some machines with undefined error code 5" />
                </properties>
                <reason>
                  <message><![CDATA[Fails on some machines with undefined error code 5]]></message>
                </reason>
              </test-case>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioStreamBasicDescriptionTest" executed="True" result="Success" success="True" time="0.001" asserts="7">
            <results>
              <test-case name="CreateLinearPCM" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="GetFormatInfo" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="VBR" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FourCCTests" executed="True" result="Success" success="True" time="0.001" asserts="16">
            <results>
              <test-case name="AudioFilePropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="AudioFileStreamPropertyTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="AudioFormatTypeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="AudioQueuePropertyTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AudioQueueTimePitchAlgorithmtest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="MusicSequenceFileTypeIDTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="MusicSequenceTypeTest" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MusicSequenceTest" executed="True" result="Success" success="True" time="0.006" asserts="7">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.005" asserts="4" />
              <test-case name="SMPTEResolution" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SoundBankTest" executed="True" result="Success" success="True" time="0.013" asserts="16">
            <results>
              <test-case name="GetInstrumentInfo" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="GetInstrumentInfo_DLS_SimOnly" executed="True" result="Success" success="True" time="0.011" asserts="11" />
              <test-case name="GetName" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetName_DLS_SimOnly" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SystemSoundTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="DisposeTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="FromFile" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[PlaySystemSound doesn't work in the simulator]]></message>
                </reason>
              </test-case>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TestCallbackPlayAlert" executed="True" result="Success" success="True" time="0.315" asserts="1" />
              <test-case name="TestCallbackPlaySystem" executed="True" result="Success" success="True" time="0.315" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AUAudioUnitFactoryTest" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="CreateAudioUnit" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AUGraphTest" executed="True" result="Success" success="True" time="0.011" asserts="26">
            <results>
              <test-case name="BasicOperations" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="Connections" executed="True" result="Success" success="True" time="0.007" asserts="5" />
              <test-case name="CreateTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="GetNativeTest" executed="True" result="Success" success="True" time="0.002" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioUnitTest" executed="True" result="Success" success="True" time="0.002" asserts="1">
            <results>
              <test-case name="DisposeMethodTest" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="GetElementCount" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ExtAudioFileTest" executed="True" result="Success" success="True" time="0.002" asserts="6">
            <results>
              <test-case name="ClientDataFormat" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="OpenCFUrlTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OpenNSUrlTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="WrapAudioFileID" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BGTaskSchedulerTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="SubmitTaskRequestTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CategoryTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="Instance" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NavigationControllerOverride" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test is disabled on TVOS.]]></message>
                </reason>
              </test-case>
              <test-case name="Static" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKDiscoverUserInfosOperationTest" executed="True" result="Success" success="True" time="0.004" asserts="1">
            <results>
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0.004" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKFetchNotificationChangesOperationTest" executed="True" result="Success" success="True" time="0.002" asserts="5">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestNotificationChangedSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKFetchRecordChangesOperationTest" executed="True" result="Success" success="True" time="0.003" asserts="3">
            <results>
              <test-case name="TestAllChangesReported" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestRecordChangedSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestRecordDeletedSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKFetchRecordZonesOperationTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKFetchRecordsOperationTest" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="PerRecordCompletionSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="PerRecordProgressSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKFetchSubscriptionsOperationTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKMarkNotificationsReadOperationTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKModifyBadgeOperationTest" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKModifyRecordZonesOperationTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKModifyRecordsOperationTest" executed="True" result="Success" success="True" time="0.003" asserts="11">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="PerRecordCompletionSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="PerRecordProgressSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKModifySubscriptionsOperationTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKQueryOperationTest" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="TestCompletedSetter" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="TestRecordFetchedSetter" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CKUserIdentityLookupInfoTest" executed="True" result="Success" success="True" time="0.002" asserts="9">
            <results>
              <test-case name="TestFromEmail" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestFromPhoneNumber" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestFromRecordID" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestGetLookupInfosWithEmails" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestGetLookupInfosWithPhoneNumbers" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestGetLookupInfosWithRecordIds" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DeflateStreamTest" executed="True" result="Success" success="True" time="0.033" asserts="34">
            <results>
              <test-case name="Bug19313" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="CheckClosedFlush" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="CheckClosedRead" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-suite type="ParameterizedMethod" name="CheckCompressDecompress" executed="True" result="Success" success="True" time="0.018" asserts="8">
                <results>
                  <test-case name="CheckCompressDecompress(LZ4)" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                  <test-case name="CheckCompressDecompress(Lzfse)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="CheckCompressDecompress(Lzma)" executed="True" result="Success" success="True" time="0.014" asserts="2" />
                  <test-case name="CheckCompressDecompress(Zlib)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-case name="CheckCompressingRead" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CheckDecompress" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="CheckGetCanReadProp" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="CheckGetCanSeekProp" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="CheckGetCanWriteProp" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="CheckGetLengthProp" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CheckGetPositionProp" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CheckNullRead" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CheckRangeRead" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CheckSeek" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CheckSetLength" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CheckSetLengthProp" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Constructor_InvalidCompressionMode" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Constructor_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="DisposeTest" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-suite type="ParameterizedMethod" name="JunkAtTheEnd" executed="True" result="Success" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="JunkAtTheEnd(LZ4)" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="JunkAtTheEnd(Lzfse)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="JunkAtTheEnd(Lzma)" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="JunkAtTheEnd(Zlib)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ThoroughCompressionStreamTest" executed="True" result="Success" success="True" time="0.008" asserts="8">
            <results>
              <test-suite type="ParameterizedMethod" name="TestDecodeRealFile" executed="True" result="Success" success="True" time="0.008" asserts="8">
                <results>
                  <test-case name="TestDecodeRealFile(LZ4,&quot;compressed_lz4&quot;)" executed="True" result="Success" success="True" time="0.004" asserts="2" />
                  <test-case name="TestDecodeRealFile(Lzfse,&quot;compressed_lze&quot;)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="TestDecodeRealFile(Lzma,&quot;compressed_lzma&quot;)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="TestDecodeRealFile(Zlib,&quot;compressed_zip&quot;)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ConfigTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Existence" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CATextLayerTests" executed="True" result="Success" success="True" time="0.003" asserts="8">
            <results>
              <test-case name="CATextLayerAlignmentModeTest" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="CATextLayerTruncationModeTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EmitterBehaviorTest" executed="False" result="Ignored">
            <properties>
              <property name="_SKIPREASON" value="CAEmitterBehavior is now being rejected by Apple" />
            </properties>
            <reason>
              <message><![CDATA[CAEmitterBehavior is now being rejected by Apple]]></message>
            </reason>
            <results>
              <test-case name="AllBehaviorTypes" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CAEmitterBehavior is now being rejected by Apple]]></message>
                </reason>
              </test-case>
              <test-case name="ColorOverDistance" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CAEmitterBehavior is now being rejected by Apple]]></message>
                </reason>
              </test-case>
              <test-case name="ValueOverDistance" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CAEmitterBehavior is now being rejected by Apple]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EmitterCellTest" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="XEmitterCellTest" executed="True" result="Success" success="True" time="0.002" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LayerTest" executed="True" result="Success" success="True" time="0.201" asserts="20">
            <results>
              <test-case name="AddAnimation" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CAActionTest" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="ConvertPoint" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="ConvertRect" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="ConvertTime" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Mask" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TestBug26532" executed="True" result="Success" success="True" time="0.073" asserts="1" />
              <test-case name="TestCALayerDelegateDispose" executed="True" result="Success" success="True" time="0.124" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ShapeLayerTest" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="NullableProperties" executed="True" result="Success" success="True" time="0.002" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TransactionTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="AnimationTimingFunction_Null" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CompletionBlock_Null" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CBCentralManagerTest" executed="True" result="Success" success="True" time="0.005" asserts="1">
            <results>
              <test-case name="Constructors" executed="True" result="Success" success="True" time="0.003" asserts="1">
                <properties>
                  <property name="Timeout" value="5000" />
                </properties>
              </test-case>
              <test-case name="ScanForPeripherals" executed="True" result="Inconclusive" success="False" time="0.002" asserts="0">
                <properties>
                  <property name="Timeout" value="5000" />
                </properties>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CBPeerTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results>
              <test-case name="Constructor" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ErrorTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="AttErrorDomain" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ErrorDomain" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PeripheralScanningOptionsTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="AllowDuplicatesKey_False" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="AllowDuplicatesKey_True" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UuidTest" executed="True" result="Success" success="True" time="0.005" asserts="39">
            <results>
              <test-case name="Equality_FullRandomEquals" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Equality_FullRandomNotEqual" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Equality_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equality_PartialEquals" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Equality_PartialEqualsFull" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Equality_PartialsOfDifferentSizeNotEqual" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Roundtrip_128bits" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="Roundtrip_16bits" executed="True" result="Success" success="True" time="0" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AttributeDescription" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="DefaultValue" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetSetRenamingIdentifier" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="WeakFramework" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ExpressionDescriptionTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="GetSetExpression" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="GetSetResultType" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="WeakFramework" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FetchRequestExpressionTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="GetContext" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetIsCountOnly" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetRequest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="WeakFramework" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FetchRequestTest" executed="True" result="Success" success="True" time="0.003" asserts="21">
            <results>
              <test-case name="CtorString" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="DefaultValues" executed="True" result="Success" success="True" time="0.002" asserts="19" />
              <test-case name="SettersNull" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FetchedResultsControllerTest" executed="True" result="Success" success="True" time="0.012" asserts="4">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="PerformFetch_Minimal" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="Sections" executed="True" result="Success" success="True" time="0.009" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ManagedObjectContextTest" executed="True" result="Success" success="True" time="0.004" asserts="26">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.003" asserts="13" />
              <test-case name="Main" executed="True" result="Success" success="True" time="0" asserts="13" />
              <test-case name="PerformAndWait_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Perform_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="UndoManager_Null" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ManagedObjectModelTest" executed="True" result="Success" success="True" time="0.001" asserts="7">
            <results>
              <test-case name="IsConfiguration_Null" executed="True" result="Success" success="True" time="0.001" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSQueryGenerationTokenTest" executed="True" result="Success" success="True" time="0.002" asserts="0">
            <results>
              <test-case name="EncodeWithCoderTest" executed="True" result="Success" success="True" time="0.002" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PropertyDescriptionTest" executed="True" result="Success" success="True" time="0.001" asserts="9">
            <results>
              <test-case name="GetSetName" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetSetOpcional" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetSetRenamingIdentifier" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetSetTransient" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="WeakFramework" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BundleTest" executed="True" result="Success" success="True" time="0.188" asserts="990">
            <results>
              <test-case name="TestArchitectures" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-suite type="ParameterizedMethod" name="TestAuxiliaryExecutableUrlNull" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestAuxiliaryExecutableUrlNull(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestAuxiliaryExecutableUrlNull(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-case name="TestBuiltInPlugInsUrl" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestDevelopmentRegion" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestExecutableUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestGetAll" executed="True" result="Success" success="True" time="0.105" asserts="326" />
              <test-case name="TestGetAuxiliaryExecutableUrlNull" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestGetBundleId" executed="True" result="Success" success="True" time="0.071" asserts="647" />
              <test-case name="TestGetBundleIdMissing" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-suite type="ParameterizedMethod" name="TestGetBundleIdNull" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestGetBundleIdNull(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestGetBundleIdNull(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-case name="TestGetInfoDictionaryNull" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TestGetLocalizationsForPreferencesNullLocalArray" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TestGetLocalizationsForPreferencesNullPrefArray" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TestGetMain" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestLocalizations" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestLocalizationsNull" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-suite type="ParameterizedMethod" name="TestLocalizedStringNullKey" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestLocalizedStringNullKey(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestLocalizedStringNullKey(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestLocalizedStringNullTable" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestLocalizedStringNullTable(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestLocalizedStringNullTable(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-case name="TestPreferredLocalizations" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TestPreferredLocalizationsNull" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TestPrivateFrameworksUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-suite type="ParameterizedMethod" name="TestResourceUrlLocalNameNullLocale" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlLocalNameNullLocale(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlLocalNameNullLocale(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestResourceUrlLocalNameNullName" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlLocalNameNullName(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlLocalNameNullName(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestResourceUrlLocalNameNullType" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlLocalNameNullType(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlLocalNameNullType(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestResourceUrlNullName" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlNullName(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlNullName(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestResourceUrlNullType" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlNullType(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlNullType(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestResourceUrlsLocalNameNullLocale" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlsLocalNameNullLocale(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlsLocalNameNullLocale(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestResourceUrlsLocalNameNullType" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlsLocalNameNullType(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlsLocalNameNullType(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestResourceUrlsNullType" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestResourceUrlsNullType(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestResourceUrlsNullType(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-case name="TestResourcesDirectoryUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestSharedFrameworksUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestSharedSupportUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestStaticResourceUrlNull" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-suite type="ParameterizedMethod" name="TestStaticResourceUrlNullName" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestStaticResourceUrlNullName(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestStaticResourceUrlNullName(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestStaticResourceUrlNullType" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestStaticResourceUrlNullType(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestStaticResourceUrlNullType(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-case name="TestStaticResourceUrlsNullType" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-suite type="ParameterizedMethod" name="TestStaticResourceUrlsNullType" executed="True" result="Success" success="True" time="0" asserts="0">
                <results>
                  <test-case name="TestStaticResourceUrlsNullType(&quot;&quot;)" executed="True" result="Success" success="True" time="0" asserts="0" />
                  <test-case name="TestStaticResourceUrlsNullType(null)" executed="True" result="Success" success="True" time="0" asserts="0" />
                </results>
              </test-suite>
              <test-case name="TestSupportFilesDirectoryUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CFNotificationCenterTest" executed="True" result="Success" success="True" time="0.004" asserts="21">
            <results>
              <test-case name="TestNullNameAndObserver" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="TestObservers" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="TestObservers2" executed="True" result="Success" success="True" time="0.001" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CFPropertyListTests" executed="True" result="Success" success="True" time="0.007" asserts="59">
            <results>
              <test-case name="AsData" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="Constructors" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="CreateFromData" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="DeepCopy" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="IsValid" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Value" executed="True" result="Success" success="True" time="0.003" asserts="33" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CFUrlTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="FromFile_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="FromUrlString_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="RetainCountFromFile" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="RetainCountFromUrl" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ToString_" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DispatchBlockTest" executed="True" result="Success" success="True" time="0.434" asserts="57">
            <results>
              <test-case name="Cancellation" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="Constructors" executed="True" result="Success" success="True" time="0.003" asserts="18" />
              <test-case name="Create" executed="True" result="Success" success="True" time="0.002" asserts="20" />
              <test-case name="ExplicitActionConversionInvoke" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Invoke" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="NotifyAction" executed="True" result="Success" success="True" time="0.11" asserts="3" />
              <test-case name="NotifyDispatchBlock" executed="True" result="Success" success="True" time="0.11" asserts="3" />
              <test-case name="Wait_DispatchTime" executed="True" result="Success" success="True" time="0.103" asserts="3" />
              <test-case name="Wait_TimeSpan" executed="True" result="Success" success="True" time="0.103" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DispatchGroupTest" executed="True" result="Success" success="True" time="0.223" asserts="5">
            <results>
              <test-case name="EnterLeaveTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NotifyWithAction" executed="True" result="Success" success="True" time="0.111" asserts="1" />
              <test-case name="NotifyWithDispatchBlock" executed="True" result="Success" success="True" time="0.109" asserts="1" />
              <test-case name="WaitTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DispatchQueueTests" executed="True" result="Success" success="True" time="0.223" asserts="17">
            <results>
              <test-case name="CtorWithAttributes" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="DispatchAsync" executed="True" result="Success" success="True" time="0.11" asserts="2" />
              <test-case name="DispatchBarrierAsync" executed="True" result="Success" success="True" time="0.11" asserts="2" />
              <test-case name="DispatchBarrierSync" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="DispatchSync" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="MainQueue" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Specific" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DispatchTests" executed="True" result="Success" success="True" time="3.012" asserts="42">
            <results>
              <test-case name="Current" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Default" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="EverAfter" executed="True" result="Success" success="True" time="0.503" asserts="6" />
              <test-case name="EverAfterQualityOfService" executed="True" result="Success" success="True" time="0.501" asserts="6" />
              <test-case name="GetGlobalQueue_Priority" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="GetGlobalQueue_QualityOfService" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Main" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="MainQueueDispatch" executed="True" result="Success" success="True" time="0.503" asserts="6" />
              <test-case name="MainQueueDispatchQualityOfService" executed="True" result="Success" success="True" time="0.502" asserts="6" />
              <test-case name="NeverTooLate" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="SetTargetQueue" executed="True" result="Success" success="True" time="1.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MutableString" executed="True" result="Success" success="True" time="0.014" asserts="40">
            <results>
              <test-case name="AppendString" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="AppendString_RtL" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="AppendString_Unicode" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateCFString1" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="CreateCFString2" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="CreateString0" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CreateString1" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateString2" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TransformICU" executed="True" result="Success" success="True" time="0.008" asserts="4" />
              <test-case name="TransformNoRangeEnum" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="TransformNull" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="TransformRangeEnum" executed="True" result="Success" success="True" time="0" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NetworkTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="NotificationCenterTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="Static" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ProxyTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="Fields" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestPACParsingAsync" executed="True" result="Success" success="True" time="0.111" asserts="5" />
              <test-case name="TestPACParsingAsyncNoProxy" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CI bots might have proxies setup and will mean that the test will fail when trying to assert they are empty.]]></message>
                </reason>
              </test-case>
              <test-case name="TestPACParsingScript" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="TestPACParsingScriptError" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TestPACParsingScriptNoProxy" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="TestPACParsingUrl" executed="True" result="Success" success="True" time="0.029" asserts="3" />
              <test-case name="TestPACParsingUrlAsync" executed="True" result="Success" success="True" time="0.109" asserts="5" />
              <test-case name="TestPACParsingUrlAsyncNoProxy" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CI bots might have proxies setup and will mean that the test will fail when trying to assert they are empty.]]></message>
                </reason>
              </test-case>
              <test-case name="TestPacParsingUrlNoProxy" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StringTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="Null" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ToString_" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AffineTransformTest" executed="True" result="Success" success="True" time="0.011" asserts="139">
            <results>
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Invert" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="IsIdentity" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="MakeIdentity" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="MakeRotation" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="MakeScale" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="MakeTranslation" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Multiply" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="NSValueRoundtrip" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Rotate" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Scale" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="StaticMultiply" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="StaticRotate" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="StaticScale" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="StaticTranslate" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="TransformPoint" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TransformRect" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Translate" executed="True" result="Success" success="True" time="0.001" asserts="18" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BitmapContextTest" executed="True" result="Success" success="True" time="0.005" asserts="21">
            <results>
              <test-case name="Ctor_CGBitmapFlags" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Ctor_CGColorSpace_Null" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Ctor_CGImageAlphaInfo" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="ToImage" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CGImageTest" executed="True" result="Success" success="True" time="0.004" asserts="2">
            <results>
              <test-case name="FromPNG" executed="True" result="Success" success="True" time="0.004" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ColorConversionInfoTest" executed="True" result="Success" success="True" time="0.006" asserts="14">
            <results>
              <test-case name="CGColorSpace_CGColorSpace_CGColorConversionOptions" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="CGColorSpace_CGColorSpace_NSDictionary" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateDual" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="CreateMax" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateNone" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="CreateSimple" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateSimple_DeviceColorSpace" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateSimple_GetINativeObject" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateSingle" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateTooMany" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ColorSpaceTest" executed="True" result="Success" success="True" time="0.014" asserts="125">
            <results>
              <test-case name="CalibratedGray" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="CalibratedRGB" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="CreateDeviceCMYK" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="CreateDeviceGray" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="CreateDeviceRGB" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="CreateExtendedSrgb" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="CreateICCProfile" executed="True" result="Success" success="True" time="0.003" asserts="10" />
              <test-case name="CreateIccData" executed="True" result="Success" success="True" time="0.002" asserts="20" />
              <test-case name="CreateIndexed" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="Disposed" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="Indexed_Provider" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Indexed_UIImage" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="IsHdr" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Lab" executed="True" result="Success" success="True" time="0.001" asserts="11" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ColorTest" executed="True" result="Success" success="True" time="0.002" asserts="6">
            <results>
              <test-case name="CreateGenericGrayGamma2_2" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="CreateSrgb" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ContextTest" executed="True" result="Success" success="True" time="0.002" asserts="4">
            <results>
              <test-case name="ResetClip" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="SetLineDash" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DataConsumerTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="Create_Nullable" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DataProviderTest" executed="True" result="Success" success="True" time="0.002" asserts="7">
            <results>
              <test-case name="Create_Nullable" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Create_ReleaseCallback" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="FromPNG" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FontTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="CreateFromProvider" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateWithFontName" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetGlyphWithGlyphName" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Nullable" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FunctionTest" executed="True" result="Success" success="True" time="0.112" asserts="3">
            <results>
              <test-case name="CoreGraphicsStrongDictionary" executed="True" result="Success" success="True" time="0.002" asserts="3" />
              <test-case name="Test" executed="True" result="Success" success="True" time="0.109" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GeometryTest" executed="True" result="Success" success="True" time="0.001" asserts="9">
            <results>
              <test-case name="Infinite" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Null" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Zero" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GradientTest" executed="True" result="Success" success="True" time="0.003" asserts="10">
            <results>
              <test-case name="Colorspace_Null" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Colorspaces" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GradientDrawingOptions" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Nullable" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFArrayTest" executed="True" result="Success" success="True" time="0.002" asserts="17">
            <results>
              <test-case name="InvalidHandle" executed="True" result="Success" success="True" time="0.002" asserts="17" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFContentStreamTest" executed="True" result="Success" success="True" time="0.005" asserts="4">
            <results>
              <test-case name="FromPage" executed="True" result="Success" success="True" time="0.005" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFContextTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="Constructors" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[Crash (at least on simulator) with iOS 11.3 beta 1]]></message>
                </reason>
              </test-case>
              <test-case name="Context_Tag" executed="True" result="Success" success="True" time="0.003" asserts="0" />
              <test-case name="Context_Tag_Strong" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="Context_Url" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Context_Url_Rect" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="Context_Url_Rect_Info" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFDocumentTest" executed="True" result="Success" success="True" time="0.028" asserts="18">
            <results>
              <test-case name="DataProvider" executed="True" result="Success" success="True" time="0.019" asserts="6" />
              <test-case name="FromFile" executed="True" result="Success" success="True" time="0.008" asserts="6" />
              <test-case name="FromUrl" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFInfoTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="ToDictionary" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[Crash (at least on devices) with iOS 11.3 beta 1]]></message>
                </reason>
              </test-case>
              <test-case name="ToDictionaryWithPermissions" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFObjectTest" executed="True" result="Success" success="True" time="0.001" asserts="10">
            <results>
              <test-case name="Zero" executed="True" result="Success" success="True" time="0.001" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFOperatorTableTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PDFScannerTest" executed="True" result="Success" success="True" time="0.002" asserts="5">
            <results>
              <test-case name="Tamarin" executed="True" result="Success" success="True" time="0.002" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PathTest" executed="True" result="Success" success="True" time="0.009" asserts="46">
            <results>
              <test-case name="AddArc" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="AddArcToPoint" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="AddCurveToPoint" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AddEllipseInRect" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AddLineToPoint" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="AddLines" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="AddPath" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="AddQuadCurveToPoint" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="AddRect" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AddRects" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="AddRelativeArc" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Bug40230" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="CopyByDashingPath_18764" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="EllipseFromRect" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IncreaseRetainCountMakeMutable" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="MoveToPoint" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PatternTest" executed="True" result="Success" success="True" time="0.113" asserts="0">
            <results>
              <test-case name="DrawTest" executed="True" result="Success" success="True" time="0.112" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PdfTagTypeTest" executed="True" result="Success" success="True" time="0.002" asserts="49">
            <results>
              <test-case name="EnumExtension" executed="True" result="Success" success="True" time="0.001" asserts="49" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RectTest" executed="True" result="Success" success="True" time="0.001" asserts="22">
            <results>
              <test-case name="Empty" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Infinite" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Inflate" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Null" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CIContextTest" executed="True" result="Success" success="True" time="0.02" asserts="5">
            <results>
              <test-case name="CreateRefCount" executed="True" result="Success" success="True" time="0.017" asserts="3" />
              <test-case name="FromContext_13983" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="Render_Colorspace" executed="True" result="Success" success="True" time="0.002" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CIKernelTests" executed="True" result="Success" success="True" time="0.184" asserts="5">
            <results>
              <test-case name="CIKernel_BasicTest" executed="True" result="Success" success="True" time="0.183" asserts="0" />
              <test-case name="CIKernel_TestFromPrograms" executed="True" result="Success" success="True" time="0.001" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CIVectorTest" executed="True" result="Success" success="True" time="0.003" asserts="18">
            <results>
              <test-case name="CtorFloatArray" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CtorFloatArrayCount" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CtorInts" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="FromValues" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DetectorTest" executed="True" result="Success" success="True" time="0.006" asserts="1">
            <results>
              <test-case name="EmptyOptions" executed="True" result="Success" success="True" time="0.005" asserts="1" />
              <test-case name="NullContext" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FilterTest" executed="True" result="Success" success="True" time="0.025" asserts="26">
            <results>
              <test-case name="CIAttributedTextImageGenerator" executed="True" result="Success" success="True" time="0.011" asserts="2" />
              <test-case name="CIBarcodeDescriptorTest" executed="True" result="Success" success="True" time="0.008" asserts="8" />
              <test-case name="CIVectorArray" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="ColorSpace" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="CustomFilterTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="HighlightShadowAdjust" executed="True" result="Success" success="True" time="0.004" asserts="1" />
              <test-case name="UnsupportedInputImage" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageInitializationOptionsTest" executed="True" result="Success" success="True" time="0.004" asserts="8">
            <results>
              <test-case name="ColorSpace" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="WithMetadataDefaults" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="WithMetadataProperties" executed="True" result="Success" success="True" time="0.003" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageTest" executed="True" result="Success" success="True" time="0.008" asserts="6">
            <results>
              <test-case name="AreaHistogram" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="CIImageColorSpaceTest" executed="True" result="Success" success="True" time="0.004" asserts="2" />
              <test-case name="EmptyImage" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InitializationWithCustomMetadata" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="UIImageInterop" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MLMultiArrayTest" executed="True" result="Success" success="True" time="0.008" asserts="51">
            <results>
              <test-case name="Ctors" executed="True" result="Success" success="True" time="0.004" asserts="15" />
              <test-case name="Indexers" executed="True" result="Success" success="True" time="0.005" asserts="36" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BlockBufferTest" executed="True" result="Success" success="True" time="0.008" asserts="77">
            <results>
              <test-case name="AccessDataBytesTest" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="AppendMemoryBlockTest" executed="True" result="Success" success="True" time="0.002" asserts="13" />
              <test-case name="AppendMemoryBlockWithByteArrayTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="AppendMemoryBlockWithManagedMemory" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CMBlockBufferCustomBlockSource" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CopyDataBytesTest" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="CopyDataBytesUsingManagedArrayTest" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="CreateEmpty" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromMemoryBlockAndContiguousTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="FromMemoryBlockWithByteArrayTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromMemoryBlockWithManagedMemory" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetDataPointerTest" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="ReplaceDataBytesManagedTest" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="ReplaceDataBytesTest" executed="True" result="Success" success="True" time="0" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CMClockOrTimebaseTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="RetainReleaseTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CMClockTest" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="CreateAudioClock" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="HostTimeClock" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CMFormatDescriptionTest" executed="True" result="Success" success="True" time="0.004" asserts="30">
            <results>
              <test-case name="ClosedCaption" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="H264ParameterSetsTest" executed="True" result="Success" success="True" time="0.002" asserts="11" />
              <test-case name="HevcParameterSetsTest" executed="True" result="Success" success="True" time="0.001" asserts="15" />
              <test-case name="VideoFormatDescriptionConstructors" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CMMemoryPoolTest" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="CtorAgeOutPeriod" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CMTimeRangeTests" executed="True" result="Success" success="True" time="0.001" asserts="21">
            <results>
              <test-case name="InvalidMappingFieldTest" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="InvalidRangeFieldTest" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="ZeroFieldTest" executed="True" result="Success" success="True" time="0" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CMTimeTests" executed="True" result="Success" success="True" time="0.007" asserts="56">
            <results>
              <test-case name="CMTimeMappingFactoryMethods" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="CMTimeRangeConstants" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CMTimeStrongDictionary" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MethodsTest" executed="True" result="Success" success="True" time="0.002" asserts="23" />
              <test-case name="MultiplyByRatio" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="PropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="11" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CMTimebaseTest" executed="True" result="Success" success="True" time="0.004" asserts="15">
            <results>
              <test-case name="AddTimer" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CopyMasterTests" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="DefaultValues" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="GetMasterTests" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="SetAnchorTime" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EnumTest" executed="True" result="Success" success="True" time="0.001" asserts="69">
            <results>
              <test-case name="ClosedCaptionFormatType" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="MediaType" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="MetadataFormatType" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="MuxedStreamType" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="PixelFormat" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="SubtitleFormatType" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TimeCodeFormatType" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="VideoCodecType" executed="True" result="Success" success="True" time="0" asserts="28" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SampleBufferTest" executed="True" result="Success" success="True" time="0.005" asserts="26">
            <results>
              <test-case name="CallForEachSample" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="CreateForImageBuffer" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateReady" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateReadyWithImageBuffer" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateReadyWithImageBuffer_ArrayValidations" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateReadyWithPacketDescriptions" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SetInvalidateCallback" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="SetInvalidateCallback_Null" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="SetInvalidateCallback_Replace" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MediaTimingFunctionTest" executed="True" result="Success" success="True" time="0.004" asserts="26">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="EaseIn" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="EaseInEaseOut" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="EaseOut" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="GetControlPoint" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Linear" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="HttpMessageTest" executed="True" result="Success" success="True" time="0.11" asserts="25">
            <results>
              <test-case name="CreateEmptyFalse" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="CreateEmptyTrue" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="CreateRequest10" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="CreateResponseAuth" executed="True" result="Success" success="True" time="0.108" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CTFontCollectionTest" executed="True" result="Success" success="True" time="0.016" asserts="5">
            <results>
              <test-case name="GetMatchingFontDescriptorsCollectionOptionsTest" executed="True" result="Success" success="True" time="0.012" asserts="4" />
              <test-case name="GetMatchingFontDescriptorsTest" executed="True" result="Success" success="True" time="0.005" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CTFrameTests" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="CTTypesetterCreateTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="GetPathTest" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CTLineTests" executed="True" result="Success" success="True" time="0.008" asserts="2">
            <results>
              <test-case name="EnumerateCaretOffsets" executed="True" result="Success" success="True" time="0.008" asserts="1" />
              <test-case name="GetImageBounds" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CTParagraphStyleTests" executed="True" result="Success" success="True" time="0.007" asserts="17">
            <results>
              <test-case name="StylePropertiesTest" executed="True" result="Success" success="True" time="0.006" asserts="17" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FontDescriptorTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="FromAttributes" executed="True" result="Success" success="True" time="0.003" asserts="4" />
              <test-case name="WithFeature" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="No font with ligatures are available on the platform" />
                </properties>
                <reason>
                  <message><![CDATA[No font with ligatures are available on the platform]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FontManagerTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="CreateFontDescriptor" executed="True" result="Success" success="True" time="0.002" asserts="3" />
              <test-case name="CreateFontDescriptors" executed="True" result="Success" success="True" time="0.002" asserts="3" />
              <test-case name="GetFontsMissing" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetFontsNullUrl" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="GetFontsPresent" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="RegisterFontDescriptors_NoCallback" executed="True" result="Success" success="True" time="0.004" asserts="0" />
              <test-case name="RegisterFontDescriptors_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="RegisterFontDescriptors_WithCallback" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="Fails on tvOS with undocumented error code 'The operation couldn’t be completed. (com.apple.CoreText.CTFontManagerErrorDomain error 500.'" />
                </properties>
                <reason>
                  <message><![CDATA[Fails on tvOS with undocumented error code 'The operation couldn’t be completed. (com.apple.CoreText.CTFontManagerErrorDomain error 500.']]></message>
                </reason>
              </test-case>
              <test-case name="RegisterFonts_NoCallback" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="RegisterFonts_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="RegisterFonts_WithCallback" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="RegisterTTF" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="RegisterTTFs" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="UnregisterFontDescriptors_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="UnregisterFonts_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FontTest" executed="True" result="Success" success="True" time="0.014" asserts="12">
            <results>
              <test-case name="CTFontCreateForString" executed="True" result="Success" success="True" time="0.009" asserts="1" />
              <test-case name="CTFontCreateForStringWithLanguage" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CTFontCreateWithFontDescriptorAndOptions" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="CTFontCreateWithNameAndOptions" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetCascadeList" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetGlyphsForCharacters_35048" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="GetLocalizedName" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GlyphInfoTest" executed="True" result="Success" success="True" time="0.006" asserts="2">
            <results>
              <test-case name="GlyphInfo" executed="True" result="Success" success="True" time="0.006" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RunTest" executed="True" result="Success" success="True" time="0.003" asserts="7">
            <results>
              <test-case name="CustomOps" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetBaseAdvancesAndOrigins" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Runs" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StringAttributesTests" executed="True" result="Success" success="True" time="0.008" asserts="6">
            <results>
              <test-case name="BackgroundColor" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="HorizontalInVerticalForms" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SimpleValuesSet" executed="True" result="Success" success="True" time="0.007" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CVImageBufferTests" executed="True" result="Success" success="True" time="0.003" asserts="14">
            <results>
              <test-case name="CVImageBufferColorPrimariesTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="CVImageBufferTransferFunctionTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="CVImageBufferYCbCrMatrixTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CVMetalTextureCacheTests" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="CVMetalTextureCacheCtorTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
              <test-case name="FromDeviceTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CoreVideoEnumTest" executed="True" result="Success" success="True" time="0.001" asserts="43">
            <results>
              <test-case name="PixelFormatType" executed="True" result="Success" success="True" time="0.001" asserts="43" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PixelBufferAttributesTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="MemoryAllocator" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PixelBufferPoolTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="AllocationSettings_Threshold" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PixelBufferTest" executed="True" result="Success" success="True" time="0.014" asserts="23">
            <results>
              <test-case name="CheckInvalidPtr" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateWithBytes" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="CreateWithPlanarBytes" executed="True" result="Success" success="True" time="0.012" asserts="14" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PixelFormatDescriptionTest" executed="True" result="Success" success="True" time="0.002" asserts="7">
            <results>
              <test-case name="AllTypes" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Create" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Register" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AccessoryManagerTest" executed="True" result="Success" success="True" time="0.003" asserts="1">
            <results>
              <test-case name="Shared" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="ShowBluetoothAccessoryPicker" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AA_NSStreamTest" executed="True" result="Success" success="True" time="0.009" asserts="28">
            <results>
              <test-case name="BoundPairTest" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="ConnectToHost" executed="True" result="Success" success="True" time="0.004" asserts="7" />
              <test-case name="ConnectToPeer" executed="True" result="Success" success="True" time="0.003" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AttributedStringTest" executed="True" result="Success" success="True" time="0.008" asserts="24">
            <results>
              <test-case name="Attributes" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="Fields" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="IndirectNullDictionary" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="InitWith" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="MutableCopy" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="NullDictionary" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="UIKitAttachmentConveniences_New" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BlockOperationTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="Add_Null" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="Create_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="ExecutionBlocks" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BundleTest" executed="True" result="Success" success="True" time="0.004" asserts="30">
            <results>
              <test-case name="AppStoreReceiptURL" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetLocalizedString" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Localizations" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="LocalizedString" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="LocalizedString2" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="LocalizedString3" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="LocalizedString4" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="PreferredLocalizations" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CachedUrlResponseTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="ConstructorTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CalendarTest" executed="True" result="Success" success="True" time="0.031" asserts="116">
            <results>
              <test-case name="DateByAddingComponentsTest" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="DateComponentsTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="DateFromComponents" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetAllCalendarIdentifiers" executed="True" result="Success" success="True" time="0.002" asserts="17" />
              <test-case name="TestAddingByComponents" executed="True" result="Success" success="True" time="0.003" asserts="2" />
              <test-case name="TestCalendarComparision" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestCalendarComponents" executed="True" result="Success" success="True" time="0.002" asserts="16" />
              <test-case name="TestCalendarSymbols" executed="True" result="Success" success="True" time="0.005" asserts="20" />
              <test-case name="TestComponentsFromDateToDate" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestComponentsInTimeZone" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestEnumerateDates" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestFindNextDate" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="TestFindNextDateAfterDateMatching" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="TestIsDateMethods" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="TestMatchesComponents" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-suite type="ParameterizedMethod" name="TestMaximumRange" executed="True" result="Success" success="True" time="0.001" asserts="6">
                <results>
                  <test-case name="TestMaximumRange(1,12,Month)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestMaximumRange(1,31,Day)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestMaximumRange(0,24,Hour)" executed="True" result="Success" success="True" time="0" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestMinimumRange" executed="True" result="Success" success="True" time="0" asserts="6">
                <results>
                  <test-case name="TestMinimumRange(1,12,Month)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestMinimumRange(1,28,Day)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestMinimumRange(0,24,Hour)" executed="True" result="Success" success="True" time="0" asserts="2" />
                </results>
              </test-suite>
              <test-case name="TestNSCalendarConstructors" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TestNSDateComponentNewAPIs" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-suite type="ParameterizedMethod" name="TestOrdinality" executed="True" result="Success" success="True" time="0.002" asserts="2">
                <results>
                  <test-case name="TestOrdinality(2010,1,11,Day,Month,11)" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="TestOrdinality(2010,4,15,Day,Month,15)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestRange" executed="True" result="Success" success="True" time="0.001" asserts="8">
                <results>
                  <test-case name="TestRange(2010,1,11,1,31,Day,Month)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                  <test-case name="TestRange(2010,2,11,1,28,Day,Month)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestRange(2010,3,11,1,31,Day,Month)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestRange(1999,1,11,0,24,Hour,Day)" executed="True" result="Success" success="True" time="0" asserts="2" />
                </results>
              </test-suite>
              <test-case name="TestRangeOfWeekendContainingDate" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-suite type="ParameterizedMethod" name="TestRangeOrUnitInterval" executed="True" result="Success" success="True" time="0.001" asserts="3">
                <results>
                  <test-case name="TestRangeOrUnitInterval(2010,1,11,Day,86400.0d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="TestRangeOrUnitInterval(2010,2,11,Hour,3600.0d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="TestRangeOrUnitInterval(2015,2,11,Month,2419200.0d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestRangeOrUnitIntervalNotNull" executed="True" result="Success" success="True" time="0" asserts="3">
                <results>
                  <test-case name="TestRangeOrUnitIntervalNotNull(2010,1,11,Day,86400.0d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="TestRangeOrUnitIntervalNotNull(2010,2,11,Hour,3600.0d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="TestRangeOrUnitIntervalNotNull(2015,2,11,Month,2419200.0d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
              <test-case name="TestSettingHourComponent" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestSignUpForDateNotification" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TestStartOfDay" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CoderTest" executed="True" result="Success" success="True" time="0.004" asserts="18">
            <results>
              <test-case name="EncodeDecodeTest" executed="True" result="Success" success="True" time="0.003" asserts="18" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DateFormatterTest" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="GetDateFormatFromTemplateTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="ToLocalizedStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DateTest" executed="True" result="Success" success="True" time="0.002" asserts="12">
            <results>
              <test-case name="DescriptionWithLocale" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InLimits" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="OutLimits" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="Precision32022" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DecimalNumberTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="One" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DecimalTest" executed="True" result="Success" success="True" time="0.004" asserts="8">
            <results>
              <test-case name="CastDecimal" executed="True" result="Success" success="True" time="0.003" asserts="2" />
              <test-case name="CastDouble" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CastFloat" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CastInt" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DictionaryContainerTest" executed="True" result="Success" success="True" time="0.006" asserts="29">
            <results>
              <test-case name="Empty" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SetArrayValue_INativeObject" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="SetArrayValue_NSNumber" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="SetArrayValue_String" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="SetArrayValue_T_Enum" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="SetBooleanValue" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="SetNumberValue_Int32" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="SetNumberValue_UInt32" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="SetStringValue" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DimensionTest" executed="True" result="Success" success="True" time="0.015" asserts="43">
            <results>
              <test-case name="BaseUnit" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="NSUnitAcceleration_BaseUnit" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="NSUnitAngle_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitArea_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitConcentrationMass_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitDispersion_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitDuration_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitElectricCharge_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitElectricCurrent_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitElectricPotentialDifference_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitElectricResistance_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitEnergy_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitFrequency_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitFuelEfficiency_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitIlluminance_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitLength_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitMass_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitPower_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitPressure_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitSpeed_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitTemperature_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="NSUnitVolume_BaseUnit" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EncodingDetectionOptionsTest" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="SetValueEnumArray" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FileCoordinatorTest" executed="True" result="Success" success="True" time="0.011" asserts="10">
            <results>
              <test-case name="CoordinateBatch_Action" executed="True" result="Success" success="True" time="0.003" asserts="2" />
              <test-case name="CoordinateBatch_Action_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CoordinateRead" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="CoordinateReadWrite" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="CoordinateReadWrite_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CoordinateRead_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CoordinateWrite" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CoordinateWriteWrite" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CoordinateWriteWrite_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="CoordinateWrite_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FileHandleTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Descriptor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="DescriptorClose" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FormatterTests" executed="True" result="Success" success="True" time="0.009" asserts="34">
            <results>
              <test-case name="DateGetObjectValueTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="DateIntervalStringFromDate" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="DateLocalizedStringFromDateComponents" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="DateStringForObjectValue" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="DateStringFromDate" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="DateStringFromDateComponents" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="DateStringFromTimeInterval" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="DateTestProperties" executed="True" result="Success" success="True" time="0.001" asserts="11" />
              <test-case name="EnergyEnergyStringFromJoules" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="EnergyEnergyStringFromValue" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="EnergyGetObjectValue" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="EnergyUnitStringFromJoules" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="EnergyUnitStringFromValue" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="HttpCookieTest" executed="True" result="Success" success="True" time="0.007" asserts="76">
            <results>
              <test-case name="CookieFromProperties" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="DotNetInteropCommon" executed="True" result="Success" success="True" time="0.002" asserts="13" />
              <test-case name="DotNetInteropMax" executed="True" result="Success" success="True" time="0.002" asserts="13" />
              <test-case name="DotNetInteropMin" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="DotNetInterop_NonSession" executed="True" result="Success" success="True" time="0.001" asserts="13" />
              <test-case name="NSDictionaryCtor" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="NiceFourCtor" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="NiceThreeCtor" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="NiceTwoCtor" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="PortList_4990" executed="True" result="Success" success="True" time="0.001" asserts="12" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="IndexPathTest" executed="True" result="Success" success="True" time="0.004" asserts="31">
            <results>
              <test-case name="CompareTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="CreateTest" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="FromIndex" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="IndexAtPositionTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="IndexPathByAddingIndexTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="IndexPathByRemovingLastIndexTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="KeyedUnarchiverTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Exceptions" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LocaleTest" executed="True" result="Success" success="True" time="0.004" asserts="31">
            <results>
              <test-case name="CountryLessLocale" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CurrentLocale" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="DisplayName_En" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="DisplayName_Fr" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="FromLocaleIdentifier" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InitRegionInfo" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="15" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MutableDataTest" executed="True" result="Success" success="True" time="0.002" asserts="5">
            <results>
              <test-case name="Constructor" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="FromCapacity" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromLength" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MutableSAttributedStringTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="IndirectNullDictionary" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InitWith" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="NullDictionary" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MutableStringTest" executed="True" result="Success" success="True" time="0.003" asserts="10">
            <results>
              <test-case name="Delete" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Insert" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Replace" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSArray1Test" executed="True" result="Success" success="True" time="0.005" asserts="120">
            <results>
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromNSObjectsCountTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="FromNSObjectsNullTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="FromNSObjectsTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0.003" asserts="107" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSArrayTest" executed="True" result="Success" success="True" time="0.004" asserts="14">
            <results>
              <test-case name="Filter" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="FromNSObjects" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromStrings_Null" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="INativeObjects" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Sort" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSCharacterSetTest" executed="True" result="Success" success="True" time="0.003" asserts="30">
            <results>
              <test-case name="NSMutableCharacterSet_TestStaticSets" executed="True" result="Success" success="True" time="0.003" asserts="30" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSDataTest" executed="True" result="Success" success="True" time="0.158" asserts="52">
            <results>
              <test-case name="AsStream" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Base64Data" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Base64String" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Base64_Long" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Base64_Short" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="BytesLength" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ConstructorTest" executed="True" result="Success" success="True" time="0.006" asserts="8" />
              <test-case name="FromEmptyArrayTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromFile" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromFile_Options" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromStream" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="FromStream_CanNotRead" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromStream_CanNotSeek" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromStream_Negative" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromStream_NoLength" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromStream_Position" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromString" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Https" executed="True" result="Success" success="True" time="0.146" asserts="2" />
              <test-case name="ToArray" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="ToEmptyArray" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ToString_17693" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSDateComponentsTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="TestUndefinedComponent" executed="True" result="Success" success="True" time="0" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSDictionary2Test" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="ContainsKeyTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Copy" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_Arrays" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Ctor_NSDictionary" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="DictionaryCtorKeyValues" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromObjectsAndKeysGenericTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="ICollection2Test" executed="True" result="Success" success="True" time="0.003" asserts="18" />
              <test-case name="IDictionary2Test" executed="True" result="Success" success="True" time="0.002" asserts="30" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IEnumerable_KVP2Test" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InbalancedCtor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="InvalidType" executed="True" result="Success" success="True" time="0.002" asserts="7" />
              <test-case name="KeyValue_Autorelease" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[RetainCount unusable for testing]]></message>
                </reason>
              </test-case>
              <test-case name="KeysForObjectTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="KeysTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="MutableCopy" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="ObjectForKeyTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ObjectsForKeysTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="TryGetValueTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="ValuesTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="XForY_Autorelease" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[RetainCount unusable for testing]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSDictionaryTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="Copy" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="DictionaryCtorKeyValues" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="DictionaryCtorKeyValuesObjects" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="FromObjectsAndKeysTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="InbalancedCtor" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="InbalancedCtor2" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="KeyValue_Autorelease" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[RetainCount unusable for testing]]></message>
                </reason>
              </test-case>
              <test-case name="MutableCopy" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="XForY_Autorelease" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[RetainCount unusable for testing]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSExpressionTest" executed="True" result="Success" success="True" time="0.015" asserts="161">
            <results>
              <test-case name="AggregatePropertiesTest" executed="True" result="Success" success="True" time="0.005" asserts="14" />
              <test-case name="AnyKeyPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="BlockPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="ConstantPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="EvaluatedObjectPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-suite type="ParameterizedMethod" name="FromConstant" executed="True" result="Success" success="True" time="0" asserts="2">
                <results>
                  <test-case name="FromConstant(&quot;Foo&quot;)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="FromConstant(null)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
              <test-case name="FromFormatConstant" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromFormatWithArgsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromFormatWithNoArgsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromFunctionTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromKeyPath" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FunctionPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="IntersectSetPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="KeyPathPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="MinusSetPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="UnionSetPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="VariablePropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="14" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSFileManagerTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="DefaultManager" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="DocumentDirectory" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="DocumentsDirectory and MyDocuments point to different locations on mac" />
                </properties>
                <reason>
                  <message><![CDATA[DocumentsDirectory and MyDocuments point to different locations on mac]]></message>
                </reason>
              </test-case>
              <test-case name="GetSkipBackupAttribute" executed="True" result="Success" success="True" time="0.004" asserts="6" />
              <test-case name="GetUrlForUbiquityContainer" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="LibraryDirectory" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSInputStreamTest" executed="True" result="Success" success="True" time="0.002" asserts="19">
            <results>
              <test-case name="Data" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Path" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Read" executed="True" result="Success" success="True" time="0.001" asserts="15" />
              <test-case name="SubclassedCtor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Url" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSKeyedUnarchiverTest" executed="True" result="Success" success="True" time="0.002" asserts="10">
            <results>
              <test-case name="DataTransformer_AllowedTopLevelTypes_WrapperTests" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetUnarchivedObject_TypeWrappers" executed="True" result="Success" success="True" time="0.001" asserts="9" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSLayoutConstraintTest" executed="True" result="Success" success="True" time="0.004" asserts="11">
            <results>
              <test-case name="FromVisualFormat" executed="True" result="Success" success="True" time="0.004" asserts="11" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSLocaleTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results>
              <test-case name="GetNSObject_IntPtrZero" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSMutableArray1Test" executed="True" result="Success" success="True" time="0.01" asserts="272">
            <results>
              <test-case name="AddObjectsTest" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="ContainsTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_Capacity" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IEnumerable1Test" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IndexOfTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="InsertObjectsTest" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="InsertTest" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="ReplaceObjectTest" executed="True" result="Success" success="True" time="0.001" asserts="9" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSMutableDictionary2Test" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="AddEntries" executed="True" result="Success" success="True" time="0.001" asserts="11" />
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="ContainsKeyTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Copy" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_NSDictionary" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Ctor_NSMutableDictionary" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromObjectsAndKeysGenericTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="ICollection2Test" executed="True" result="Success" success="True" time="0.003" asserts="28" />
              <test-case name="IDictionary2Test" executed="True" result="Success" success="True" time="0.003" asserts="42" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IEnumerable_KVP2Test" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="InvalidType" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="KeyValue_Autorelease" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[RetainCount unusable for testing]]></message>
                </reason>
              </test-case>
              <test-case name="KeysForObjectTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="KeysTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="MutableCopy" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="ObjectForKeyTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ObjectsForKeysTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="RemoveTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="TryGetValueTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="ValuesTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="XForY_Autorelease" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[RetainCount unusable for testing]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSMutableOrderedSet1Test" executed="True" result="Success" success="True" time="0.014" asserts="293">
            <results>
              <test-case name="AddObjectsTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="AsSetTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_Capacity" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_NSMutableOrderedSet" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_NSOrderedSet" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_NSSet" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_Params" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_Start" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IEnumerable1Test" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="InsertObjectsTest" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="InsertTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorAddTest2" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorAddTest3" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorSubtractTest2" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorSubtractTest3" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="RemoveObjectTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="RemoveObjectsTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="ReplaceObjectsTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="ReplaceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSMutableOrderedSetTest" executed="True" result="Success" success="True" time="0.002" asserts="15">
            <results>
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="OperatorDifferentTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorEqualTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSMutableSet1Test" executed="True" result="Success" success="True" time="0.011" asserts="255">
            <results>
              <test-case name="AddObjectsTest" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="AddTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="AnyObjectTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ContainsTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_OtherMutableSet" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Ctor_OtherSet" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Ctor_Params" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IEnumerable1Test" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="LookupMemberTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="RemoveTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="ToArrayTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSMutableSetTest" executed="True" result="Success" success="True" time="0.001" asserts="11">
            <results>
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSObjectTest" executed="True" result="Success" success="True" time="1.14" asserts="50">
            <results>
              <test-case name="Copy" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="Encode" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equality" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="FromObject_Handle" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="FromObject_INativeObject" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="FromObject_NativeTypes" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="InvokeTest" executed="True" result="Success" success="True" time="1.131" asserts="1">
                <properties>
                  <property name="Timeout" value="5000" />
                </properties>
              </test-case>
              <test-case name="IsDirectBinding" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="ObserverTest" executed="True" result="Success" success="True" time="0.002" asserts="3" />
              <test-case name="SubclassEquality" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="SuperClass" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ValueForInvalidKeyTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSOrderedSet1Test" executed="True" result="Success" success="True" time="0.01" asserts="262">
            <results>
              <test-case name="AsSetTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ContainsTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_NSMutableOrderedSet" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_NSOrderedSet" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_NSSet" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_Params" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_Start" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FirstObjectTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IEnumerable1Test" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IndexOfTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="LastObjectTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorAddTest2" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="OperatorDifferentTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorEqualTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorSubtractTest2" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="ToArrayTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSOrderedSetTest" executed="True" result="Success" success="True" time="0.003" asserts="33">
            <results>
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="OperatorAddTest2" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="OperatorAddTest3" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="OperatorDifferentTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorEqualTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorSubtractTest2" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorSubtractTest3" executed="True" result="Success" success="True" time="0" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSSet1Test" executed="True" result="Success" success="True" time="0.007" asserts="238">
            <results>
              <test-case name="AnyObjectTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ContainsTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_OtherMutableSet" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Ctor_OtherSet" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Ctor_Params" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IEnumerable1Test" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="IEnumerableTest" executed="True" result="Success" success="True" time="0.002" asserts="107" />
              <test-case name="LookupMemberTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ToArrayTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSSetTest" executed="True" result="Success" success="True" time="0.004" asserts="37">
            <results>
              <test-case name="OperatorAddTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="OperatorAddTest2" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="OperatorPlus" executed="True" result="Success" success="True" time="0.001" asserts="13" />
              <test-case name="OperatorPlusReferenceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="OperatorSubtractTest" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="OperatorSubtractTest2" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="SetCtors" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSTimeZoneTest" executed="True" result="Success" success="True" time="0.062" asserts="442">
            <results>
              <test-case name="AbbreviationTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="AbbreviationsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="All_28300" executed="True" result="Success" success="True" time="0.062" asserts="439" />
              <test-case name="KnownTimeZoneNames" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSUbiquitousKeyValueStoreTest" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="Indexer" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NetServiceTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="DefaultCtor" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NotificationCenterTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="Free" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="This test is 'randomly' failing the first time it's executed with debugging disabled (if executed with the rest of the tests) - CWLS show that the TestNotification instance is freed at the end of the test run." />
                </properties>
                <reason>
                  <message><![CDATA[This test is 'randomly' failing the first time it's executed with debugging disabled (if executed with the rest of the tests) - CWLS show that the TestNotification instance is freed at the end of the test run.]]></message>
                </reason>
              </test-case>
              <test-case name="ThreadSafe" executed="True" result="Success" success="True" time="0.103" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NotificationQueueTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="DefaultQueue" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NumberTest" executed="True" result="Success" success="True" time="0.002" asserts="14">
            <results>
              <test-case name="CompareTo" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="CtorNSCoder" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Equals" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Singleton" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="OperationQueueTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="Add_NSAction_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Add_NSOperation_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Add_NSOperations_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="OutputStreamTest" executed="True" result="Success" success="True" time="0.002" asserts="12">
            <results>
              <test-case name="Memory" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Path" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Write" executed="True" result="Success" success="True" time="0.001" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ProtocolAttributeTest" executed="True" result="Success" success="True" time="0.055" asserts="0">
            <results>
              <test-case name="ModelMustBeProtocol" executed="True" result="Success" success="True" time="0.055" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RegularExpressionTest" executed="True" result="Success" success="True" time="0.004" asserts="3">
            <results>
              <test-case name="GetMatches" executed="True" result="Success" success="True" time="0.004" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StringTest" executed="True" result="Success" success="True" time="0.008" asserts="30">
            <results>
              <test-case name="Compare" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Compare_Locale" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Compare_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Compare_Options" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Compare_Range" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="DrawingExtensions" executed="True" result="Success" success="True" time="0.003" asserts="6" />
              <test-case name="Equality" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="FromData" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="PathExtensions" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="ReleaseEmptyString" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Replace_Range" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ThreadTest" executed="True" result="Success" success="True" time="0.013" asserts="6">
            <results>
              <test-case name="GetEntryAssemblyReturnsOk" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="InitWithDataTest" executed="True" result="Success" success="True" time="0.012" asserts="1" />
              <test-case name="MainThread" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TimerTest" executed="True" result="Success" success="True" time="0.306" asserts="3">
            <results>
              <test-case name="Bug17793" executed="True" result="Success" success="True" time="0.203" asserts="1" />
              <test-case name="CreateTimer_NewSignature" executed="True" result="Success" success="True" time="0.103" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlConnectionTest" executed="True" result="Success" success="True" time="0.002" asserts="0">
            <results>
              <test-case name="StartCancel" executed="True" result="Success" success="True" time="0.002" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlCredentialTest" executed="True" result="Success" success="True" time="0.004" asserts="12">
            <results>
              <test-case name="Ctor_Trust" executed="True" result="Success" success="True" time="0.003" asserts="6" />
              <test-case name="FromTrust" executed="True" result="Success" success="True" time="0" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlProtectionSpaceTest" executed="True" result="Success" success="True" time="0.002" asserts="40">
            <results>
              <test-case name="Http" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="HttpProxy" executed="True" result="Success" success="True" time="0" asserts="10" />
              <test-case name="HttpProxy_Proxy" executed="True" result="Success" success="True" time="0" asserts="10" />
              <test-case name="Https" executed="True" result="Success" success="True" time="0" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlProtocolTest" executed="True" result="Success" success="True" time="0.111" asserts="12">
            <results>
              <test-case name="RegistrarTest" executed="True" result="Success" success="True" time="0.11" asserts="11" />
              <test-case name="Registration" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlRequestTest" executed="True" result="Success" success="True" time="0.001" asserts="10">
            <results>
              <test-case name="Mutability_30744" executed="True" result="Success" success="True" time="0.001" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlSessionConfigurationTest" executed="True" result="Success" success="True" time="0.003" asserts="22">
            <results>
              <test-case name="BackgroundSessionConfiguration" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Default_Properties" executed="True" result="Success" success="True" time="0.003" asserts="21" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlSessionTaskMetricsTest" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlSessionTaskTest" executed="True" result="Success" success="True" time="0.007" asserts="55">
            <results>
              <test-case name="NSUrlSessionDataTaskTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="NSUrlSessionDownloadTaskTest" executed="True" result="Success" success="True" time="0.002" asserts="12" />
              <test-case name="NSUrlSessionUploadTaskTest" executed="True" result="Success" success="True" time="0.002" asserts="15" />
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.002" asserts="16" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlSessionTaskTransactionMetricsTest" executed="True" result="Success" success="True" time="0.002" asserts="17">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="17" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlSessionTest" executed="True" result="Success" success="True" time="1.374" asserts="12">
            <results>
              <test-case name="CreateDataTaskAsync" executed="True" result="Success" success="True" time="0.757" asserts="6" />
              <test-case name="DownloadDataAsync" executed="True" result="Success" success="True" time="0.616" asserts="2" />
              <test-case name="SharedSession" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UrlTest" executed="True" result="Success" success="True" time="0.006" asserts="57">
            <results>
              <test-case name="Bug13069" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Copy" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_string" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equals" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="Fields" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromString" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="InitWithSpaces" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Invalid_29510" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IsExcludedFromBackupKey" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="MutableCopy" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SubclassEquality" executed="True" result="Success" success="True" time="0.001" asserts="11" />
              <test-case name="TestEqualOperator" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestEqualOperatorNull" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestEqualOperatorSameInstace" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestNotEqualOperator" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestNotEqualOperatorNull" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Unicode_6597" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UserDefaultsTest" executed="True" result="Success" success="True" time="0.002" asserts="7">
            <results>
              <test-case name="Ctor_SuiteName" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctor_UserName" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="SetString" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UuidTest" executed="True" result="Success" success="True" time="0.001" asserts="18">
            <results>
              <test-case name="ConstructorFailures" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Constructors" executed="True" result="Success" success="True" time="0" asserts="18" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ZoneTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BaseEffectTest" executed="True" result="Success" success="True" time="0.004" asserts="3">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.003" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EffectPropertyFogTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EffectPropertyLightTest" executed="True" result="Success" success="True" time="0.001" asserts="8">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EffectPropertytMaterialTest" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.002" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EffectPropertytTransformTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="KViewTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ExtendedGamepadSnapshotTest" executed="True" result="Success" success="True" time="0.001" asserts="8">
            <results>
              <test-case name="Nullability" executed="True" result="Success" success="True" time="0.001" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GamepadSnapshotTest" executed="True" result="Success" success="True" time="0.001" asserts="8">
            <results>
              <test-case name="Nullability" executed="True" result="Success" success="True" time="0" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LeaderboardTest" executed="True" result="Success" success="True" time="0.002" asserts="20">
            <results>
              <test-case name="DefaultCtor" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="PlayersCtor" executed="True" result="Success" success="True" time="0" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NotificationBannerTest" executed="True" result="Success" success="True" time="0.006" asserts="0">
            <results>
              <test-case name="Show_NSAction_Null" executed="True" result="Success" success="True" time="0.006" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ScoreTest" executed="True" result="Success" success="True" time="0.004" asserts="6">
            <results>
              <test-case name="Ctor_String" executed="True" result="Success" success="True" time="0.003" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKAgent3DTest" executed="True" result="Success" success="True" time="0.003" asserts="63">
            <results>
              <test-case name="RotationTest" executed="True" result="Success" success="True" time="0.003" asserts="63" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKComponentSystemTests" executed="True" result="Success" success="True" time="0.002" asserts="7">
            <results>
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="InitWithComponentClassType" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKEntityTests" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="BadGetComponent" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="BadRemoval" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="GetAndRemoveTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKGridGraphTests" executed="True" result="Success" success="True" time="0.007" asserts="10">
            <results>
              <test-case name="FromGridStartingAtTest" executed="True" result="Success" success="True" time="0.004" asserts="5" />
              <test-case name="InitFromGridStartingAtTest" executed="True" result="Success" success="True" time="0.003" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKMeshGraphTests" executed="True" result="Success" success="True" time="0.003" asserts="3">
            <results>
              <test-case name="GKTriangleTest" executed="True" result="Success" success="True" time="0.003" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKNoiseMapTests" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="Vector2dTest" executed="True" result="Success" success="True" time="0.002" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKNoiseTests" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="Vector3dTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKOctreeTests" executed="True" result="Success" success="True" time="0.002" asserts="4">
            <results>
              <test-case name="GKBoxTest" executed="True" result="Success" success="True" time="0.002" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKPathTests" executed="True" result="Success" success="True" time="0.002" asserts="64">
            <results>
              <test-case name="FromPointsTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="FromPointsVector3Test" executed="True" result="Success" success="True" time="0.001" asserts="31" />
              <test-case name="InitWithPointsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InitWithPointsVector3Test" executed="True" result="Success" success="True" time="0" asserts="31" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKPolygonObstacleTests" executed="True" result="Success" success="True" time="0.001" asserts="20">
            <results>
              <test-case name="FromPointsTest" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="InitWithPointsTest" executed="True" result="Success" success="True" time="0" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKQuadTreeTests" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="GKQuadTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKStateMachineTests" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="StateMachineTests" executed="True" result="Success" success="True" time="0.001" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GKStateTests" executed="True" result="Success" success="True" time="0.001" asserts="8">
            <results>
              <test-case name="Concrete" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IsValidNextState" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="NullIsValidNextState" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="HMMutableSignificantTimeEventTest" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="SignificantEventPropertyTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="HMSignificantTimeEventTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="SignificantEventPropertyTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="HttpClientTest" executed="True" result="Success" success="True" time="0.005" asserts="3">
            <results>
              <test-suite type="ParameterizedMethod" name="EnsureModifiabilityPostSend" executed="True" result="Success" success="True" time="0.005" asserts="3">
                <results>
                  <test-case name="EnsureModifiabilityPostSend(System.Net.Http.HttpClientHandler,8)" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                  <test-case name="EnsureModifiabilityPostSend(System.Net.Http.CFNetworkHandler,8)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="EnsureModifiabilityPostSend(System.Net.Http.NSUrlSessionHandler,9)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CGImageSourceTest" executed="True" result="Success" success="True" time="0.012" asserts="25">
            <results>
              <test-case name="CopyMetadata" executed="True" result="Success" success="True" time="0.002" asserts="0" />
              <test-case name="CopyProperties" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="CreateImageTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CreateIncrementalTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateThumbnailTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="FromDataProviderTest" executed="True" result="Success" success="True" time="0.002" asserts="3" />
              <test-case name="FromDataTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="FromUrlTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="GetProperties" executed="True" result="Success" success="True" time="0.003" asserts="7" />
              <test-case name="RemoveCache" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageDestinationTest" executed="True" result="Success" success="True" time="0.006" asserts="12">
            <results>
              <test-case name="AddImage" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="AddImageAndMetadata" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="CopyImageSource" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Create_DataConsumer_BadUTI" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Create_DataConsumer_GoodUTI" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromData_BadITU" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromData_GoodITU" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FromUrl_BadITU" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TypeIdentifiers" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageMetadataTagTest" executed="True" result="Success" success="True" time="0.004" asserts="41">
            <results>
              <test-case name="Ctor_Bool_False" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="Ctor_Bool_True" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Ctor_NSArray" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Ctor_NSDictionary" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Ctor_NSNumber" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Ctor_NSString" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Ctor_Null" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageMetadataTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MutableImageMetadataTest" executed="True" result="Success" success="True" time="0.001" asserts="7">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.001" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ContextTest" executed="True" result="Success" success="True" time="0.006" asserts="3">
            <results>
              <test-case name="EvaluateScript" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="EvaluateScript_Context" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="EvaluateScript_Param" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="JSExportTest" executed="True" result="Success" success="True" time="0.005" asserts="6">
            <results>
              <test-case name="ExportTest" executed="True" result="Success" success="True" time="0.005" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ValueTest" executed="True" result="Success" success="True" time="0.005" asserts="17">
            <results>
              <test-case name="CreatePromise" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="From" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Invoke" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="IsEqual" executed="True" result="Success" success="True" time="0.001" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LocalSearchRequestTest" executed="True" result="Success" success="True" time="0.002" asserts="5">
            <results>
              <test-case name="Default" executed="True" result="Success" success="True" time="0.002" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LocalSearchTest" executed="True" result="Success" success="True" time="2.008" asserts="1">
            <results>
              <test-case name="EmptyRequest" executed="True" result="Success" success="True" time="2.008" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudibleMediaTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="PreferredCharacteristics" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CaptionAppearanceTest" executed="True" result="Success" success="True" time="0.003" asserts="1">
            <results>
              <test-case name="DidDisplayCaptions" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="GetDisplayType" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageCaptioningTest" executed="True" result="Success" success="True" time="0.04" asserts="23">
            <results>
              <test-case name="GetCaption" executed="True" result="Success" success="True" time="0.033" asserts="7" />
              <test-case name="GetMetadataTagPath" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SetCaption" executed="True" result="Success" success="True" time="0.007" asserts="15" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RemoteCommandCenterTest" executed="True" result="Success" success="True" time="0.003" asserts="17">
            <results>
              <test-case name="Shared" executed="True" result="Success" success="True" time="0.003" asserts="14" />
              <test-case name="Shared_8" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Shared_9" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SkipIntervalCommandTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="ManualBinding" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AudioProcessingTapTest" executed="True" result="Success" success="True" time="0.003" asserts="2">
            <results>
              <test-case name="Initialization" executed="True" result="Success" success="True" time="0.003" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FormatNamesTest" executed="True" result="Success" success="True" time="0.001" asserts="13">
            <results>
              <test-case name="LocalizedNameForMediaSubType" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="LocalizedNameForMediaType" executed="True" result="Success" success="True" time="0" asserts="9" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ClearValueTest" executed="True" result="Success" success="True" time="0.001" asserts="13">
            <results>
              <test-case name="Constructor" executed="True" result="Success" success="True" time="0" asserts="13" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DeviceTest" executed="True" result="Success" success="True" time="0.003" asserts="0">
            <results>
              <test-case name="System" executed="True" result="Inconclusive" success="False" time="0.003" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="HeapDescriptorTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="GetSetCpuCacheModeTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[Type is missing on the simulator]]></message>
                </reason>
              </test-case>
              <test-case name="GetSetSizeTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[Type is missing on the simulator]]></message>
                </reason>
              </test-case>
              <test-case name="GetSetStorageModeTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[Type is missing on the simulator]]></message>
                </reason>
              </test-case>
              <test-case name="Properties" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[Type is missing on the simulator]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLArgumentDescriptorTest" executed="True" result="Success" success="True" time="0.003" asserts="6">
            <results>
              <test-case name="GetSetAccessTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetSetArrayLengthTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetConstantBlockAlignmentTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetDataTypeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetIndexTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetTextureTypeTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLAttributeDescriptorTest" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="GetSetBufferIndexTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetSetFormatTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetOffsetTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLAttributeTest" executed="True" result="Success" success="True" time="0.002" asserts="6">
            <results>
              <test-case name="GetActiveTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetAttributeIndexTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetAttributeTypeTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetIsPatchControlPointDataTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetIsPatchDataTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetNameTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLBufferLayoutDescriptorTest" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="GetSetStepFunctionTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetStepRate" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetStrideTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLFunctionConstantTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="GetIndexTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetIsRequiredTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetNameTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetTypeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLIndirectCommandBufferDescriptorTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="GetSetCommandTypesTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetInheritBuffersTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetMaxFragmentBufferBindCountTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetMaxVertexBufferBindCountTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLPipelineBufferDescriptorTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="GetSetMutabilityTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLPointerTypeTests" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="GetAccessTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetAlignmentTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetDataSizeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetElementIsArgumentBufferTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetElementTypeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLSharedEventListenerTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="GetSetCommandTypesTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLStageInRegionIndirectArgumentsTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="SizeOfMTLStageInRegionIndirectArgumentsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLStageInputOutputDescriptorTest" executed="True" result="Success" success="True" time="0.002" asserts="4">
            <results>
              <test-case name="GetAttributesTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetLayoutsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetIndexBufferTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetSetIndexType" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MTLTextureReferenceTypeTests" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="GetAccessTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetIsDepthTextureTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetTextureDataType" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetTextureType" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StructTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="MTLQuadTessellationFactorsHalfStructSize" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="MTLTriangleTessellationFactorsHalfStructSize" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageScaleTest" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
            <results>
              <test-case name="ScaleTransform" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="KernelTest" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
            <results>
              <test-case name="MPSImageLaplacianPyramidCtorArrTest" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
              <test-case name="MPSKernelCopyTest" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
              <test-case name="MPSRnnImageInferenceLayerCopyTest" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
              <test-case name="MPSRnnMatrixInferenceLayerTest" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
              <test-case name="RectNoClip" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSAccelerationStructureTests" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[This test only runs on device.]]></message>
            </reason>
            <results>
              <test-case name="MPSAxisAlignedBoundingBoxTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSImageBatchTests" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[This test only runs on device.]]></message>
            </reason>
            <results>
              <test-case name="IncrementReadCountTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
              <test-case name="MPSImageBatchResourceSizeTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSImageHistogramEqualizationTest" executed="True" result="Inconclusive" success="False" time="0" asserts="0">
            <results>
              <test-case name="Constructors" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSImageHistogramSpecificationTest" executed="True" result="Inconclusive" success="False" time="0" asserts="0">
            <results>
              <test-case name="Constructors" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSImageHistogramTest" executed="True" result="Inconclusive" success="False" time="0" asserts="0">
            <results>
              <test-case name="Constructors" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSImageNormalizedHistogramTests" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[This test only runs on device.]]></message>
            </reason>
            <results>
              <test-case name="Constructors" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSStateBatchTests" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[This test only runs on device.]]></message>
            </reason>
            <results>
              <test-case name="IncrementReadCountTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
              <test-case name="MPSImageBatchResourceSizeTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MPSStateResourceListTests" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[This test only runs on device.]]></message>
            </reason>
            <results>
              <test-case name="CreateTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
              <test-case name="MTLTextureDescriptorCreateTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
              <test-case name="SizesCreateTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UTTypeTest" executed="True" result="Success" success="True" time="0.031" asserts="586">
            <results>
              <test-case name="CreatePreferredIdentifier" executed="True" result="Success" success="True" time="0.026" asserts="500" />
              <test-case name="Equals" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="GetDeclaration" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetDeclaringBundleURL" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetPreferredTag" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="NSStringConstants" executed="True" result="Success" success="True" time="0.003" asserts="79" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="A_MDLAnimatedValueTypesTests" executed="True" result="Success" success="True" time="0.143" asserts="4426">
            <results>
              <test-case name="MDLAnimatedMatrix4x4Test" executed="True" result="Success" success="True" time="0.108" asserts="964" />
              <test-case name="MDLAnimatedQuaternionArrayTest" executed="True" result="Success" success="True" time="0.006" asserts="352" />
              <test-case name="MDLAnimatedQuaternionTest" executed="True" result="Success" success="True" time="0.003" asserts="126" />
              <test-case name="MDLAnimatedScalarArrayTest" executed="True" result="Success" success="True" time="0.005" asserts="964" />
              <test-case name="MDLAnimatedScalarTest" executed="True" result="Success" success="True" time="0.004" asserts="964" />
              <test-case name="MDLAnimatedVector2Test" executed="True" result="Success" success="True" time="0.004" asserts="124" />
              <test-case name="MDLAnimatedVector3ArrayTest" executed="True" result="Success" success="True" time="0.004" asserts="184" />
              <test-case name="MDLAnimatedVector3Test" executed="True" result="Success" success="True" time="0.003" asserts="184" />
              <test-case name="MDLAnimatedVector4Test" executed="True" result="Success" success="True" time="0.005" asserts="244" />
              <test-case name="MDLMatrix4x4ArrayTest" executed="True" result="Success" success="True" time="0.001" asserts="320" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDCameraTest" executed="True" result="Success" success="True" time="0.003" asserts="99">
            <results>
              <test-case name="ProjectionMatrix" executed="True" result="Success" success="True" time="0.002" asserts="99" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLAssetTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="BoundingBoxTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLLightTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="IrradianceAtPointTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLMaterialPropertyTest" executed="True" result="Success" success="True" time="0.009" asserts="161">
            <results>
              <test-case name="Copy" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Ctors" executed="True" result="Success" success="True" time="0.008" asserts="160" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLMeshTest" executed="True" result="Success" success="True" time="0.014" asserts="120">
            <results>
              <test-case name="CreateBoxWithDimensonTest" executed="True" result="Success" success="True" time="0.002" asserts="12" />
              <test-case name="CreateBoxWithExtentTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="CreateCapsuleTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CreateConeTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CreateCylinderTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CreateCylindroidTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="CreateEllipsoidTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="CreateEllipticalConeTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CreateHemisphereTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="CreateIcosahedronTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CreatePaneTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CreatePlaneTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="CreateSphereTest" executed="True" result="Success" success="True" time="0.001" asserts="12" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLNoiseTextureTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLObjectTest" executed="True" result="Success" success="True" time="0.005" asserts="1">
            <results>
              <test-case name="GetBoundingBox" executed="True" result="Success" success="True" time="0.004" asserts="0" />
              <test-case name="ProtocolTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLStereoscopicCameraTest" executed="True" result="Success" success="True" time="0.002" asserts="196">
            <results>
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.002" asserts="196" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLTextureTest" executed="True" result="Success" success="True" time="0.002" asserts="6">
            <results>
              <test-case name="CreateIrradianceTextureCubeTest_a" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateIrradianceTextureCubeTest_b" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="DimensionsTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLTransformComponentTest" executed="True" result="Success" success="True" time="0.004" asserts="320">
            <results>
              <test-case name="CreateGlobalTransformTest" executed="True" result="Success" success="True" time="0.001" asserts="32" />
              <test-case name="LocalTransformTest" executed="True" result="Success" success="True" time="0.002" asserts="176" />
              <test-case name="MatrixTest" executed="True" result="Success" success="True" time="0.001" asserts="112" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLTransformTest" executed="True" result="Success" success="True" time="0.004" asserts="190">
            <results>
              <test-case name="Ctors" executed="True" result="Success" success="True" time="0.002" asserts="133" />
              <test-case name="GetRotationMatrixTest" executed="True" result="Success" success="True" time="0.001" asserts="48" />
              <test-case name="RotationAtTimeTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ScaleAtTimeTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TranslationAtTimeTest" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLVertexAttributeTest" executed="True" result="Success" success="True" time="0.002" asserts="16">
            <results>
              <test-case name="Ctors" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MDLVoxelArrayTest" executed="True" result="Success" success="True" time="0.002" asserts="15">
            <results>
              <test-case name="BoundingBoxTest" executed="True" result="Success" success="True" time="0.001" asserts="15" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MonoRuntimeTests" executed="True" result="Success" success="True" time="0.007" asserts="2">
            <results>
              <test-case name="Bug18632" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="Bug26989" executed="True" result="Success" success="True" time="0.004" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EmbeddingTest" executed="True" result="Success" success="True" time="0.025" asserts="5">
            <results>
              <test-case name="Write" executed="True" result="Success" success="True" time="0.025" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GazetteerTest" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="Dictionary" executed="True" result="Success" success="True" time="0.002" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NLLanguageRecognizerTest" executed="True" result="Success" success="True" time="0.019" asserts="8">
            <results>
              <test-case name="GetDominantLanguageTest" executed="True" result="Success" success="True" time="0.007" asserts="1" />
              <test-case name="HandelNumbers" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Process" executed="True" result="Success" success="True" time="0.011" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NLTaggerTest" executed="True" result="Success" success="True" time="0.007" asserts="23">
            <results>
              <test-case name="GetTag" executed="True" result="Success" success="True" time="0.006" asserts="3" />
              <test-case name="GetTags" executed="True" result="Success" success="True" time="0.001" asserts="20" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWBrowserDescriptorTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="TestBonjourDomainProperty" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestBonjourTypeProperty" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestCreateNullDomain" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestIncludeTxtRecordProperty" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWBrowserTest" executed="True" result="Success" success="True" time="0.958" asserts="9">
            <results>
              <test-case name="TestConstructorNullParameters" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="TestDispatchQueuPropertyNull" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestStart" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="TestStartNoQ" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestStateChangesHandler" executed="True" result="Success" success="True" time="0.953" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWConnectionTest" executed="True" result="Success" success="True" time="6.025" asserts="12">
            <results>
              <test-case name="TestCancel" executed="True" result="Success" success="True" time="3.009" asserts="3" />
              <test-case name="TestEndpointProperty" executed="True" result="Success" success="True" time="0.004" asserts="2" />
              <test-case name="TestForceCancel" executed="True" result="Success" success="True" time="3.007" asserts="3" />
              <test-case name="TestParametersProperty" executed="True" result="Success" success="True" time="0.003" asserts="2" />
              <test-case name="TestSetQPropertyNull" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWEstablishmentReportTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="TestConnectionSetupTime" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestDuration" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestEnumerateResolutions" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="TestPreviousAttemptCount" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestProxyConfigured" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CI bots might have proxies setup and will mean that the test will fail.]]></message>
                </reason>
              </test-case>
              <test-case name="TestProxyEnpoint" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CI bots might have proxies setup and will mean that the test will fail.]]></message>
                </reason>
              </test-case>
              <test-case name="TestUsedProxy" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[CI bots might have proxies setup and will mean that the test will fail.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWFramerMessageTest" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="TestGetData" executed="True" result="Success" success="True" time="0.002" asserts="3" />
              <test-case name="TestGetDataMissingKey" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestGetObject" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestGetObjectMissingKey" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWIPProtocolMetadataTest" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="TestEcnFlagProperty" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestMetadataType" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TestReceiveTimeProperty" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestServiceClassProperty" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWListenerTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="TestConnectionLimit" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWParametersTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="CreateSecureTcpTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CreateSecureTcpTestDoNotSetUpProtocol" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateSecureTcpTestDoNotSetUpTls" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateSecureUpdTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateSecureUpdTestDoNotSetUpProtocol" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="CreateSecureUpdTestDoNotSetUpTls" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ExpiredDnsBehaviorPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="FastOpenEnabledPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IncludePeerToPeerPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="LocalEndpointPropertyTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[nw_parameters_copy_local_endpoint always return null. Rdar filled 44095278.]]></message>
                </reason>
              </test-case>
              <test-case name="LocalOnlyPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="MultiPathServicePropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="PreferNoProxyPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ProhibitInterfaceTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ProhibitInterfaceTypeTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="ProtocolStackPropertyTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="RequiredInterfacePropertyTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="RequiredInterfaceTypePropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ReuseLocalAddressPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ServiceClassPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestProhibitConstrained" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWPathTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="EnumerateGatewayNullCallbackTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="EnumerateGatewayTest" executed="True" result="Success" success="True" time="10.002" asserts="1" />
              <test-case name="HasDnsPropertyTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="HasIPV4PropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="HasIPV6PropertyTest" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[We cannot test the use of IPV6 since it is different per machine configuraton and makes the test flaky.]]></message>
                </reason>
              </test-case>
              <test-case name="IsExpensivePropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IterateInterfacesTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="StatusPropertyTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="UsesInterfaceTypeTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolDefinitionTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="IPDefinitionTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TcpDefinitionTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TlsDefinitionTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="UdpDefinitionTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="WebSocketDefinitionTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolIPOptionsTest" executed="True" result="Success" success="True" time="0.023" asserts="13">
            <results>
              <test-case name="SetCaculateReceiveTimeTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SetDisableFragmentation" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SetHopLimitTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SetIPLocalAddressPreference" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SetIPVersionTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SetUseMinimumMtu" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolMetadataTest" executed="True" result="Success" success="True" time="0.002" asserts="20">
            <results>
              <test-case name="IP" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="Udp" executed="True" result="Success" success="True" time="0.001" asserts="10" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolOptionsTest" executed="True" result="Success" success="True" time="0.043" asserts="12">
            <results>
              <test-case name="CreateTcpTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateTlsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateUdpTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SetIPLocalAddressPreference" executed="True" result="Success" success="True" time="0.042" asserts="9" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolStackTest" executed="True" result="Success" success="True" time="0.024" asserts="4">
            <results>
              <test-case name="ClearApplicationProtocolsTest" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="PrependApplicationProtocolNullOptionsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolTcpOptionsTest" executed="True" result="Success" success="True" time="0.003" asserts="14">
            <results>
              <test-case name="ConnectionTimeoutTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="DisableAckStretchingTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="DisableEcnTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="EnableFastOpenTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="EnableKeepAliveTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="KeepAliveCountTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="KeepAliveIdleTimeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="MaximumSegmentSizeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="NoDelayTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="NoOptionsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="NoPushTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="PersistTimeoutTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="RetransmitConnectionDropTimeTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="RetransmitFinDropTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolTlsOptionsTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="ProtocolOptionsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWProtocolUdpOptionsTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="PreferNoChecksumTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWTxtRecordTest" executed="True" result="Success" success="True" time="0.005" asserts="34">
            <results>
              <test-case name="TestAddByteValue" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TestAddNoValue" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestAddNullStringValue" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestAddStringValue" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestApply" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="TestFromBytes" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestGetRaw" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestGetValueMissing" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="TestGetValuePresent" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TestIsDictionary" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestKeyCount" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestMissingKey" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestNotNullEquals" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestPresentKey" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestRemoveMissingKey" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestRemovePresentKey" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWWebSocketMetadataTest" executed="True" result="Success" success="True" time="0.001" asserts="10">
            <results>
              <test-case name="TestConstructor" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="TestPongHandlerNullCallaback" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestPongHandlerNullQ" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestServerResponse" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWWebSocketOptionsTest" executed="True" result="Success" success="True" time="0.005" asserts="15">
            <results>
              <test-case name="TestAddSubprotocol" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestAddSubprotocolNullValue" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestAutoReplyPing" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestClientRequenHandlerNullQ" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestClientRequestHandlerNullCallback" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestConstructorInvalidVersion" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestMaxMessageSize" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestSetHeader" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestSetHeaderNullName" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestSetHeaderNullValue" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="TestSkipHandShake" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BlockSignatureTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="WithUserDelegateTypeAttribute" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="WithoutUserDelegateTypeAttribute" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="BlocksTest" executed="True" result="Success" success="True" time="0.002" asserts="10">
            <results>
              <test-case name="InvalidBlockTrampolines" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="TestSetupBlock" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ClassTest" executed="True" result="Success" success="True" time="0.04" asserts="18">
            <results>
              <test-case name="Bug33981" executed="True" result="Success" success="True" time="0.038" asserts="2" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GetHandle" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="IsCustomType" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Lookup" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="LookupTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="getClassTest" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DlfcnTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="OpenClose_libSystem" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ExceptionsTest" executed="True" result="Success" success="True" time="0.007" asserts="31">
            <results>
              <test-case name="ManagedExceptionPassthrough" executed="True" result="Success" success="True" time="0.006" asserts="25" />
              <test-case name="ObjCException" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ProtocolTest" executed="True" result="Success" success="True" time="0.001" asserts="18">
            <results>
              <test-case name="Ctors" executed="True" result="Success" success="True" time="0.001" asserts="18" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RegistrarTest" executed="True" result="Success" success="True" time="2.01" asserts="937">
            <results>
              <test-case name="BlockCollection" executed="True" result="Success" success="True" time="0.499" asserts="2" />
              <test-case name="BlockReturnTest" executed="True" result="Success" success="True" time="0.003" asserts="3" />
              <test-case name="Bug23289" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="Bug34224" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="ByrefParameter" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ConformsToProtocolTest" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="ConformsToProtocolTest2" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="ConstructorChaining" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ExportedGenericsTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="FakeTypeTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="GenericVirtualTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IProtocolTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="IdAsIntPtrTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InOutProtocolMethodArgument" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="MethodEncodings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="OutNSErrorOnStack1" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="OutNSErrorOnStack2" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="OutOverriddenWithoutOutAttribute" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="PropertySetters" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="ProtocolArgument" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="RefOutTest_CFBundle" executed="True" result="Success" success="True" time="0.01" asserts="44" />
              <test-case name="RefOutTest_Class" executed="True" result="Success" success="True" time="0.002" asserts="36" />
              <test-case name="RefOutTest_ClassArray" executed="True" result="Success" success="True" time="0.005" asserts="42" />
              <test-case name="RefOutTest_INSCoding" executed="True" result="Success" success="True" time="0.002" asserts="66" />
              <test-case name="RefOutTest_INSCodingArray" executed="True" result="Success" success="True" time="0.003" asserts="58" />
              <test-case name="RefOutTest_Int" executed="True" result="Success" success="True" time="0.001" asserts="36" />
              <test-case name="RefOutTest_NSObject" executed="True" result="Success" success="True" time="0.002" asserts="60" />
              <test-case name="RefOutTest_NSObjectArray" executed="True" result="Success" success="True" time="0.003" asserts="55" />
              <test-case name="RefOutTest_NSValue" executed="True" result="Success" success="True" time="0.002" asserts="60" />
              <test-case name="RefOutTest_NSValueArray" executed="True" result="Success" success="True" time="0.003" asserts="61" />
              <test-case name="RefOutTest_Sel" executed="True" result="Success" success="True" time="0.002" asserts="36" />
              <test-case name="RefOutTest_String" executed="True" result="Success" success="True" time="0.001" asserts="36" />
              <test-case name="RefOutTest_StringArray" executed="True" result="Success" success="True" time="0.002" asserts="42" />
              <test-case name="RegistrarRemoval" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SelectorReturnValue" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestCGPointParameter" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestConstrainedGenericType" executed="True" result="Success" success="True" time="0.003" asserts="14" />
              <test-case name="TestConstrainedGenericType2" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TestCopyWithZone" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TestCtors" executed="True" result="Success" success="True" time="0.003" asserts="19" />
              <test-case name="TestGeneric" executed="True" result="Success" success="True" time="0.002" asserts="7" />
              <test-case name="TestGenericUIView" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="TestINSCodingArray" executed="True" result="Success" success="True" time="0.799" asserts="8" />
              <test-case name="TestINativeObject" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="TestInheritedProtocols" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestInheritedStaticMethods" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestInstanceMethodOnOpenGenericType" executed="True" result="Success" success="True" time="0.003" asserts="52" />
              <test-case name="TestNSObjectArray" executed="True" result="Success" success="True" time="0.165" asserts="8" />
              <test-case name="TestNativeEnum" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="TestNestedGenericType" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TestNonVirtualProperty" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestNullOutParameters" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="TestObjCProperties" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestOutNSString" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestProperties" executed="True" result="Success" success="True" time="0.012" asserts="20" />
              <test-case name="TestProtocolAndRegister" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestProtocolRegistration" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TestRegisteredName" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="TestRetainReturnValue" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="TestStaticProperties" executed="True" result="Success" success="True" time="0.015" asserts="21" />
              <test-case name="TestStringArray" executed="True" result="Success" success="True" time="0.441" asserts="8" />
              <test-case name="TestStructAndOut" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="TestThreadSafety" executed="True" result="Success" success="True" time="0.002" asserts="7" />
              <test-case name="TestTypeEncodings" executed="True" result="Success" success="True" time="0.002" asserts="19" />
              <test-case name="TestVirtual" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RegistrarTestGenerated" executed="True" result="Success" success="True" time="0.214" asserts="1682">
            <results>
              <test-case name="NSNumberBindAs_BooleanArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSNumberBindAs_Boolean_Array_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSNumberBindAs_Boolean_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSNumberBindAs_Boolean_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_ByteArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSNumberBindAs_Byte_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Byte_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_Byte_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_DoubleArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Double_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Double_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_Double_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_Int16Array_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Int16_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Int16_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_Int16_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_Int32Array_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Int32_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Int32_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_Int32_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_Int64Array_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Int64_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Int64_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_Int64_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_NSStreamStatusArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_NSStreamStatus_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_NSStreamStatus_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSNumberBindAs_NSStreamStatus_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_SByteArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_SByte_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_SByte_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_SByte_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_SingleArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Single_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_Single_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_Single_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_UInt16Array_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_UInt16_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_UInt16_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_UInt16_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_UInt32Array_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_UInt32_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_UInt32_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_UInt32_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_UInt64Array_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_UInt64_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_UInt64_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_UInt64_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_nfloatArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_nfloat_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_nfloat_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_nfloat_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSNumberBindAs_nintArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_nint_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_nint_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="NSNumberBindAs_nint_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="NSNumberBindAs_nuintArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_nuint_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSNumberBindAs_nuint_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSNumberBindAs_nuint_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSStringBindAs_SecKeyAlgorithmArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSStringBindAs_SecKeyAlgorithm_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSStringBindAs_SecKeyAlgorithm_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="NSStringBindAs_SecKeyAlgorithm_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_CATransform3DArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_CATransform3D_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CATransform3D_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CATransform3D_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_CGAffineTransformArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGAffineTransform_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGAffineTransform_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CGAffineTransform_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="NSValueBindAs_CGPointArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_CGPoint_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGPoint_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CGPoint_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_CGRectArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGRect_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGRect_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CGRect_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="NSValueBindAs_CGSizeArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGSize_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGSize_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CGSize_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_CGVectorArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_CGVector_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CGVector_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CGVector_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_CLLocationCoordinate2DArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_CLLocationCoordinate2D_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CLLocationCoordinate2D_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CLLocationCoordinate2D_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_CMTimeArray_Bindings" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CMTimeMappingArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_CMTimeMapping_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CMTimeMapping_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CMTimeMapping_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="NSValueBindAs_CMTimeRangeArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_CMTimeRange_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CMTimeRange_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CMTimeRange_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="NSValueBindAs_CMTime_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_CMTime_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_CMTime_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_MKCoordinateSpanArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_MKCoordinateSpan_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_MKCoordinateSpan_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_MKCoordinateSpan_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_NSDirectionalEdgeInsetsArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_NSDirectionalEdgeInsets_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_NSDirectionalEdgeInsets_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_NSDirectionalEdgeInsets_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="NSValueBindAs_NSRangeArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_NSRange_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_NSRange_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_NSRange_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_SCNMatrix4Array_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_SCNMatrix4_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_SCNMatrix4_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_SCNMatrix4_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_SCNVector3Array_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_SCNVector3_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_SCNVector3_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_SCNVector3_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_SCNVector4Array_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_SCNVector4_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_SCNVector4_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_SCNVector4_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_UIEdgeInsetsArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_UIEdgeInsets_Array_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_UIEdgeInsets_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_UIEdgeInsets_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="NSValueBindAs_UIOffsetArray_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSValueBindAs_UIOffset_Array_Overrides" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="NSValueBindAs_UIOffset_Bindings" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="NSValueBindAs_UIOffset_Overrides" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_c" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Test_cc" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Test_ccc" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_cccc" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="Test_d" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Test_dd" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Test_ddd" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_dddd" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_ddddd" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="Test_ddi" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_di" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Test_didi" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_dldl" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_f" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Test_ff" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Test_fff" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_ffff" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_fffff" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="Test_fi" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Test_fifi" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_i" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Test_id" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Test_idi" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_idid" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_if" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Test_iff" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_ifif" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_ii" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Test_iid" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_iiff" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_iii" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_iiii" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_iiiii" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="Test_l" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Test_ldld" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_ll" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Test_lll" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_llll" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_lllll" executed="True" result="Success" success="True" time="0.001" asserts="10" />
              <test-case name="Test_s" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Test_ss" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Test_sss" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Test_ssss" executed="True" result="Success" success="True" time="0" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RuntimeTest" executed="True" result="Success" success="True" time="11.345" asserts="35">
            <results>
              <test-case name="ConnectMethod" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="ConnectMethod1" executed="True" result="Success" success="True" time="0.002" asserts="0" />
              <test-case name="ConnectMethod2" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="ConnectMethod3" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ConnectMethodTest" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="FinalizationRaceCondition" executed="True" result="Success" success="True" time="10.165" asserts="1" />
              <test-case name="GetINativeObjectTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="GetINativeObject_ForcedType" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="GetNSObject_Different_Class" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetNSObject_IntPtrZero" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="GetNSObject_Posing_Class" executed="True" result="Success" success="True" time="0.003" asserts="0" />
              <test-case name="GetNSObject_Subclass" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="MX8029" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="NSAutoreleasePoolInThreadPool" executed="True" result="Success" success="True" time="0.004" asserts="2" />
              <test-case name="RegisterAssembly_null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-suite type="ParameterizedMethod" name="ResurrectedObjectsDisposedTest" executed="True" result="Success" success="True" time="1.047" asserts="2">
                <results>
                  <test-case name="ResurrectedObjectsDisposedTest(Foundation.NSObject)" executed="True" result="Success" success="True" time="0.524" asserts="1" />
                  <test-case name="ResurrectedObjectsDisposedTest(MonoTouchFixtures.ObjCRuntime.RuntimeTest+ResurrectedObjectsDisposedTestClass)" executed="True" result="Success" success="True" time="0.523" asserts="1" />
                </results>
              </test-suite>
              <test-case name="UsableUntilDead" executed="True" result="Success" success="True" time="0.116" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TrampolineTest" executed="True" result="Success" success="True" time="0.013" asserts="60">
            <results>
              <test-case name="ArrayTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="DoubleReturnTest" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="FloatReturnTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="FloatingPointStretTrampolineTest" executed="True" result="Success" success="True" time="0.008" asserts="23" />
              <test-case name="IntPtrTest" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="LoooongTest" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="OutParamTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="OutValueTypeTest" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="StretTrampolineTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="X64ArgumentOverflow" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TrampolineTestGenerated" executed="True" result="Success" success="True" time="0.074" asserts="344">
            <results>
              <test-case name="Test_c" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_cc" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ccc" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_cccc" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_d" executed="True" result="Success" success="True" time="0.003" asserts="8" />
              <test-case name="Test_dd" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ddd" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_dddd" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ddddd" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ddi" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_di" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_didi" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_dldl" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_f" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_ff" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_fff" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ffff" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_fffff" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_fi" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_fifi" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_i" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_id" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_idi" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_idid" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_if" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_iff" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ifif" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ii" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_iid" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_iiff" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_iii" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_iiii" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_iiiii" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_l" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_ldld" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ll" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_lll" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_llll" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_lllll" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_s" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_ss" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Test_sss" executed="True" result="Success" success="True" time="0.002" asserts="8" />
              <test-case name="Test_ssss" executed="True" result="Success" success="True" time="0.002" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EAGLContextTest" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="PresentRenderBufferTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ActionTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="TimingFunction_5058" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="TimingFunction_5072" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GeometrySourceTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="FromMetalBuffer" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test only runs on device.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NodeTest" executed="True" result="Success" success="True" time="0.003" asserts="0">
            <results>
              <test-case name="AddAnimation" executed="True" result="Success" success="True" time="0.002" asserts="0" />
              <test-case name="AddAnimation_Overload" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SCNViewTests" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="NullOverlaySceneTest" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StructTest" executed="True" result="Success" success="True" time="0.001" asserts="7">
            <results>
              <test-case name="Matrix" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Quaternion" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Vector" executed="True" result="Success" success="True" time="0" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CertificateTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="GenerateKeyPairTest" executed="True" result="Success" success="True" time="0.054" asserts="6" />
              <test-case name="MailNSData" executed="True" result="Success" success="True" time="0.003" asserts="13" />
              <test-case name="MailRaw" executed="True" result="Success" success="True" time="0" asserts="13" />
              <test-case name="MailX1" executed="True" result="Success" success="True" time="0.024" asserts="17" />
              <test-case name="MailX2" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="https://bugzilla.xamarin.com/show_bug.cgi?id=39952" />
                </properties>
                <reason>
                  <message><![CDATA[https://bugzilla.xamarin.com/show_bug.cgi?id=39952]]></message>
                </reason>
              </test-case>
              <test-case name="X2" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="IdentityTest" executed="True" result="Success" success="True" time="0.011" asserts="6">
            <results>
              <test-case name="AccessCertificates" executed="True" result="Success" success="True" time="0.005" asserts="3" />
              <test-case name="I2" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="Identity" executed="True" result="Success" success="True" time="0.003" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImportExportTest" executed="True" result="Success" success="True" time="0.003" asserts="7">
            <results>
              <test-case name="P12_AuthFailed" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="P12_Success" executed="True" result="Success" success="True" time="0.003" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="KeyChainTest" executed="True" result="Success" success="True" time="0.026" asserts="11">
            <results>
              <test-case name="AddQueryRemove_Identity" executed="True" result="Success" success="True" time="0.01" asserts="6" />
              <test-case name="Add_Certificate" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="CheckId" executed="True" result="Success" success="True" time="0.006" asserts="1" />
              <test-case name="QueryAsData" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="QueryAsDataArray" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="SecItemAdd_Identity" executed="True" result="Success" success="True" time="0.006" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="KeyTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="BenchmarkManaged4096" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="Just to compare performance with BenchmarkNative4096" />
                </properties>
                <reason>
                  <message><![CDATA[Just to compare performance with BenchmarkNative4096]]></message>
                </reason>
              </test-case>
              <test-case name="BenchmarkNative4096" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="Just to compare performance with BenchmarkManaged4096" />
                </properties>
                <reason>
                  <message><![CDATA[Just to compare performance with BenchmarkManaged4096]]></message>
                </reason>
              </test-case>
              <test-case name="CreateRandomKeyTest" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="EC" executed="True" result="Success" success="True" time="0.009" asserts="12" />
              <test-case name="ECSecPrimeRandom" executed="True" result="Success" success="True" time="0.004" asserts="3" />
              <test-case name="EncryptTooLarge" executed="True" result="Success" success="True" time="0.011" asserts="2" />
              <test-case name="Encrypt_Empty" executed="True" result="Success" success="True" time="0.035" asserts="2" />
              <test-case name="Encrypt_New" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Encrypt_Old" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GenerateKeyPairTooLargeRSA" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="RSA" executed="True" result="Success" success="True" time="0.009" asserts="12" />
              <test-case name="RoundtripRSA1024OAEP" executed="True" result="Success" success="True" time="0.046" asserts="8" />
              <test-case name="RoundtripRSAMinPKCS1" executed="True" result="Success" success="True" time="0.012" asserts="18" />
              <test-case name="SignVerifyECSHA1" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="SignVerifyRSAMinPKCS1SHA1" executed="True" result="Success" success="True" time="0.014" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ProtocolOptionsTest" executed="True" result="Success" success="True" time="0.002" asserts="10">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Equals" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="NewTlsOptions" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RecordTest" executed="True" result="Success" success="True" time="0.144" asserts="163">
            <results>
              <test-case name="Accessible_17579" executed="True" result="Success" success="True" time="0.015" asserts="18" />
              <test-case name="AuthenticationType_17579" executed="True" result="Success" success="True" time="0.019" asserts="24" />
              <test-case name="DeskCase_83099_InmutableDictionary" executed="True" result="Success" success="True" time="0.007" asserts="6" />
              <test-case name="Identity" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="IdentityRecordTest" executed="True" result="Success" success="True" time="0.004" asserts="5" />
              <test-case name="KeyRecordTest" executed="True" result="Success" success="True" time="0.011" asserts="5" />
              <test-case name="Match" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Protocol_17579" executed="True" result="Success" success="True" time="0.086" asserts="93" />
              <test-case name="SecRecordRecordTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SecPolicyTest" executed="True" result="Success" success="True" time="0.004" asserts="47">
            <results>
              <test-case name="BasicX509Policy" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="CreateUnknownPolicy" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateWellKnownPolicies" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="RevocationPolicy" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="SslClient" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="SslServer" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="SslServerNoHost" executed="True" result="Success" success="True" time="0" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SecProtocolMetadataTest" executed="True" result="Success" success="True" time="0.087" asserts="14">
            <results>
              <test-case name="TlsDefaults" executed="True" result="Success" success="True" time="0.087" asserts="14" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SecStatusCodeTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="ErrorDescriptionTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SecureTransportTest" executed="True" result="Success" success="True" time="0.165" asserts="123">
            <results>
              <test-case name="DatagramDefaults" executed="True" result="Success" success="True" time="0.002" asserts="17" />
              <test-case name="SslSupportedCiphers" executed="True" result="Success" success="True" time="0.002" asserts="70" />
              <test-case name="StreamDefaults" executed="True" result="Success" success="True" time="0.002" asserts="28" />
              <test-case name="Tls12" executed="True" result="Success" success="True" time="0.159" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TrustTest" executed="True" result="Success" success="True" time="2.75" asserts="87">
            <results>
              <test-case name="Basic_Leaf_Only" executed="True" result="Success" success="True" time="0.003" asserts="2" />
              <test-case name="Client_Leaf_Only" executed="True" result="Success" success="True" time="0.192" asserts="4" />
              <test-case name="HostName_Leaf_Only" executed="True" result="Success" success="True" time="0.384" asserts="5" />
              <test-case name="NoHostName" executed="True" result="Success" success="True" time="0.19" asserts="2" />
              <test-case name="Timestamps" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="Trust2_FullChain" executed="True" result="Success" success="True" time="0.385" asserts="19" />
              <test-case name="Trust2_Leaf_Only" executed="True" result="Success" success="True" time="0.408" asserts="11" />
              <test-case name="Trust2_NoRoot" executed="True" result="Success" success="True" time="0.196" asserts="5" />
              <test-case name="Trust_FullChain" executed="True" result="Success" success="True" time="0.387" asserts="19" />
              <test-case name="Trust_Leaf_Only" executed="True" result="Success" success="True" time="0.408" asserts="11" />
              <test-case name="Trust_NoRoot" executed="True" result="Success" success="True" time="0.196" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MatrixFloat2x2Test" executed="True" result="Success" success="True" time="0.004" asserts="94">
            <results>
              <test-case name="Determinant" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ElementConstructor" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Elements" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="Equality_Operator" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Equals_Matrix" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equals_Object" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Explicit_Operator_FromMatrix2" executed="True" result="Success" success="True" time="0" asserts="12" />
              <test-case name="Explicit_Operator_ToMatrix2" executed="True" result="Success" success="True" time="0" asserts="12" />
              <test-case name="Identity" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="Inequality_Operator" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Multiply" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Multiply_ByRef" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Multiply_Operator" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TransposeInstance" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="TransposeStatic" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="TransposeStatic_ByRef" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MatrixFloat3x3Test" executed="True" result="Success" success="True" time="0.004" asserts="184">
            <results>
              <test-case name="Determinant" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="ElementConstructor" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="Elements" executed="True" result="Success" success="True" time="0" asserts="18" />
              <test-case name="Equality_Operator" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Equals_Matrix" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equals_Object" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Explicit_Operator_FromMatrix3" executed="True" result="Success" success="True" time="0" asserts="27" />
              <test-case name="Explicit_Operator_ToMatrix3" executed="True" result="Success" success="True" time="0" asserts="27" />
              <test-case name="Identity" executed="True" result="Success" success="True" time="0" asserts="18" />
              <test-case name="Inequality_Operator" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Multiply" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="Multiply_ByRef" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="Multiply_Operator" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TransposeInstance" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="TransposeStatic" executed="True" result="Success" success="True" time="0" asserts="18" />
              <test-case name="TransposeStatic_ByRef" executed="True" result="Success" success="True" time="0" asserts="9" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MatrixFloat4x4Test" executed="True" result="Success" success="True" time="0.006" asserts="326">
            <results>
              <test-case name="Determinant" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="ElementConstructor" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="Elements" executed="True" result="Success" success="True" time="0.001" asserts="32" />
              <test-case name="Equality_Operator" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Equals_Matrix" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equals_Object" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Explicit_Operator_FromMatrix4" executed="True" result="Success" success="True" time="0" asserts="48" />
              <test-case name="Explicit_Operator_ToMatrix4" executed="True" result="Success" success="True" time="0.001" asserts="48" />
              <test-case name="Identity" executed="True" result="Success" success="True" time="0" asserts="32" />
              <test-case name="Inequality_Operator" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Multiply" executed="True" result="Success" success="True" time="0.001" asserts="16" />
              <test-case name="Multiply_ByRef" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="Multiply_Operator" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="RowConstructor" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TransposeInstance" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="TransposeStatic" executed="True" result="Success" success="True" time="0" asserts="32" />
              <test-case name="TransposeStatic_ByRef" executed="True" result="Success" success="True" time="0" asserts="16" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NMatrix4dTest" executed="True" result="Success" success="True" time="0.007" asserts="326">
            <results>
              <test-case name="Determinant" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="ElementConstructor" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="Elements" executed="True" result="Success" success="True" time="0.001" asserts="32" />
              <test-case name="Equality_Operator" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="Equals_Matrix" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equals_Object" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Explicit_Operator_FromMatrix4d" executed="True" result="Success" success="True" time="0" asserts="48" />
              <test-case name="Explicit_Operator_ToMatrix4d" executed="True" result="Success" success="True" time="0.001" asserts="48" />
              <test-case name="Identity" executed="True" result="Success" success="True" time="0" asserts="32" />
              <test-case name="Inequality_Operator" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="Multiply" executed="True" result="Success" success="True" time="0.001" asserts="16" />
              <test-case name="Multiply_ByRef" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="Multiply_Operator" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="RowConstructor" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TransposeInstance" executed="True" result="Success" success="True" time="0" asserts="16" />
              <test-case name="TransposeStatic" executed="True" result="Success" success="True" time="0" asserts="32" />
              <test-case name="TransposeStatic_ByRef" executed="True" result="Success" success="True" time="0" asserts="16" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NMatrix4x3Test" executed="True" result="Success" success="True" time="0.002" asserts="55">
            <results>
              <test-case name="ElementConstructor" executed="True" result="Success" success="True" time="0" asserts="12" />
              <test-case name="Elements" executed="True" result="Success" success="True" time="0" asserts="24" />
              <test-case name="Equality_Operator" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Equals_Matrix" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Equals_Object" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Inequality_Operator" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NVector3dTest" executed="True" result="Success" success="True" time="0.002" asserts="28">
            <results>
              <test-case name="ElementConstructor" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Equality_Operator" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Equals_Object" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Equals_Vector" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Explicit_Operator_FromVector3" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Explicit_Operator_ToVector3" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Inequality_Operator" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VectorFloat3Test" executed="True" result="Success" success="True" time="0.002" asserts="28">
            <results>
              <test-case name="ElementConstructor" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Equality_Operator" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="Equals_Object" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Equals_Vector" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Explicit_Operator_FromVector3" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Explicit_Operator_ToVector3" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="Inequality_Operator" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="ToStringTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FieldNodeTest" executed="True" result="Success" success="True" time="0.005" asserts="14">
            <results>
              <test-case name="CreateCustomField" executed="True" result="Success" success="True" time="0.004" asserts="4" />
              <test-case name="CreateLinearGravityField" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CreateRadialGravityField" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="CreateVelocityField" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="KeyframeSequenceTest" executed="True" result="Success" success="True" time="0.002" asserts="22">
            <results>
              <test-case name="Ctor_Arrays" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="Ctor_Arrays_Null" executed="True" result="Success" success="True" time="0" asserts="9" />
              <test-case name="Ctor_Capacity" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PhysicsBodyTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="BodyWithEdgeLoopFromRect" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PhysicsJointFixedTest" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="Create" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PhysicsJointLimitTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Create" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PhysicsWorldTest" executed="True" result="Success" success="True" time="0.001" asserts="3">
            <results>
              <test-case name="SampleFields" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SK3DNodeTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="ProjectPoint" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This doesn't seem to work properly in the iOS 9+ or macOS 10.11+]]></message>
                </reason>
              </test-case>
              <test-case name="UnprojectPoint" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This doesn't seem to work properly in the iOS 9]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SKShapeNodeTest" executed="True" result="Success" success="True" time="0.002" asserts="6">
            <results>
              <test-case name="FromPointsOffsetTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="FromPointsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="FromSplinePointsOffsetTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="FromSplinePointsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SKTransformNodeTest" executed="True" result="Success" success="True" time="0.002" asserts="52">
            <results>
              <test-case name="EulerAngles" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="QuaternionTest" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="RotationMatrix" executed="True" result="Success" success="True" time="0.001" asserts="38" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SpriteNodeTest" executed="True" result="Success" success="True" time="0.005" asserts="21">
            <results>
              <test-case name="Color" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="CtorColor" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="CtorName" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CtorTexture" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="CtorTextureColor" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Texture" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TextureAtlasTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Empty" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TextureTest" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="Atlas_MissingResource" executed="True" result="Success" success="True" time="0.002" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UniformTest" executed="True" result="Success" success="True" time="0.008" asserts="383">
            <results>
              <test-case name="Create" executed="True" result="Success" success="True" time="0.002" asserts="116" />
              <test-case name="Ctors" executed="True" result="Success" success="True" time="0.005" asserts="267" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="WarpGeometryGridTest" executed="True" result="Success" success="True" time="0.002" asserts="4">
            <results>
              <test-case name="CreateTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetGridByReplacingDestPositionsTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="GetGridByReplacingSourcePositionsTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SKWarpGeometryGridTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ReceiptRefreshRequestTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="TerminateForInvalidReceipt" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Symbols" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="FunctionNames" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This is a device-only test.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NativeTypes" executed="True" result="Success" success="True" time="0.003" asserts="56">
            <results>
              <test-case name="CompareTo" executed="True" result="Success" success="True" time="0.001" asserts="21" />
              <test-case name="Equals" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="IsInfinity" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="IsNan" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="IsNegativeInfinity" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="IsPositiveInfinity" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="NaN_Cast" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="NegativeInfinity_Cast" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="PositiveInfinity_Cast" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CaptiveNetworkTest" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="Fields" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="MarkPortalOffline" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="MarkPortalOffline_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="MarkPortalOnline" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="MarkPortalOnline_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="SetSupportedSSIDs" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="SetSupportedSSIDs_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TryCopyCurrentNetworkInfo" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TryCopyCurrentNetworkInfo_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NetworkReachabilityTest" executed="True" result="Success" success="True" time="0.005" asserts="13">
            <results>
              <test-case name="CtorIPAddress" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="CtorIPAddressPair" executed="True" result="Success" success="True" time="0.002" asserts="6" />
              <test-case name="CtorNameAddress" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Ctor_Invalid" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StatusCodeErrorTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="InvalidStatusCode" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="A_UIStackViewTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="InitWithFrameTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AccessibilityTest" executed="True" result="Success" success="True" time="0.002" asserts="0">
            <results>
              <test-case name="RequestGuidedAccessSession" executed="True" result="Success" success="True" time="0.002" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ActivityIndicatorViewTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AppearanceTest" executed="True" result="Success" success="True" time="0.005" asserts="58">
            <results>
              <test-case name="Appearance" executed="True" result="Success" success="True" time="0.002" asserts="9" />
              <test-case name="AppearanceWhenContainedIn" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="AppearanceWhenContainedIn_UITraitCollection" executed="True" result="Success" success="True" time="0.001" asserts="18" />
              <test-case name="Appearance_UITraitCollection" executed="True" result="Success" success="True" time="0.001" asserts="18" />
              <test-case name="Equality" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="Inequality" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ApplicationTest" executed="True" result="Success" success="True" time="0.002" asserts="4">
            <results>
              <test-case name="BackgroundTaskInvalid" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="BeginBackgroundTask_Null" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MinimumKeepAliveTimeout" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SendAction_Null" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ButtonBarItemTest" executed="True" result="Success" success="True" time="0.004" asserts="15">
            <results>
              <test-case name="Action_Set" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="BackButtonBackgroundImage" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="BackgroundImage" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="CustomView_Null" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InitWithImage" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="InitWithImage2" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="InitWithText" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TintColor_Null" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ButtonTest" executed="True" result="Success" success="True" time="0.002" asserts="8">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="NullAllowed" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Tag_12557" executed="True" result="Success" success="True" time="0" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CollectionViewControllerTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CollectionViewTransitionLayoutTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Ctor" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ColorTest" executed="True" result="Success" success="True" time="0.006" asserts="96">
            <results>
              <test-case name="HSB" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="HSBA" executed="True" result="Success" success="True" time="0" asserts="15" />
              <test-case name="HSBA_No_Saturation" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="Pattern_7362" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="RGB" executed="True" result="Success" success="True" time="0" asserts="14" />
              <test-case name="RGBA" executed="True" result="Success" success="True" time="0" asserts="15" />
              <test-case name="RGBAConstructor" executed="True" result="Success" success="True" time="0.001" asserts="14" />
              <test-case name="ToString_" executed="True" result="Success" success="True" time="0" asserts="15" />
              <test-suite type="ParameterizedMethod" name="WAConstructor" executed="True" result="Success" success="True" time="0" asserts="4">
                <results>
                  <test-case name="WAConstructor(0.2d,0.4d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="WAConstructor(0.3d,0.5d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="WAConstructor(0.4d,0.6d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="WAConstructor(0.5d,0.7d)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ControlTest" executed="True" result="Success" success="True" time="0.017" asserts="3">
            <results>
              <test-case name="AddTargetMakeDirty" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="AddTargetTable" executed="True" result="Success" success="True" time="0.013" asserts="1" />
              <test-case name="CancelTrackingTest" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DeviceTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="DictationPhraseTest" executed="True" result="Success" success="True" time="0" asserts="2">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DirectionalEdgeInsetsTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="FromString_Null" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Operators" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="ToFromString_Zero" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="EdgeInsetsTest" executed="True" result="Success" success="True" time="0.001" asserts="13">
            <results>
              <test-case name="FromString_Null" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="InsetRect" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="InsetRect_Zero" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Operators" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="ToFromString_Zero" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FloatRangeTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="Equals" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="" />
                </properties>
                <reason>
                  <message><![CDATA[]]></message>
                </reason>
              </test-case>
              <test-case name="IsInfinite" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ManagedVersusNative" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="" />
                </properties>
                <reason>
                  <message><![CDATA[]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="FontTest" executed="True" result="Success" success="True" time="0.005" asserts="96">
            <results>
              <test-case name="Methods" executed="True" result="Success" success="True" time="0.002" asserts="48" />
              <test-case name="NullFonts" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="Properties" executed="True" result="Success" success="True" time="0.001" asserts="36" />
              <test-case name="TestDescriptors" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="WithSize" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GestureRecognizerTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="DoubleDispose" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="NoStrongCycles" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="Issue: https://github.com/xamarin/maccore/issues/1345 &amp;&amp; WIP PR: https://github.com/xamarin/xamarin-macios/pull/5462" />
                </properties>
                <reason>
                  <message><![CDATA[Issue: https://github.com/xamarin/maccore/issues/1345 && WIP PR: https://github.com/xamarin/xamarin-macios/pull/5462]]></message>
                </reason>
              </test-case>
              <test-case name="Null" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GraphicsRendererTest" executed="True" result="Success" success="True" time="0.001" asserts="9">
            <results>
              <test-case name="BaseDefaultFormat" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="ImageDefaultFormat" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="PdfDefaultFormat" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GuidedAccessRestrictionTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="GetState" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageTest" executed="True" result="Success" success="True" time="0.072" asserts="2009">
            <results>
              <test-case name="CGImageBackend" executed="True" result="Success" success="True" time="0.002" asserts="5" />
              <test-case name="CreateAnimatedImage" executed="True" result="Success" success="True" time="0.008" asserts="3" />
              <test-case name="FromImage_Null" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TestAutorelease" executed="True" result="Success" success="True" time="0.062" asserts="2000" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ImageViewTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="AnimationImages" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="HighlightedAnimationImages_BackingFields" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LabelTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="HighlightedTextColor" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LayoutConstraintTest" executed="True" result="Success" success="True" time="0.003" asserts="2">
            <results>
              <test-case name="Create" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="FromVisualFormat" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="FromVisualFormat_NullMetrics" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LayoutManagerTest" executed="True" result="Success" success="True" time="0.004" asserts="21">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.002" asserts="14" />
              <test-case name="GetGlyphsTest" executed="True" result="Success" success="True" time="0.002" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSDiffableDataSourceSnapshotTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="GHIssue6567Test" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="ObjectUsageTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NavigationBarTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="BackgroundImage" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NavigationControllerTest" executed="True" result="Success" success="True" time="0.001" asserts="4">
            <results>
              <test-case name="ViewControllers_EmptyNull" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NavigationItemTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="NibTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="FromName_DoesNotExists" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PageControlTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PageViewControllerTest" executed="True" result="Success" success="True" time="0.003" asserts="12">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.002" asserts="10" />
              <test-case name="SetViewControllers" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PanGestureRecognizerTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="Null" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PopoverBackgroundViewTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PopoverControllerTest" executed="True" result="Success" success="True" time="0.001" asserts="0">
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="PopoverBackgroundViewType" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="PresentFromBarButtonItem_BadButton" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
              <test-case name="PresentFromRect" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="PresentFromRect_BadView" executed="True" result="Inconclusive" success="False" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ProgressViewTest" executed="True" result="Success" success="True" time="0.002" asserts="3">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.002" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ScrollViewTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SearchBarTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="SegmentedControlTest" executed="True" result="Success" success="True" time="0.012" asserts="18">
            <results>
              <test-case name="Appearance_7" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="BackgroundImage" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="CtorNSArray" executed="True" result="Success" success="True" time="0.004" asserts="3" />
              <test-case name="CtorNSString" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="CtorObjects" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="CtorString" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="CtorUIImage" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="SplitViewControllerTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="PresentsWithGesture" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[This test is disabled on TVOS.]]></message>
                </reason>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StringAttributesTest" executed="True" result="Success" success="True" time="0.004" asserts="154">
            <results>
              <test-case name="MutableStringAttributesTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="RetainCount" executed="True" result="Success" success="True" time="0.002" asserts="75" />
              <test-case name="RetainCount_7" executed="True" result="Success" success="True" time="0.002" asserts="76" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TabBarControllerTest" executed="True" result="Success" success="True" time="0.003" asserts="5">
            <results>
              <test-case name="Ctor_Defaults" executed="True" result="Success" success="True" time="0.003" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TabBarItemTest" executed="True" result="Success" success="True" time="0.004" asserts="51">
            <results>
              <test-case name="Ctor_2" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Ctor_3" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Ctor_3a_Null" executed="True" result="Success" success="True" time="0.001" asserts="12" />
              <test-case name="Ctor_3b_Null" executed="True" result="Success" success="True" time="0.001" asserts="9" />
              <test-case name="Ctor_Defaults" executed="True" result="Success" success="True" time="0" asserts="8" />
              <test-case name="SelectedImage_7a" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="SelectedImage_7b" executed="True" result="Success" success="True" time="0" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TabBarTest" executed="True" result="Success" success="True" time="0.004" asserts="20">
            <results>
              <test-case name="BackgroundImage" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Items" executed="True" result="Success" success="True" time="0.002" asserts="6" />
              <test-case name="SelectedItem" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="SelectionIndicatorImage" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="TintColor" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TableViewCellTest" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TableViewControllerTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="TableViewTest" executed="True" result="Success" success="True" time="0.001" asserts="1">
            <results>
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TextAttachmentTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="CtorNull" executed="True" result="Success" success="True" time="0.001" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TextContainerTest" executed="True" result="Success" success="True" time="0" asserts="1">
            <results>
              <test-case name="Layout" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TextFieldTest" executed="True" result="Success" success="True" time="0.007" asserts="9">
            <results>
              <test-case name="EmptySelection" executed="True" result="Success" success="True" time="0.002" asserts="3" />
              <test-case name="GetCaretRectForPositiont_Null" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="InputAccessoryViewTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="LeftRight" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="TextInputTraits" executed="True" result="Success" success="True" time="0.002" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="TextViewTest" executed="True" result="Success" success="True" time="0.009" asserts="18">
            <results>
              <test-case name="EmptySelection" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="LayoutManager" executed="True" result="Success" success="True" time="0.002" asserts="13" />
              <test-case name="NonEmptySelection" executed="True" result="Success" success="True" time="0.002" asserts="2" />
              <test-case name="TextInputTraits" executed="True" result="Success" success="True" time="0.002" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UIAlertControllerTest" executed="True" result="Success" success="True" time="0.002" asserts="2">
            <results>
              <test-case name="InitWithNibNameTest" executed="True" result="Success" success="True" time="0.002" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UIContentSizeCategoryTest" executed="True" result="Success" success="True" time="0.001" asserts="6">
            <results>
              <test-case name="Compare" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="IsAccessibilityCategory" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UISearchControllerTest" executed="True" result="Success" success="True" time="0.006" asserts="2">
            <results>
              <test-case name="InitWithNibNameTest" executed="True" result="Success" success="True" time="0.006" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ViewControllerTest" executed="True" result="Success" success="True" time="0.006" asserts="28">
            <results>
              <test-case name="AppearanceTransition" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Defaults" executed="True" result="Success" success="True" time="0.002" asserts="24" />
              <test-case name="NSAction_Null" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="NonModal" executed="True" result="Success" success="True" time="0.002" asserts="0" />
              <test-case name="Toolbars_Null" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="View_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ViewTest" executed="True" result="Success" success="True" time="0.009" asserts="37">
            <results>
              <test-case name="AnimateNotify_Null_a1" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="AnimateNotify_Null_a2" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="AnimateNotify_Null_c1" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="AnimateNotify_Null_c2" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Animate_Null_a1" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Animate_Null_a2" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Animate_Null_a3" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Animate_Null_c1" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Animate_Null_c2" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="BackgroundColorTest" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Convert_Null" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Equality" executed="True" result="Success" success="True" time="0" asserts="3" />
              <test-case name="HitTest_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="PointInside_Null" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="SizeThatFits" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="Subviews" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="TintColor" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="TraitMatch" executed="True" result="Success" success="True" time="0.001" asserts="17" />
              <test-case name="TraitTest" executed="True" result="Success" success="True" time="0" asserts="4" />
              <test-case name="TransitionNotify_Null_a1" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TransitionNotify_Null_c1" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="TransitionNotify_Null_c2" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Transition_Null_a1" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="Transition_Null_c1" executed="True" result="Success" success="True" time="0.001" asserts="0" />
              <test-case name="Transition_Null_c2" executed="True" result="Success" success="True" time="0" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="WindowTest" executed="True" result="Success" success="True" time="0.004" asserts="9">
            <results>
              <test-case name="Convert_Null" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="InitWithFrame" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="IsKeyWindow_5199" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Level" executed="True" result="Success" success="True" time="0.001" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VTCompressionSessionTests" executed="True" result="Success" success="True" time="0.006" asserts="6">
            <results>
              <test-case name="CompressionSessionCreateTest" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="CompressionSessionGetSerializablePropertiesTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CompressionSessionGetSupportedPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="CompressionSessionSetCompressionPropertiesMultiPassStorageTest" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="CompressionSessionSetCompressionPropertiesTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="CompressionSessionSetPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VTDecompressionSessionTests" executed="True" result="Success" success="True" time="0.007" asserts="5">
            <results>
              <test-case name="DecompressionSessionCreateTest" executed="True" result="Success" success="True" time="0.003" asserts="1" />
              <test-case name="DecompressionSessionGetSupportedPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="DecompressionSessionSetDecompressionPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="DecompressionSessionSetPropertiesTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VTFrameSiloTests" executed="True" result="Success" success="True" time="0.002" asserts="5">
            <results>
              <test-case name="ForEachTest" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="FrameSiloCreateTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="SetTimeRangesTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VTMultiPassStorageTests" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="MultiPassStorageCloseTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="MultiPassStorageCreateTest" executed="True" result="Success" success="True" time="0" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VTUtilitiesTests" executed="True" result="Success" success="True" time="0.004" asserts="6">
            <results>
              <test-case name="ToCGImageTest" executed="True" result="Success" success="True" time="0.004" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VTVideoEncoderListTests" executed="True" result="Success" success="True" time="0.001" asserts="2">
            <results>
              <test-case name="SupportedEncoderPropertiesTest" executed="True" result="Success" success="True" time="0" asserts="1" />
              <test-case name="VideoEncoderListTest" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VNRequestTests" executed="True" result="Success" success="True" time="0.015" asserts="83">
            <results>
              <test-case name="VNSupportedRevisionsTest" executed="True" result="Success" success="True" time="0.007" asserts="13" />
              <test-case name="VNSupportedRevisionsTwoTest" executed="True" result="Success" success="True" time="0.002" asserts="11" />
              <test-case name="VNSupportedRevisionsUnsupportedTest" executed="True" result="Success" success="True" time="0.005" asserts="59" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="WeakReferenceTest" executed="True" result="Success" success="True" time="0.899" asserts="4">
            <results>
              <test-case name="NoRetainCyclesExpectedTest" executed="True" result="Success" success="True" time="0.31" asserts="2" />
              <test-case name="RetainCyclesExpectedTest" executed="True" result="Success" success="True" time="0.285" asserts="1" />
              <test-case name="WeakTest" executed="True" result="Success" success="True" time="0.304" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RegistrarSharedTest" executed="True" result="Success" success="True" time="0.001" asserts="5">
            <results>
              <test-case name="IntPtrCtor" executed="True" result="Success" success="True" time="0.001" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AUParameterNodeTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="CreateTokenByAddingParameterRecordingObserver" executed="True" result="Success" success="True" time="0.055" asserts="2" />
              <test-case name="ImplementorDisplayNameWithLengthCallback" executed="False" result="Ignored">
                <properties>
                  <property name="_SKIPREASON" value="" />
                </properties>
                <reason>
                  <message><![CDATA[]]></message>
                </reason>
              </test-case>
              <test-case name="ImplementorStringFromValueCallback" executed="True" result="Success" success="True" time="0.002" asserts="4" />
              <test-case name="ImplementorValueFromStringCallback" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="RemoveParameterObserver" executed="True" result="Success" success="True" time="1.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AVPlayerLooperTest" executed="True" result="Success" success="True" time="0" asserts="0">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="NSLinguisticAnalysisTest" executed="True" result="Success" success="True" time="0.007" asserts="5">
            <results>
              <test-case name="EnumerateSubstringsInRangeTest" executed="True" result="Success" success="True" time="0.004" asserts="2" />
              <test-case name="GetLinguisticTagsTest" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="StopEnumerateSubstringsInRangeTest" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSMutableDictionaryTest" executed="True" result="Success" success="True" time="0.001" asserts="13">
            <results>
              <test-case name="AddEntries" executed="True" result="Success" success="True" time="0" asserts="5" />
              <test-case name="Bug39993" executed="True" result="Success" success="True" time="0" asserts="2" />
              <test-case name="IndexerTest" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NSStringTest" executed="True" result="Success" success="True" time="0.005" asserts="36">
            <results>
              <test-case name="LocalizedFormatTest" executed="True" result="Success" success="True" time="0.003" asserts="12" />
              <test-suite type="ParameterizedMethod" name="NSStringSubstringExceptions" executed="True" result="Success" success="True" time="0.001" asserts="16">
                <results>
                  <test-case name="NSStringSubstringExceptions(&quot;asdf&quot;,-1,0,&quot;start&quot;)" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                  <test-case name="NSStringSubstringExceptions(&quot;asdf&quot;,0,-1,&quot;length&quot;)" executed="True" result="Success" success="True" time="0" asserts="4" />
                  <test-case name="NSStringSubstringExceptions(&quot;asdf&quot;,5,0,&quot;start&quot;)" executed="True" result="Success" success="True" time="0" asserts="4" />
                  <test-case name="NSStringSubstringExceptions(&quot;asdf&quot;,0,5,&quot;length&quot;)" executed="True" result="Success" success="True" time="0" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="TestNSStringSubstrings" executed="True" result="Success" success="True" time="0" asserts="8">
                <results>
                  <test-case name="TestNSStringSubstrings(&quot;asdf&quot;,0,4)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestNSStringSubstrings(&quot;asdf&quot;,0,2)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestNSStringSubstrings(&quot;asdf&quot;,1,3)" executed="True" result="Success" success="True" time="0" asserts="2" />
                  <test-case name="TestNSStringSubstrings(&quot;asdf&quot;,4,0)" executed="True" result="Success" success="True" time="0" asserts="2" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="NWPathMonitorTest" executed="True" result="Success" success="True" time="0.331" asserts="3">
            <results>
              <test-case name="PathIsAlwaysUpdatedWithNewHandlerTest" executed="True" result="Success" success="True" time="0.22" asserts="1" />
              <test-case name="StatusPropertyTest" executed="True" result="Success" success="True" time="0.11" asserts="2" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="/Users/builder/Library/Developer/CoreSimulator/Devices/F959903E-C6FD-49F6-AB5C-E7538A61D713/data/Containers/Bundle/Application/D05CC0D3-0874-4B74-9383-8F869A2C63C9/monotouchtest.app/EmbeddedResources.dll" executed="True" result="Success" success="True" time="0.022" asserts="7">
        <properties>
          <property name="_PID" value="84924" />
          <property name="_APPDOMAIN" value="MonoTouch" />
        </properties>
        <results>
          <test-suite type="TestFixture" name="ResourcesTest" executed="True" result="Success" success="True" time="0.022" asserts="7">
            <results>
              <test-case name="Embedded" executed="True" result="Success" success="True" time="0.021" asserts="7" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="/Users/builder/Library/Developer/CoreSimulator/Devices/F959903E-C6FD-49F6-AB5C-E7538A61D713/data/Containers/Bundle/Application/D05CC0D3-0874-4B74-9383-8F869A2C63C9/monotouchtest.app/bindings-test.dll" executed="False" result="Ignored">
        <properties>
          <property name="_PID" value="84924" />
          <property name="_APPDOMAIN" value="MonoTouch" />
        </properties>
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <results>
          <test-suite type="TestFixture" name="ProtocolTest" executed="True" result="Success" success="True" time="0.007" asserts="64">
            <results>
              <test-case name="OnlyProtocol" executed="True" result="Success" success="True" time="0" asserts="6" />
              <test-case name="ProtocolMembers" executed="True" result="Success" success="True" time="0.005" asserts="44" />
              <test-case name="ProtocolWithBaseType" executed="True" result="Success" success="True" time="0" asserts="7" />
              <test-case name="ProtocolWithBaseTypeAndModel" executed="True" result="Success" success="True" time="0" asserts="7" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RegistrarBindingTest" executed="False" result="Ignored">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <results>
              <test-case name="BlockCallback" executed="True" result="Success" success="True" time="0.002" asserts="0" />
              <test-suite type="ParameterizedMethod" name="LinkedAway" executed="False" result="Ignored">
                <reason>
                  <message><![CDATA[One or more child tests were ignored]]></message>
                </reason>
                <results>
                  <test-case name="LinkedAway(True,True)" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[This test is only applicable if optimized & linking all assemblies.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="LinkedAway(True,False)" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[This test is only applicable if optimized & linking all assemblies.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="LinkedAway(False,True)" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[This test is only applicable if optimized & linking all assemblies.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="LinkedAway(False,False)" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[This test is only applicable if optimized & linking all assemblies.]]></message>
                    </reason>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="ProtocolWithBlockProperties" executed="True" result="Success" success="True" time="0.001" asserts="4">
                <results>
                  <test-case name="ProtocolWithBlockProperties(True,True)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="ProtocolWithBlockProperties(True,False)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="ProtocolWithBlockProperties(False,True)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="ProtocolWithBlockProperties(False,False)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="ProtocolWithNativeBlockProperties" executed="True" result="Success" success="True" time="0.001" asserts="4">
                <results>
                  <test-case name="ProtocolWithNativeBlockProperties(True,True)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="ProtocolWithNativeBlockProperties(True,False)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="ProtocolWithNativeBlockProperties(False,True)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="ProtocolWithNativeBlockProperties(False,False)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedMethod" name="ProtocolWithReturnValues" executed="True" result="Success" success="True" time="0.001" asserts="4">
                <results>
                  <test-case name="ProtocolWithReturnValues(True,True)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="ProtocolWithReturnValues(True,False)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="ProtocolWithReturnValues(False,True)" executed="True" result="Success" success="True" time="0" asserts="1" />
                  <test-case name="ProtocolWithReturnValues(False,False)" executed="True" result="Success" success="True" time="0" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RuntimeTest" executed="True" result="Success" success="True" time="0.003" asserts="0">
            <results>
              <test-case name="MainThreadDeallocationTest" executed="True" result="Success" success="True" time="0.002" asserts="0" />
              <test-case name="MainThreadDeallocationTestQOS" executed="True" result="Success" success="True" time="0" asserts="0" />
              <test-case name="WrapperTypeLookupTest" executed="True" result="Success" success="True" time="0.001" asserts="0" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>
</NUnitOutput>
<TouchUnitExtraData><![CDATA[[Runner executing: Run Everything]
[MonoTouch Version: 13.15.0]
[Assembly:  Xamarin.TVOS.dll (64 bits)]
[GC:    sgen]
[Apple TV:  tvOS v13.2]
[Device Name:   Apple TV]
[Device UDID:   unknown]
[Device Locale: en_US]
[Device Date/Time:  12/17/2019 9:12:41 PM]
[Bundle:    com.xamarin.monotouch-test]



monotouchtest.exe

PointFTest
    [PASS] PointFTest.AddTest
    [PASS] PointFTest.GetHashCodeTest
    [PASS] PointFTest.SubtractTest
    [PASS] PointFTest.TestAddition
    [PASS] PointFTest.TestConstructors
    [PASS] PointFTest.TestEmptyField
    [PASS] PointFTest.TestEqualityOp
    [PASS] PointFTest.TestEquals
    [PASS] PointFTest.TestInequalityOp
    [PASS] PointFTest.TestProperties
    [PASS] PointFTest.TestSubtraction
    [PASS] PointFTest.ToStringTest
PointFTest : 24 ms

PointTest
    [PASS] PointTest.AddTest
    [PASS] PointTest.AdditionTest
    [PASS] PointTest.CeilingTest
    [PASS] PointTest.ConstructorNegativeLocationTest
    [PASS] PointTest.ConstructorTest
    [PASS] PointTest.EqualityOpTest
    [PASS] PointTest.EqualsTest
    [PASS] PointTest.GetHashCodeTest
    [PASS] PointTest.InequalityOpTest
    [PASS] PointTest.NullTest
    [PASS] PointTest.OffsetTest
    [PASS] PointTest.OffsetTestPoint
    [PASS] PointTest.Point2PointFTest
    [PASS] PointTest.Point2SizeTest
    [PASS] PointTest.PropertyTest
    [PASS] PointTest.RoundTest
    [PASS] PointTest.SubtractTest
    [PASS] PointTest.SubtractionTest
    [PASS] PointTest.ToStringTest
    [PASS] PointTest.TruncateTest
PointTest : 4 ms

SizeFTest
    [PASS] SizeFTest.AddTest
    [PASS] SizeFTest.GetHashCodeTest
    [PASS] SizeFTest.SubtractTest
    [PASS] SizeFTest.Test2PointF
    [PASS] SizeFTest.Test2Size
    [PASS] SizeFTest.TestAddition
    [PASS] SizeFTest.TestConstructors
    [PASS] SizeFTest.TestEmptyField
    [PASS] SizeFTest.TestEqualityOp
    [PASS] SizeFTest.TestEquals
    [PASS] SizeFTest.TestInequalityOp
    [PASS] SizeFTest.TestProperties
    [PASS] SizeFTest.TestSizeF2PointF
    [PASS] SizeFTest.TestSubtraction
    [PASS] SizeFTest.ToStringTest
SizeFTest : 3 ms

SizeTest
    [PASS] SizeTest.AddTest
    [PASS] SizeTest.GetHashCodeTest
    [PASS] SizeTest.SubtractTest
    [PASS] SizeTest.TestAddition
    [PASS] SizeTest.TestCeiling
    [PASS] SizeTest.TestConstructors
    [PASS] SizeTest.TestEmptyField
    [PASS] SizeTest.TestEqualityOp
    [PASS] SizeTest.TestEquals
    [PASS] SizeTest.TestInequalityOp
    [PASS] SizeTest.TestProperties
    [PASS] SizeTest.TestRound
    [PASS] SizeTest.TestSize2Point
    [PASS] SizeTest.TestSize2SizeF
    [PASS] SizeTest.TestSubtraction
    [PASS] SizeTest.TestTruncate
    [PASS] SizeTest.ToStringTest
SizeTest : 3 ms

TestRectangle
    [PASS] TestRectangle.Contains
    [PASS] TestRectangle.ConvertFromRectangleF
    [PASS] TestRectangle.Empty
    [PASS] TestRectangle.FromTRLB
    [PASS] TestRectangle.GetContents
    [PASS] TestRectangle.GetHashCodeTest
    [PASS] TestRectangle.Inflate
    [PASS] TestRectangle.Intersect
    [PASS] TestRectangle.IntersectsWith
    [PASS] TestRectangle.IsEmpty
    [PASS] TestRectangle.Location
    [PASS] TestRectangle.NegativeHeight
    [PASS] TestRectangle.NegativeWidth
    [PASS] TestRectangle.Offset
    [PASS] TestRectangle.Operator_Equal
    [PASS] TestRectangle.Operator_NotEqual
    [PASS] TestRectangle.Size
    [PASS] TestRectangle.ToStringTest
    [PASS] TestRectangle.Union
TestRectangle : 13 ms

TestRectangleF
    [PASS] TestRectangleF.Contains
    [PASS] TestRectangleF.ContainsF
    [PASS] TestRectangleF.EdgeIntersection
    [PASS] TestRectangleF.Empty
    [PASS] TestRectangleF.GetContents
    [PASS] TestRectangleF.GetHashCodeTest
    [PASS] TestRectangleF.Inflate
    [PASS] TestRectangleF.Intersect
    [PASS] TestRectangleF.IntersectsWith
    [PASS] TestRectangleF.IsEmpty
    [PASS] TestRectangleF.Location
    [PASS] TestRectangleF.NegativeHeight
    [PASS] TestRectangleF.NegativeWidth
    [PASS] TestRectangleF.Offset
    [PASS] TestRectangleF.Operator_Equal
    [PASS] TestRectangleF.Operator_NotEqual
    [PASS] TestRectangleF.RectangleToRectangleF
    [PASS] TestRectangleF.Size
    [PASS] TestRectangleF.ToStringTest
    [PASS] TestRectangleF.Union
TestRectangleF : 5 ms

MessageHandlerTest

AcceptSslCertificatesServicePointManager
    [PASS] MessageHandlerTest.AcceptSslCertificatesServicePointManager(System.Net.Http.HttpClientHandler)
    [PASS] MessageHandlerTest.AcceptSslCertificatesServicePointManager(System.Net.Http.NSUrlSessionHandler)
AcceptSslCertificatesServicePointManager : 643 ms
    [PASS] MessageHandlerTest.AssertDefaultValuesNSUrlSessionHandler

DnsFailure
    [PASS] MessageHandlerTest.DnsFailure(System.Net.Http.HttpClientHandler)
    [PASS] MessageHandlerTest.DnsFailure(System.Net.Http.CFNetworkHandler)
    [PASS] MessageHandlerTest.DnsFailure(System.Net.Http.NSUrlSessionHandler)
DnsFailure : 329 ms

RedirectionWithAuthorizationHeaders
    [PASS] MessageHandlerTest.RedirectionWithAuthorizationHeaders(System.Net.Http.HttpClientHandler)
    [PASS] MessageHandlerTest.RedirectionWithAuthorizationHeaders(System.Net.Http.CFNetworkHandler)
    [PASS] MessageHandlerTest.RedirectionWithAuthorizationHeaders(System.Net.Http.NSUrlSessionHandler)
RedirectionWithAuthorizationHeaders : 937 ms

RejectSslCertificatesServicePointManager
    [PASS] MessageHandlerTest.RejectSslCertificatesServicePointManager(System.Net.Http.HttpClientHandler)
    [PASS] MessageHandlerTest.RejectSslCertificatesServicePointManager(System.Net.Http.NSUrlSessionHandler)
RejectSslCertificatesServicePointManager : 220 ms
    [PASS] MessageHandlerTest.TestNSUrlSessionHandlerCookies
MessageHandlerTest : 2444 ms

AVAssetImageGeneratorTest
    [PASS] AVAssetImageGeneratorTest.AppliesPreferredTrackTransform
    [PASS] AVAssetImageGeneratorTest.CopyCGImageAtTime
    [PASS] AVAssetImageGeneratorTest.CopyCGImageAtTime_Invalid
    [PASS] AVAssetImageGeneratorTest.Defaults
    [PASS] AVAssetImageGeneratorTest.GenerateCGImagesAsynchronously
AVAssetImageGeneratorTest : 31 ms

AVAudioConverterPrimeInfoTest
    [PASS] AVAudioConverterPrimeInfoTest.AreEqualDiffType
    [PASS] AVAudioConverterPrimeInfoTest.AreEqualFalseTest
    [PASS] AVAudioConverterPrimeInfoTest.AreEqualTrueTest
    [PASS] AVAudioConverterPrimeInfoTest.ConstructorTest
AVAudioConverterPrimeInfoTest : 1 ms

AVBeatRangeTest
    [PASS] AVBeatRangeTest.AreEqualDiffType
    [PASS] AVBeatRangeTest.AreEqualFalseTest
    [PASS] AVBeatRangeTest.AreEqualTrueTest
    [PASS] AVBeatRangeTest.ConstructorTest
AVBeatRangeTest : 1 ms

AVCaptureWhiteBalanceGainsTest
    [PASS] AVCaptureWhiteBalanceGainsTest.AreEqualDiffType
    [PASS] AVCaptureWhiteBalanceGainsTest.AreEqualFalseTest
    [PASS] AVCaptureWhiteBalanceGainsTest.AreEqualTrueTest
    [PASS] AVCaptureWhiteBalanceGainsTest.ConstructorTest
AVCaptureWhiteBalanceGainsTest : 1 ms

AVDepthDataTests
    [IGNORED] AVDepthDataTests.AvailableDepthDataTypesTest : This test only runs on device.
          at TestRuntime.AssertDevice () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:144
          at MonoTouchFixtures.AVFoundation.AVDepthDataTests.AvailableDepthDataTypesTest () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/AVFoundation/AVDepthDataTests.cs:30
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
AVDepthDataTests : 10 ms

AVFoundationEnumTest
    [PASS] AVFoundationEnumTest.PromptStyle
AVFoundationEnumTest : 0 ms

AVStructTest
    [PASS] AVStructTest.StructSizeTest
AVStructTest : 0 ms

AudioPlayerTest
    [PASS] AudioPlayerTest.FromUrl
AudioPlayerTest : 16 ms

PlayerItemTest
    [PASS] PlayerItemTest.FromAssert_Null
PlayerItemTest : 1 ms

PlayerItemVideoOutputTest
    [PASS] PlayerItemVideoOutputTest.Ctor_CVPixelBufferAttributes
PlayerItemVideoOutputTest : 2 ms

QueuePlayerTest
    [PASS] QueuePlayerTest.NullAllowedTest
QueuePlayerTest : 3 ms

SpeechSynthesisVoiceTest
    [PASS] SpeechSynthesisVoiceTest.Default
    [PASS] SpeechSynthesisVoiceTest.Static
SpeechSynthesisVoiceTest : 3083 ms

UtilitiesTest
    [PASS] UtilitiesTest.AspectRatio
UtilitiesTest : 1 ms

VideoCompositionInstructionTest
    [PASS] VideoCompositionInstructionTest.Defaults
    [PASS] VideoCompositionInstructionTest.Seven
VideoCompositionInstructionTest : 1 ms

IdentifierManagerTest
    [PASS] IdentifierManagerTest.SharedManager
IdentifierManagerTest : 1 ms

AudioBalanceFadeTest
    [PASS] AudioBalanceFadeTest.GetBalanceFade
AudioBalanceFadeTest : 2 ms

AudioChannelLayoutTest
    [PASS] AudioChannelLayoutTest.FromAudioChannelBitmap
    [PASS] AudioChannelLayoutTest.FromAudioChannelLayoutTag
    [PASS] AudioChannelLayoutTest.GetChannelMap
    [PASS] AudioChannelLayoutTest.GetMatrixMixMap
    [PASS] AudioChannelLayoutTest.GetNumberOfChannels
    [PASS] AudioChannelLayoutTest.GetTagForChannelLayout
    [PASS] AudioChannelLayoutTest.GetTagsForNumberOfChannels
    [PASS] AudioChannelLayoutTest.Validate
AudioChannelLayoutTest : 2 ms

AudioFileGlobalInfoTest
    [PASS] AudioFileGlobalInfoTest.Properties
AudioFileGlobalInfoTest : 8 ms

AudioFileStreamTest
    [PASS] AudioFileStreamTest.CafNoData
    [PASS] AudioFileStreamTest.FourCC
    [PASS] AudioFileStreamTest.UndocumentedFourCC
AudioFileStreamTest : 4 ms

AudioFileTest
    [PASS] AudioFileTest.ReadTest
AudioFileTest : 3 ms

AudioFormatAvailabilityTest
    [PASS] AudioFormatAvailabilityTest.GetDecoders
    [PASS] AudioFormatAvailabilityTest.GetEncoders
AudioFormatAvailabilityTest : 1 ms

AudioFormatTest
    [PASS] AudioFormatTest.GetFirstPlayableFormat
AudioFormatTest : 1 ms

AudioQueueTest
    [PASS] AudioQueueTest.ChannelAssignments
    [PASS] AudioQueueTest.InvalidAudioBasicDescription
    [IGNORED] AudioQueueTest.ProcessingTap : Fails on some machines with undefined error code 5
    [PASS] AudioQueueTest.Properties
AudioQueueTest : 42 ms

AudioStreamBasicDescriptionTest
    [PASS] AudioStreamBasicDescriptionTest.CreateLinearPCM
    [PASS] AudioStreamBasicDescriptionTest.GetFormatInfo
    [PASS] AudioStreamBasicDescriptionTest.VBR
AudioStreamBasicDescriptionTest : 1 ms

FourCCTests
    [PASS] FourCCTests.AudioFilePropertyTest
    [PASS] FourCCTests.AudioFileStreamPropertyTest
    [PASS] FourCCTests.AudioFormatTypeTest
    [PASS] FourCCTests.AudioQueuePropertyTest
    [PASS] FourCCTests.AudioQueueTimePitchAlgorithmtest
    [PASS] FourCCTests.MusicSequenceFileTypeIDTest
    [PASS] FourCCTests.MusicSequenceTypeTest
FourCCTests : 1 ms

MusicSequenceTest
    [PASS] MusicSequenceTest.Defaults
    [PASS] MusicSequenceTest.SMPTEResolution
MusicSequenceTest : 6 ms

SoundBankTest
    [PASS] SoundBankTest.GetInstrumentInfo
    [PASS] SoundBankTest.GetInstrumentInfo_DLS_SimOnly
    [PASS] SoundBankTest.GetName
    [PASS] SoundBankTest.GetName_DLS_SimOnly
SoundBankTest : 13 ms

SystemSoundTest
    [PASS] SystemSoundTest.DisposeTest
    [IGNORED] SystemSoundTest.FromFile : PlaySystemSound doesn't work in the simulator
          at MonoTouchFixtures.AudioToolbox.SystemSoundTest.FromFile () [0x00022] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/AudioToolbox/SystemSoundTest.cs:45
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] SystemSoundTest.Properties
    [PASS] SystemSoundTest.TestCallbackPlayAlert
    [PASS] SystemSoundTest.TestCallbackPlaySystem
SystemSoundTest : 633 ms

AUAudioUnitFactoryTest
    [PASS] AUAudioUnitFactoryTest.CreateAudioUnit
AUAudioUnitFactoryTest : 2 ms

AUGraphTest
    [PASS] AUGraphTest.BasicOperations
    [PASS] AUGraphTest.Connections
    [PASS] AUGraphTest.CreateTest
    [PASS] AUGraphTest.GetNativeTest
AUGraphTest : 11 ms

AudioUnitTest
    [PASS] AudioUnitTest.DisposeMethodTest
    [PASS] AudioUnitTest.GetElementCount
AudioUnitTest : 2 ms

ExtAudioFileTest
    [PASS] ExtAudioFileTest.ClientDataFormat
    [PASS] ExtAudioFileTest.OpenCFUrlTest
    [PASS] ExtAudioFileTest.OpenNSUrlTest
    [PASS] ExtAudioFileTest.WrapAudioFileID
ExtAudioFileTest : 2 ms

BGTaskSchedulerTest
    [IGNORED] BGTaskSchedulerTest.SubmitTaskRequestTest : This test only runs on device.
          at TestRuntime.AssertDevice () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:144
          at MonoTouchFixtures.BackgroundTasks.BGTaskSchedulerTest.SubmitTaskRequestTest () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/BackgroundTasks/BGTaskSchedulerTest.cs:53
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
BGTaskSchedulerTest : 0 ms

CategoryTest
    [PASS] CategoryTest.Instance
    [IGNORED] CategoryTest.NavigationControllerOverride : This test is disabled on TVOS.
          at TestRuntime.IgnoreOnTVOS () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:694
          at MonoTouchFixtures.CategoryTest.NavigationControllerOverride () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/ObjCRuntime/CategoryTest.cs:123
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] CategoryTest.Static
CategoryTest : 3 ms

CKDiscoverUserInfosOperationTest
    [PASS] CKDiscoverUserInfosOperationTest.TestCompletedSetter
CKDiscoverUserInfosOperationTest : 4 ms

CKFetchNotificationChangesOperationTest
    [PASS] CKFetchNotificationChangesOperationTest.Default
    [PASS] CKFetchNotificationChangesOperationTest.TestCompletedSetter
    [PASS] CKFetchNotificationChangesOperationTest.TestNotificationChangedSetter
CKFetchNotificationChangesOperationTest : 2 ms

CKFetchRecordChangesOperationTest
    [PASS] CKFetchRecordChangesOperationTest.TestAllChangesReported
    [PASS] CKFetchRecordChangesOperationTest.TestRecordChangedSetter
    [PASS] CKFetchRecordChangesOperationTest.TestRecordDeletedSetter
CKFetchRecordChangesOperationTest : 3 ms

CKFetchRecordZonesOperationTest
    [PASS] CKFetchRecordZonesOperationTest.TestCompletedSetter
CKFetchRecordZonesOperationTest : 1 ms

CKFetchRecordsOperationTest
    [PASS] CKFetchRecordsOperationTest.PerRecordCompletionSetter
    [PASS] CKFetchRecordsOperationTest.PerRecordProgressSetter
    [PASS] CKFetchRecordsOperationTest.TestCompletedSetter
CKFetchRecordsOperationTest : 2 ms

CKFetchSubscriptionsOperationTest
    [PASS] CKFetchSubscriptionsOperationTest.TestCompletedSetter
CKFetchSubscriptionsOperationTest : 1 ms

CKMarkNotificationsReadOperationTest
    [PASS] CKMarkNotificationsReadOperationTest.TestCompletedSetter
CKMarkNotificationsReadOperationTest : 1 ms

CKModifyBadgeOperationTest
    [PASS] CKModifyBadgeOperationTest.Default
    [PASS] CKModifyBadgeOperationTest.TestCompletedSetter
CKModifyBadgeOperationTest : 1 ms

CKModifyRecordZonesOperationTest
    [PASS] CKModifyRecordZonesOperationTest.Default
    [PASS] CKModifyRecordZonesOperationTest.TestCompletedSetter
CKModifyRecordZonesOperationTest : 1 ms

CKModifyRecordsOperationTest
    [PASS] CKModifyRecordsOperationTest.Default
    [PASS] CKModifyRecordsOperationTest.PerRecordCompletionSetter
    [PASS] CKModifyRecordsOperationTest.PerRecordProgressSetter
    [PASS] CKModifyRecordsOperationTest.TestCompletedSetter
CKModifyRecordsOperationTest : 3 ms

CKModifySubscriptionsOperationTest
    [PASS] CKModifySubscriptionsOperationTest.TestCompletedSetter
CKModifySubscriptionsOperationTest : 1 ms

CKQueryOperationTest
    [PASS] CKQueryOperationTest.TestCompletedSetter
    [PASS] CKQueryOperationTest.TestRecordFetchedSetter
CKQueryOperationTest : 2 ms

CKUserIdentityLookupInfoTest
    [PASS] CKUserIdentityLookupInfoTest.TestFromEmail
    [PASS] CKUserIdentityLookupInfoTest.TestFromPhoneNumber
    [PASS] CKUserIdentityLookupInfoTest.TestFromRecordID
    [PASS] CKUserIdentityLookupInfoTest.TestGetLookupInfosWithEmails
    [PASS] CKUserIdentityLookupInfoTest.TestGetLookupInfosWithPhoneNumbers
    [PASS] CKUserIdentityLookupInfoTest.TestGetLookupInfosWithRecordIds
CKUserIdentityLookupInfoTest : 2 ms

DeflateStreamTest
    [PASS] DeflateStreamTest.Bug19313
    [PASS] DeflateStreamTest.CheckClosedFlush
    [PASS] DeflateStreamTest.CheckClosedRead

CheckCompressDecompress
    [PASS] DeflateStreamTest.CheckCompressDecompress(LZ4)
    [PASS] DeflateStreamTest.CheckCompressDecompress(Lzfse)
    [PASS] DeflateStreamTest.CheckCompressDecompress(Lzma)
    [PASS] DeflateStreamTest.CheckCompressDecompress(Zlib)
CheckCompressDecompress : 18 ms
    [PASS] DeflateStreamTest.CheckCompressingRead
    [PASS] DeflateStreamTest.CheckDecompress
    [PASS] DeflateStreamTest.CheckGetCanReadProp
    [PASS] DeflateStreamTest.CheckGetCanSeekProp
    [PASS] DeflateStreamTest.CheckGetCanWriteProp
    [PASS] DeflateStreamTest.CheckGetLengthProp
    [PASS] DeflateStreamTest.CheckGetPositionProp
    [PASS] DeflateStreamTest.CheckNullRead
    [PASS] DeflateStreamTest.CheckRangeRead
    [PASS] DeflateStreamTest.CheckSeek
    [PASS] DeflateStreamTest.CheckSetLength
    [PASS] DeflateStreamTest.CheckSetLengthProp
    [PASS] DeflateStreamTest.Constructor_InvalidCompressionMode
    [PASS] DeflateStreamTest.Constructor_Null
    [PASS] DeflateStreamTest.DisposeTest

JunkAtTheEnd
    [PASS] DeflateStreamTest.JunkAtTheEnd(LZ4)
    [PASS] DeflateStreamTest.JunkAtTheEnd(Lzfse)
    [PASS] DeflateStreamTest.JunkAtTheEnd(Lzma)
    [PASS] DeflateStreamTest.JunkAtTheEnd(Zlib)
JunkAtTheEnd : 5 ms
DeflateStreamTest : 33 ms

ThoroughCompressionStreamTest

TestDecodeRealFile
    [PASS] ThoroughCompressionStreamTest.TestDecodeRealFile(LZ4,"compressed_lz4")
    [PASS] ThoroughCompressionStreamTest.TestDecodeRealFile(Lzfse,"compressed_lze")
    [PASS] ThoroughCompressionStreamTest.TestDecodeRealFile(Lzma,"compressed_lzma")
    [PASS] ThoroughCompressionStreamTest.TestDecodeRealFile(Zlib,"compressed_zip")
TestDecodeRealFile : 8 ms
ThoroughCompressionStreamTest : 8 ms

ConfigTest
    [PASS] ConfigTest.Existence
ConfigTest : 1 ms

CATextLayerTests
    [PASS] CATextLayerTests.CATextLayerAlignmentModeTest
    [PASS] CATextLayerTests.CATextLayerTruncationModeTest
CATextLayerTests : 3 ms

EmitterBehaviorTest
EmitterBehaviorTest : 0 ms

EmitterCellTest
    [PASS] EmitterCellTest.XEmitterCellTest
EmitterCellTest : 2 ms

LayerTest
    [PASS] LayerTest.AddAnimation
    [PASS] LayerTest.CAActionTest
    [PASS] LayerTest.ConvertPoint
    [PASS] LayerTest.ConvertRect
    [PASS] LayerTest.ConvertTime
    [PASS] LayerTest.Mask
    [PASS] LayerTest.TestBug26532
    [PASS] LayerTest.TestCALayerDelegateDispose
LayerTest : 201 ms

ShapeLayerTest
    [PASS] ShapeLayerTest.NullableProperties
ShapeLayerTest : 2 ms

TransactionTest
    [PASS] TransactionTest.AnimationTimingFunction_Null
    [PASS] TransactionTest.CompletionBlock_Null
TransactionTest : 1 ms

CBCentralManagerTest
    [PASS] CBCentralManagerTest.Constructors
    [INCONCLUSIVE] CBCentralManagerTest.ScanForPeripherals : Bluetooth is off and therefore the test cannot be ran. State == Unsupported.
          at MonoTouchFixtures.CoreBluetooth.CBCentralManagerTest.ScanForPeripherals () [0x00055] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/CoreBluetooth/CentralManagerTest.cs:125
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
CBCentralManagerTest : 5 ms

CBPeerTest
    [PASS] CBPeerTest.Constructor
CBPeerTest : 0 ms

ErrorTest
    [PASS] ErrorTest.AttErrorDomain
    [PASS] ErrorTest.ErrorDomain
ErrorTest : 1 ms

PeripheralScanningOptionsTest
    [PASS] PeripheralScanningOptionsTest.AllowDuplicatesKey_False
    [PASS] PeripheralScanningOptionsTest.AllowDuplicatesKey_True
    [PASS] PeripheralScanningOptionsTest.Defaults
PeripheralScanningOptionsTest : 1 ms

UuidTest
    [PASS] UuidTest.Equality_FullRandomEquals
    [PASS] UuidTest.Equality_FullRandomNotEqual
    [PASS] UuidTest.Equality_Null
    [PASS] UuidTest.Equality_PartialEquals
    [PASS] UuidTest.Equality_PartialEqualsFull
    [PASS] UuidTest.Equality_PartialsOfDifferentSizeNotEqual
    [PASS] UuidTest.Roundtrip_128bits
    [PASS] UuidTest.Roundtrip_16bits
UuidTest : 5 ms

AttributeDescription
    [PASS] AttributeDescription.DefaultValue
    [PASS] AttributeDescription.GetSetRenamingIdentifier
    [PASS] AttributeDescription.WeakFramework
AttributeDescription : 1 ms

ExpressionDescriptionTest
    [PASS] ExpressionDescriptionTest.GetSetExpression
    [PASS] ExpressionDescriptionTest.GetSetResultType
    [PASS] ExpressionDescriptionTest.WeakFramework
ExpressionDescriptionTest : 1 ms

FetchRequestExpressionTest
    [PASS] FetchRequestExpressionTest.GetContext
    [PASS] FetchRequestExpressionTest.GetIsCountOnly
    [PASS] FetchRequestExpressionTest.GetRequest
    [PASS] FetchRequestExpressionTest.WeakFramework
FetchRequestExpressionTest : 1 ms

FetchRequestTest
    [PASS] FetchRequestTest.CtorString
    [PASS] FetchRequestTest.DefaultValues
    [PASS] FetchRequestTest.SettersNull
FetchRequestTest : 3 ms

FetchedResultsControllerTest
    [PASS] FetchedResultsControllerTest.Default
    [PASS] FetchedResultsControllerTest.PerformFetch_Minimal
    [PASS] FetchedResultsControllerTest.Sections
FetchedResultsControllerTest : 12 ms

ManagedObjectContextTest
    [PASS] ManagedObjectContextTest.Default
    [PASS] ManagedObjectContextTest.Main
    [PASS] ManagedObjectContextTest.PerformAndWait_Null
    [PASS] ManagedObjectContextTest.Perform_Null
    [PASS] ManagedObjectContextTest.UndoManager_Null
ManagedObjectContextTest : 4 ms

ManagedObjectModelTest
    [PASS] ManagedObjectModelTest.IsConfiguration_Null
ManagedObjectModelTest : 1 ms

NSQueryGenerationTokenTest
    [PASS] NSQueryGenerationTokenTest.EncodeWithCoderTest
NSQueryGenerationTokenTest : 2 ms

PropertyDescriptionTest
    [PASS] PropertyDescriptionTest.GetSetName
    [PASS] PropertyDescriptionTest.GetSetOpcional
    [PASS] PropertyDescriptionTest.GetSetRenamingIdentifier
    [PASS] PropertyDescriptionTest.GetSetTransient
    [PASS] PropertyDescriptionTest.WeakFramework
PropertyDescriptionTest : 1 ms

BundleTest
    [PASS] BundleTest.TestArchitectures

TestAuxiliaryExecutableUrlNull
    [PASS] BundleTest.TestAuxiliaryExecutableUrlNull("")
    [PASS] BundleTest.TestAuxiliaryExecutableUrlNull(null)
TestAuxiliaryExecutableUrlNull : 0 ms
    [PASS] BundleTest.TestBuiltInPlugInsUrl
    [PASS] BundleTest.TestDevelopmentRegion
    [PASS] BundleTest.TestExecutableUrl
    [PASS] BundleTest.TestGetAll
    [PASS] BundleTest.TestGetAuxiliaryExecutableUrlNull
    [PASS] BundleTest.TestGetBundleId
    [PASS] BundleTest.TestGetBundleIdMissing

TestGetBundleIdNull
    [PASS] BundleTest.TestGetBundleIdNull("")
    [PASS] BundleTest.TestGetBundleIdNull(null)
TestGetBundleIdNull : 0 ms
    [PASS] BundleTest.TestGetInfoDictionaryNull
    [PASS] BundleTest.TestGetLocalizationsForPreferencesNullLocalArray
    [PASS] BundleTest.TestGetLocalizationsForPreferencesNullPrefArray
    [PASS] BundleTest.TestGetMain
    [PASS] BundleTest.TestLocalizations
    [PASS] BundleTest.TestLocalizationsNull

TestLocalizedStringNullKey
    [PASS] BundleTest.TestLocalizedStringNullKey("")
    [PASS] BundleTest.TestLocalizedStringNullKey(null)
TestLocalizedStringNullKey : 0 ms

TestLocalizedStringNullTable
    [PASS] BundleTest.TestLocalizedStringNullTable("")
    [PASS] BundleTest.TestLocalizedStringNullTable(null)
TestLocalizedStringNullTable : 0 ms
    [PASS] BundleTest.TestPreferredLocalizations
    [PASS] BundleTest.TestPreferredLocalizationsNull
    [PASS] BundleTest.TestPrivateFrameworksUrl

TestResourceUrlLocalNameNullLocale
    [PASS] BundleTest.TestResourceUrlLocalNameNullLocale("")
    [PASS] BundleTest.TestResourceUrlLocalNameNullLocale(null)
TestResourceUrlLocalNameNullLocale : 0 ms

TestResourceUrlLocalNameNullName
    [PASS] BundleTest.TestResourceUrlLocalNameNullName("")
    [PASS] BundleTest.TestResourceUrlLocalNameNullName(null)
TestResourceUrlLocalNameNullName : 0 ms

TestResourceUrlLocalNameNullType
    [PASS] BundleTest.TestResourceUrlLocalNameNullType("")
    [PASS] BundleTest.TestResourceUrlLocalNameNullType(null)
TestResourceUrlLocalNameNullType : 0 ms

TestResourceUrlNullName
    [PASS] BundleTest.TestResourceUrlNullName("")
    [PASS] BundleTest.TestResourceUrlNullName(null)
TestResourceUrlNullName : 0 ms

TestResourceUrlNullType
    [PASS] BundleTest.TestResourceUrlNullType("")
    [PASS] BundleTest.TestResourceUrlNullType(null)
TestResourceUrlNullType : 0 ms

TestResourceUrlsLocalNameNullLocale
    [PASS] BundleTest.TestResourceUrlsLocalNameNullLocale("")
    [PASS] BundleTest.TestResourceUrlsLocalNameNullLocale(null)
TestResourceUrlsLocalNameNullLocale : 0 ms

TestResourceUrlsLocalNameNullType
    [PASS] BundleTest.TestResourceUrlsLocalNameNullType("")
    [PASS] BundleTest.TestResourceUrlsLocalNameNullType(null)
TestResourceUrlsLocalNameNullType : 0 ms

TestResourceUrlsNullType
    [PASS] BundleTest.TestResourceUrlsNullType("")
    [PASS] BundleTest.TestResourceUrlsNullType(null)
TestResourceUrlsNullType : 0 ms
    [PASS] BundleTest.TestResourcesDirectoryUrl
    [PASS] BundleTest.TestSharedFrameworksUrl
    [PASS] BundleTest.TestSharedSupportUrl
    [PASS] BundleTest.TestStaticResourceUrlNull

TestStaticResourceUrlNullName
    [PASS] BundleTest.TestStaticResourceUrlNullName("")
    [PASS] BundleTest.TestStaticResourceUrlNullName(null)
TestStaticResourceUrlNullName : 0 ms

TestStaticResourceUrlNullType
    [PASS] BundleTest.TestStaticResourceUrlNullType("")
    [PASS] BundleTest.TestStaticResourceUrlNullType(null)
TestStaticResourceUrlNullType : 0 ms
    [PASS] BundleTest.TestStaticResourceUrlsNullType

TestStaticResourceUrlsNullType
    [PASS] BundleTest.TestStaticResourceUrlsNullType("")
    [PASS] BundleTest.TestStaticResourceUrlsNullType(null)
TestStaticResourceUrlsNullType : 0 ms
    [PASS] BundleTest.TestSupportFilesDirectoryUrl
    [PASS] BundleTest.TestUrl
BundleTest : 188 ms

CFNotificationCenterTest
    [PASS] CFNotificationCenterTest.TestNullNameAndObserver
    [PASS] CFNotificationCenterTest.TestObservers
    [PASS] CFNotificationCenterTest.TestObservers2
CFNotificationCenterTest : 4 ms

CFPropertyListTests
    [PASS] CFPropertyListTests.AsData
    [PASS] CFPropertyListTests.Constructors
    [PASS] CFPropertyListTests.CreateFromData
    [PASS] CFPropertyListTests.DeepCopy
    [PASS] CFPropertyListTests.IsValid
    [PASS] CFPropertyListTests.Value
CFPropertyListTests : 7 ms

CFUrlTest
    [PASS] CFUrlTest.FromFile_Null
    [PASS] CFUrlTest.FromUrlString_Null
    [PASS] CFUrlTest.RetainCountFromFile
    [PASS] CFUrlTest.RetainCountFromUrl
    [PASS] CFUrlTest.ToString_
CFUrlTest : 1 ms

DispatchBlockTest
    [PASS] DispatchBlockTest.Cancellation
    [PASS] DispatchBlockTest.Constructors
    [PASS] DispatchBlockTest.Create
    [PASS] DispatchBlockTest.ExplicitActionConversionInvoke
    [PASS] DispatchBlockTest.Invoke
    [PASS] DispatchBlockTest.NotifyAction
    [PASS] DispatchBlockTest.NotifyDispatchBlock
    [PASS] DispatchBlockTest.Wait_DispatchTime
    [PASS] DispatchBlockTest.Wait_TimeSpan
DispatchBlockTest : 434 ms

DispatchGroupTest
    [PASS] DispatchGroupTest.EnterLeaveTest
    [PASS] DispatchGroupTest.NotifyWithAction
    [PASS] DispatchGroupTest.NotifyWithDispatchBlock
    [PASS] DispatchGroupTest.WaitTest
DispatchGroupTest : 223 ms

DispatchQueueTests
    [PASS] DispatchQueueTests.CtorWithAttributes
    [PASS] DispatchQueueTests.DispatchAsync
    [PASS] DispatchQueueTests.DispatchBarrierAsync
    [PASS] DispatchQueueTests.DispatchBarrierSync
    [PASS] DispatchQueueTests.DispatchSync
    [PASS] DispatchQueueTests.MainQueue
    [PASS] DispatchQueueTests.Specific
DispatchQueueTests : 223 ms

DispatchTests
    [PASS] DispatchTests.Current
    [PASS] DispatchTests.Default
    [PASS] DispatchTests.EverAfter
    [PASS] DispatchTests.EverAfterQualityOfService
    [PASS] DispatchTests.GetGlobalQueue_Priority
    [PASS] DispatchTests.GetGlobalQueue_QualityOfService
    [PASS] DispatchTests.Main
    [PASS] DispatchTests.MainQueueDispatch
    [PASS] DispatchTests.MainQueueDispatchQualityOfService
    [PASS] DispatchTests.NeverTooLate
    [PASS] DispatchTests.SetTargetQueue
DispatchTests : 3012 ms

MutableString
    [PASS] MutableString.AppendString
    [PASS] MutableString.AppendString_RtL
    [PASS] MutableString.AppendString_Unicode
    [PASS] MutableString.CreateCFString1
    [PASS] MutableString.CreateCFString2
    [PASS] MutableString.CreateString0
    [PASS] MutableString.CreateString1
    [PASS] MutableString.CreateString2
    [PASS] MutableString.TransformICU
    [PASS] MutableString.TransformNoRangeEnum
    [PASS] MutableString.TransformNull
    [PASS] MutableString.TransformRangeEnum
MutableString : 14 ms

NetworkTest
NetworkTest : 0 ms

NotificationCenterTest
    [PASS] NotificationCenterTest.Static
NotificationCenterTest : 0 ms

ProxyTest
    [PASS] ProxyTest.Fields
    [PASS] ProxyTest.TestPACParsingAsync
    [IGNORED] ProxyTest.TestPACParsingAsyncNoProxy : CI bots might have proxies setup and will mean that the test will fail when trying to assert they are empty.
          at TestRuntime.IgnoreInCI (System.String message) [0x0001e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:114
          at MonoTouchFixtures.CoreFoundation.ProxyTest.TestPACParsingAsyncNoProxy () [0x00007] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/CoreFoundation/ProxyTest.cs:200
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] ProxyTest.TestPACParsingScript
    [PASS] ProxyTest.TestPACParsingScriptError
    [PASS] ProxyTest.TestPACParsingScriptNoProxy
    [PASS] ProxyTest.TestPACParsingUrl
    [PASS] ProxyTest.TestPACParsingUrlAsync
    [IGNORED] ProxyTest.TestPACParsingUrlAsyncNoProxy : CI bots might have proxies setup and will mean that the test will fail when trying to assert they are empty.
          at TestRuntime.IgnoreInCI (System.String message) [0x0001e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:114
          at MonoTouchFixtures.CoreFoundation.ProxyTest.TestPACParsingUrlAsyncNoProxy () [0x00007] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/CoreFoundation/ProxyTest.cs:297
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] ProxyTest.TestPacParsingUrlNoProxy
ProxyTest : 264 ms

StringTest
    [PASS] StringTest.Null
    [PASS] StringTest.ToString_
StringTest : 0 ms

AffineTransformTest
    [PASS] AffineTransformTest.Ctor
    [PASS] AffineTransformTest.Invert
    [PASS] AffineTransformTest.IsIdentity
    [PASS] AffineTransformTest.MakeIdentity
    [PASS] AffineTransformTest.MakeRotation
    [PASS] AffineTransformTest.MakeScale
    [PASS] AffineTransformTest.MakeTranslation
    [PASS] AffineTransformTest.Multiply
    [PASS] AffineTransformTest.NSValueRoundtrip
    [PASS] AffineTransformTest.Rotate
    [PASS] AffineTransformTest.Scale
    [PASS] AffineTransformTest.StaticMultiply
    [PASS] AffineTransformTest.StaticRotate
    [PASS] AffineTransformTest.StaticScale
    [PASS] AffineTransformTest.StaticTranslate
    [PASS] AffineTransformTest.TransformPoint
    [PASS] AffineTransformTest.TransformRect
    [PASS] AffineTransformTest.Translate
AffineTransformTest : 11 ms

BitmapContextTest
    [PASS] BitmapContextTest.Ctor_CGBitmapFlags
    [PASS] BitmapContextTest.Ctor_CGColorSpace_Null
    [PASS] BitmapContextTest.Ctor_CGImageAlphaInfo
    [PASS] BitmapContextTest.ToImage
BitmapContextTest : 5 ms

CGImageTest
    [PASS] CGImageTest.FromPNG
CGImageTest : 4 ms

ColorConversionInfoTest
    [PASS] ColorConversionInfoTest.CGColorSpace_CGColorSpace_CGColorConversionOptions
    [PASS] ColorConversionInfoTest.CGColorSpace_CGColorSpace_NSDictionary
    [PASS] ColorConversionInfoTest.CreateDual
    [PASS] ColorConversionInfoTest.CreateMax
    [PASS] ColorConversionInfoTest.CreateNone
    [PASS] ColorConversionInfoTest.CreateSimple
    [PASS] ColorConversionInfoTest.CreateSimple_DeviceColorSpace
    [PASS] ColorConversionInfoTest.CreateSimple_GetINativeObject
    [PASS] ColorConversionInfoTest.CreateSingle
    [PASS] ColorConversionInfoTest.CreateTooMany
ColorConversionInfoTest : 6 ms

ColorSpaceTest
    [PASS] ColorSpaceTest.CalibratedGray
    [PASS] ColorSpaceTest.CalibratedRGB
    [PASS] ColorSpaceTest.CreateDeviceCMYK
    [PASS] ColorSpaceTest.CreateDeviceGray
    [PASS] ColorSpaceTest.CreateDeviceRGB
    [PASS] ColorSpaceTest.CreateExtendedSrgb
    [PASS] ColorSpaceTest.CreateICCProfile
    [PASS] ColorSpaceTest.CreateIccData
    [PASS] ColorSpaceTest.CreateIndexed
    [PASS] ColorSpaceTest.Disposed
    [PASS] ColorSpaceTest.Indexed_Provider
    [PASS] ColorSpaceTest.Indexed_UIImage
    [PASS] ColorSpaceTest.IsHdr
    [PASS] ColorSpaceTest.Lab
ColorSpaceTest : 14 ms

ColorTest
    [PASS] ColorTest.CreateGenericGrayGamma2_2
    [PASS] ColorTest.CreateSrgb
ColorTest : 2 ms

ContextTest
    [PASS] ContextTest.ResetClip
    [PASS] ContextTest.SetLineDash
ContextTest : 2 ms

DataConsumerTest
    [PASS] DataConsumerTest.Create_Nullable
DataConsumerTest : 0 ms

DataProviderTest
    [PASS] DataProviderTest.Create_Nullable
    [PASS] DataProviderTest.Create_ReleaseCallback
    [PASS] DataProviderTest.FromPNG
DataProviderTest : 2 ms

FontTest
    [PASS] FontTest.CreateFromProvider
    [PASS] FontTest.CreateWithFontName
    [PASS] FontTest.GetGlyphWithGlyphName
    [PASS] FontTest.Nullable
FontTest : 1 ms

FunctionTest
    [PASS] FunctionTest.CoreGraphicsStrongDictionary
    [PASS] FunctionTest.Test
FunctionTest : 112 ms

GeometryTest
    [PASS] GeometryTest.Infinite
    [PASS] GeometryTest.Null
    [PASS] GeometryTest.Zero
GeometryTest : 1 ms

GradientTest
    [PASS] GradientTest.Colorspace_Null
    [PASS] GradientTest.Colorspaces
    [PASS] GradientTest.GradientDrawingOptions
    [PASS] GradientTest.Nullable
GradientTest : 3 ms

PDFArrayTest
    [PASS] PDFArrayTest.InvalidHandle
PDFArrayTest : 2 ms

PDFContentStreamTest
    [PASS] PDFContentStreamTest.FromPage
PDFContentStreamTest : 5 ms

PDFContextTest
    [IGNORED] PDFContextTest.Constructors : Crash (at least on simulator) with iOS 11.3 beta 1
          at MonoTouchFixtures.CoreGraphics.PDFContextTest.Constructors () [0x0000e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/CoreGraphics/PDFContextTest.cs:84
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] PDFContextTest.Context_Tag
    [PASS] PDFContextTest.Context_Tag_Strong
    [PASS] PDFContextTest.Context_Url
    [PASS] PDFContextTest.Context_Url_Rect
    [PASS] PDFContextTest.Context_Url_Rect_Info
PDFContextTest : 7 ms

PDFDocumentTest
    [PASS] PDFDocumentTest.DataProvider
    [PASS] PDFDocumentTest.FromFile
    [PASS] PDFDocumentTest.FromUrl
PDFDocumentTest : 28 ms

PDFInfoTest
    [IGNORED] PDFInfoTest.ToDictionary : Crash (at least on devices) with iOS 11.3 beta 1
          at MonoTouchFixtures.CoreGraphics.PDFInfoTest.ToDictionary () [0x0000e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/CoreGraphics/PDFInfoTest.cs:67
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] PDFInfoTest.ToDictionaryWithPermissions
PDFInfoTest : 2 ms

PDFObjectTest
    [PASS] PDFObjectTest.Zero
PDFObjectTest : 1 ms

PDFOperatorTableTest
    [PASS] PDFOperatorTableTest.Default
PDFOperatorTableTest : 0 ms

PDFScannerTest
    [PASS] PDFScannerTest.Tamarin
PDFScannerTest : 2 ms

PathTest
    [PASS] PathTest.AddArc
    [PASS] PathTest.AddArcToPoint
    [PASS] PathTest.AddCurveToPoint
    [PASS] PathTest.AddEllipseInRect
    [PASS] PathTest.AddLineToPoint
    [PASS] PathTest.AddLines
    [PASS] PathTest.AddPath
    [PASS] PathTest.AddQuadCurveToPoint
    [PASS] PathTest.AddRect
    [PASS] PathTest.AddRects
    [PASS] PathTest.AddRelativeArc
    [PASS] PathTest.Bug40230
    [PASS] PathTest.CopyByDashingPath_18764
    [PASS] PathTest.EllipseFromRect
    [PASS] PathTest.IncreaseRetainCountMakeMutable
    [PASS] PathTest.MoveToPoint
PathTest : 9 ms

PatternTest
    [PASS] PatternTest.DrawTest
PatternTest : 113 ms

PdfTagTypeTest
    [PASS] PdfTagTypeTest.EnumExtension
PdfTagTypeTest : 2 ms

RectTest
    [PASS] RectTest.Empty
    [PASS] RectTest.Infinite
    [PASS] RectTest.Inflate
    [PASS] RectTest.Null
RectTest : 1 ms

CIContextTest
    [PASS] CIContextTest.CreateRefCount
    [PASS] CIContextTest.FromContext_13983
    [PASS] CIContextTest.Render_Colorspace
CIContextTest : 20 ms

CIKernelTests
    [PASS] CIKernelTests.CIKernel_BasicTest
    [PASS] CIKernelTests.CIKernel_TestFromPrograms
CIKernelTests : 184 ms

CIVectorTest
    [PASS] CIVectorTest.CtorFloatArray
    [PASS] CIVectorTest.CtorFloatArrayCount
    [PASS] CIVectorTest.CtorInts
    [PASS] CIVectorTest.FromValues
CIVectorTest : 3 ms

DetectorTest
    [PASS] DetectorTest.EmptyOptions
    [PASS] DetectorTest.NullContext
DetectorTest : 6 ms

FilterTest
    [PASS] FilterTest.CIAttributedTextImageGenerator
    [PASS] FilterTest.CIBarcodeDescriptorTest
    [PASS] FilterTest.CIVectorArray
    [PASS] FilterTest.ColorSpace
    [PASS] FilterTest.CustomFilterTest
    [PASS] FilterTest.HighlightShadowAdjust
    [PASS] FilterTest.UnsupportedInputImage
FilterTest : 25 ms

ImageInitializationOptionsTest
    [PASS] ImageInitializationOptionsTest.ColorSpace
    [PASS] ImageInitializationOptionsTest.Defaults
    [PASS] ImageInitializationOptionsTest.WithMetadataDefaults
    [PASS] ImageInitializationOptionsTest.WithMetadataProperties
ImageInitializationOptionsTest : 4 ms

ImageTest
    [PASS] ImageTest.AreaHistogram
    [PASS] ImageTest.CIImageColorSpaceTest
    [PASS] ImageTest.EmptyImage
    [PASS] ImageTest.InitializationWithCustomMetadata
    [PASS] ImageTest.UIImageInterop
ImageTest : 8 ms

MLMultiArrayTest
    [PASS] MLMultiArrayTest.Ctors
    [PASS] MLMultiArrayTest.Indexers
MLMultiArrayTest : 8 ms

BlockBufferTest
    [PASS] BlockBufferTest.AccessDataBytesTest
    [PASS] BlockBufferTest.AppendMemoryBlockTest
    [PASS] BlockBufferTest.AppendMemoryBlockWithByteArrayTest
    [PASS] BlockBufferTest.AppendMemoryBlockWithManagedMemory
    [PASS] BlockBufferTest.CMBlockBufferCustomBlockSource
    [PASS] BlockBufferTest.CopyDataBytesTest
    [PASS] BlockBufferTest.CopyDataBytesUsingManagedArrayTest
    [PASS] BlockBufferTest.CreateEmpty
    [PASS] BlockBufferTest.FromMemoryBlockAndContiguousTest
    [PASS] BlockBufferTest.FromMemoryBlockWithByteArrayTest
    [PASS] BlockBufferTest.FromMemoryBlockWithManagedMemory
    [PASS] BlockBufferTest.GetDataPointerTest
    [PASS] BlockBufferTest.ReplaceDataBytesManagedTest
    [PASS] BlockBufferTest.ReplaceDataBytesTest
BlockBufferTest : 8 ms

CMClockOrTimebaseTest
    [PASS] CMClockOrTimebaseTest.RetainReleaseTest
CMClockOrTimebaseTest : 0 ms

CMClockTest
    [PASS] CMClockTest.CreateAudioClock
    [PASS] CMClockTest.HostTimeClock
CMClockTest : 1 ms

CMFormatDescriptionTest
    [PASS] CMFormatDescriptionTest.ClosedCaption
    [PASS] CMFormatDescriptionTest.H264ParameterSetsTest
    [PASS] CMFormatDescriptionTest.HevcParameterSetsTest
    [PASS] CMFormatDescriptionTest.VideoFormatDescriptionConstructors
CMFormatDescriptionTest : 4 ms

CMMemoryPoolTest
    [PASS] CMMemoryPoolTest.Ctor
    [PASS] CMMemoryPoolTest.CtorAgeOutPeriod
CMMemoryPoolTest : 2 ms

CMTimeRangeTests
    [PASS] CMTimeRangeTests.InvalidMappingFieldTest
    [PASS] CMTimeRangeTests.InvalidRangeFieldTest
    [PASS] CMTimeRangeTests.ZeroFieldTest
CMTimeRangeTests : 1 ms

CMTimeTests
    [PASS] CMTimeTests.CMTimeMappingFactoryMethods
    [PASS] CMTimeTests.CMTimeRangeConstants
    [PASS] CMTimeTests.CMTimeStrongDictionary
    [PASS] CMTimeTests.MethodsTest
    [PASS] CMTimeTests.MultiplyByRatio
    [PASS] CMTimeTests.PropertiesTest
CMTimeTests : 7 ms

CMTimebaseTest
    [PASS] CMTimebaseTest.AddTimer
    [PASS] CMTimebaseTest.CopyMasterTests
    [PASS] CMTimebaseTest.DefaultValues
    [PASS] CMTimebaseTest.GetMasterTests
    [PASS] CMTimebaseTest.SetAnchorTime
CMTimebaseTest : 4 ms

EnumTest
    [PASS] EnumTest.ClosedCaptionFormatType
    [PASS] EnumTest.MediaType
    [PASS] EnumTest.MetadataFormatType
    [PASS] EnumTest.MuxedStreamType
    [PASS] EnumTest.PixelFormat
    [PASS] EnumTest.SubtitleFormatType
    [PASS] EnumTest.TimeCodeFormatType
    [PASS] EnumTest.VideoCodecType
EnumTest : 1 ms

SampleBufferTest
    [PASS] SampleBufferTest.CallForEachSample
    [PASS] SampleBufferTest.CreateForImageBuffer
    [PASS] SampleBufferTest.CreateReady
    [PASS] SampleBufferTest.CreateReadyWithImageBuffer
    [PASS] SampleBufferTest.CreateReadyWithImageBuffer_ArrayValidations
    [PASS] SampleBufferTest.CreateReadyWithPacketDescriptions
    [PASS] SampleBufferTest.SetInvalidateCallback
    [PASS] SampleBufferTest.SetInvalidateCallback_Null
    [PASS] SampleBufferTest.SetInvalidateCallback_Replace
SampleBufferTest : 5 ms

MediaTimingFunctionTest
    [PASS] MediaTimingFunctionTest.Default
    [PASS] MediaTimingFunctionTest.EaseIn
    [PASS] MediaTimingFunctionTest.EaseInEaseOut
    [PASS] MediaTimingFunctionTest.EaseOut
    [PASS] MediaTimingFunctionTest.GetControlPoint
    [PASS] MediaTimingFunctionTest.Linear
MediaTimingFunctionTest : 4 ms

HttpMessageTest
    [PASS] HttpMessageTest.CreateEmptyFalse
    [PASS] HttpMessageTest.CreateEmptyTrue
    [PASS] HttpMessageTest.CreateRequest10
    [PASS] HttpMessageTest.CreateResponseAuth
HttpMessageTest : 110 ms

CTFontCollectionTest
    [PASS] CTFontCollectionTest.GetMatchingFontDescriptorsCollectionOptionsTest
    [PASS] CTFontCollectionTest.GetMatchingFontDescriptorsTest
CTFontCollectionTest : 16 ms

CTFrameTests
    [PASS] CTFrameTests.CTTypesetterCreateTest
    [PASS] CTFrameTests.GetPathTest
CTFrameTests : 2 ms

CTLineTests
    [PASS] CTLineTests.EnumerateCaretOffsets
    [PASS] CTLineTests.GetImageBounds
CTLineTests : 8 ms

CTParagraphStyleTests
    [PASS] CTParagraphStyleTests.StylePropertiesTest
CTParagraphStyleTests : 7 ms

FontDescriptorTest
    [PASS] FontDescriptorTest.FromAttributes
    [IGNORED] FontDescriptorTest.WithFeature : No font with ligatures are available on the platform
FontDescriptorTest : 3 ms

FontManagerTest
    [PASS] FontManagerTest.CreateFontDescriptor
    [PASS] FontManagerTest.CreateFontDescriptors
    [PASS] FontManagerTest.GetFontsMissing
    [PASS] FontManagerTest.GetFontsNullUrl
    [PASS] FontManagerTest.GetFontsPresent
    [PASS] FontManagerTest.RegisterFontDescriptors_NoCallback
    [PASS] FontManagerTest.RegisterFontDescriptors_Null
    [IGNORED] FontManagerTest.RegisterFontDescriptors_WithCallback : Fails on tvOS with undocumented error code 'The operation couldn’t be completed. (com.apple.CoreText.CTFontManagerErrorDomain error 500.'
    [PASS] FontManagerTest.RegisterFonts_NoCallback
    [PASS] FontManagerTest.RegisterFonts_Null
    [PASS] FontManagerTest.RegisterFonts_WithCallback
    [PASS] FontManagerTest.RegisterTTF
    [PASS] FontManagerTest.RegisterTTFs
    [PASS] FontManagerTest.UnregisterFontDescriptors_Null
    [PASS] FontManagerTest.UnregisterFonts_Null
FontManagerTest : 16 ms

FontTest
    [PASS] FontTest.CTFontCreateForString
    [PASS] FontTest.CTFontCreateForStringWithLanguage
    [PASS] FontTest.CTFontCreateWithFontDescriptorAndOptions
    [PASS] FontTest.CTFontCreateWithNameAndOptions
    [PASS] FontTest.GetCascadeList
    [PASS] FontTest.GetGlyphsForCharacters_35048
    [PASS] FontTest.GetLocalizedName
FontTest : 14 ms

GlyphInfoTest
    [PASS] GlyphInfoTest.GlyphInfo
GlyphInfoTest : 6 ms

RunTest
    [PASS] RunTest.CustomOps
    [PASS] RunTest.GetBaseAdvancesAndOrigins
    [PASS] RunTest.Runs
RunTest : 3 ms

StringAttributesTests
    [PASS] StringAttributesTests.BackgroundColor
    [PASS] StringAttributesTests.HorizontalInVerticalForms
    [PASS] StringAttributesTests.SimpleValuesSet
StringAttributesTests : 8 ms

CVImageBufferTests
    [PASS] CVImageBufferTests.CVImageBufferColorPrimariesTest
    [PASS] CVImageBufferTests.CVImageBufferTransferFunctionTest
    [PASS] CVImageBufferTests.CVImageBufferYCbCrMatrixTest
CVImageBufferTests : 3 ms

CVMetalTextureCacheTests
    [IGNORED] CVMetalTextureCacheTests.CVMetalTextureCacheCtorTest : This test only runs on device.
          at TestRuntime.AssertDevice () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:144
          at MonoTouchFixtures.CoreVideo.CVMetalTextureCacheTests.CVMetalTextureCacheCtorTest () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/CoreVideo/CVMetalTextureCacheTests.cs:29
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] CVMetalTextureCacheTests.FromDeviceTest : This test only runs on device.
          at TestRuntime.AssertDevice () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:144
          at MonoTouchFixtures.CoreVideo.CVMetalTextureCacheTests.FromDeviceTest () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/CoreVideo/CVMetalTextureCacheTests.cs:43
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
CVMetalTextureCacheTests : 2 ms

CoreVideoEnumTest
    [PASS] CoreVideoEnumTest.PixelFormatType
CoreVideoEnumTest : 1 ms

PixelBufferAttributesTest
    [PASS] PixelBufferAttributesTest.Defaults
    [PASS] PixelBufferAttributesTest.MemoryAllocator
PixelBufferAttributesTest : 1 ms

PixelBufferPoolTest
    [PASS] PixelBufferPoolTest.AllocationSettings_Threshold
PixelBufferPoolTest : 1 ms

PixelBufferTest
    [PASS] PixelBufferTest.CheckInvalidPtr
    [PASS] PixelBufferTest.CreateWithBytes
    [PASS] PixelBufferTest.CreateWithPlanarBytes
PixelBufferTest : 14 ms

PixelFormatDescriptionTest
    [PASS] PixelFormatDescriptionTest.AllTypes
    [PASS] PixelFormatDescriptionTest.Create
    [PASS] PixelFormatDescriptionTest.Register
PixelFormatDescriptionTest : 2 ms

AccessoryManagerTest
    [PASS] AccessoryManagerTest.Shared
    [PASS] AccessoryManagerTest.ShowBluetoothAccessoryPicker
AccessoryManagerTest : 3 ms

AA_NSStreamTest
    [PASS] AA_NSStreamTest.BoundPairTest
    [PASS] AA_NSStreamTest.ConnectToHost
    [PASS] AA_NSStreamTest.ConnectToPeer
AA_NSStreamTest : 9 ms

AttributedStringTest
    [PASS] AttributedStringTest.Attributes
    [PASS] AttributedStringTest.Fields
    [PASS] AttributedStringTest.IndirectNullDictionary
    [PASS] AttributedStringTest.InitWith
    [PASS] AttributedStringTest.MutableCopy
    [PASS] AttributedStringTest.NullDictionary
    [PASS] AttributedStringTest.UIKitAttachmentConveniences_New
AttributedStringTest : 8 ms

BlockOperationTest
    [PASS] BlockOperationTest.Add_Null
    [PASS] BlockOperationTest.Create_Null
    [PASS] BlockOperationTest.ExecutionBlocks
BlockOperationTest : 1 ms

BundleTest
    [PASS] BundleTest.AppStoreReceiptURL
    [PASS] BundleTest.GetLocalizedString
    [PASS] BundleTest.Localizations
    [PASS] BundleTest.LocalizedString
    [PASS] BundleTest.LocalizedString2
    [PASS] BundleTest.LocalizedString3
    [PASS] BundleTest.LocalizedString4
    [PASS] BundleTest.PreferredLocalizations
BundleTest : 4 ms

CachedUrlResponseTest
    [PASS] CachedUrlResponseTest.ConstructorTest
CachedUrlResponseTest : 1 ms

CalendarTest
    [PASS] CalendarTest.DateByAddingComponentsTest
    [PASS] CalendarTest.DateComponentsTest
    [PASS] CalendarTest.DateFromComponents
    [PASS] CalendarTest.GetAllCalendarIdentifiers
    [PASS] CalendarTest.TestAddingByComponents
    [PASS] CalendarTest.TestCalendarComparision
    [PASS] CalendarTest.TestCalendarComponents
    [PASS] CalendarTest.TestCalendarSymbols
    [PASS] CalendarTest.TestComponentsFromDateToDate
    [PASS] CalendarTest.TestComponentsInTimeZone
    [PASS] CalendarTest.TestEnumerateDates
    [PASS] CalendarTest.TestFindNextDate
    [PASS] CalendarTest.TestFindNextDateAfterDateMatching
    [PASS] CalendarTest.TestIsDateMethods
    [PASS] CalendarTest.TestMatchesComponents

TestMaximumRange
    [PASS] CalendarTest.TestMaximumRange(1,12,Month)
    [PASS] CalendarTest.TestMaximumRange(1,31,Day)
    [PASS] CalendarTest.TestMaximumRange(0,24,Hour)
TestMaximumRange : 1 ms

TestMinimumRange
    [PASS] CalendarTest.TestMinimumRange(1,12,Month)
    [PASS] CalendarTest.TestMinimumRange(1,28,Day)
    [PASS] CalendarTest.TestMinimumRange(0,24,Hour)
TestMinimumRange : 0 ms
    [PASS] CalendarTest.TestNSCalendarConstructors
    [PASS] CalendarTest.TestNSDateComponentNewAPIs

TestOrdinality
    [PASS] CalendarTest.TestOrdinality(2010,1,11,Day,Month,11)
    [PASS] CalendarTest.TestOrdinality(2010,4,15,Day,Month,15)
TestOrdinality : 2 ms

TestRange
    [PASS] CalendarTest.TestRange(2010,1,11,1,31,Day,Month)
    [PASS] CalendarTest.TestRange(2010,2,11,1,28,Day,Month)
    [PASS] CalendarTest.TestRange(2010,3,11,1,31,Day,Month)
    [PASS] CalendarTest.TestRange(1999,1,11,0,24,Hour,Day)
TestRange : 1 ms
    [PASS] CalendarTest.TestRangeOfWeekendContainingDate

TestRangeOrUnitInterval
    [PASS] CalendarTest.TestRangeOrUnitInterval(2010,1,11,Day,86400.0d)
    [PASS] CalendarTest.TestRangeOrUnitInterval(2010,2,11,Hour,3600.0d)
    [PASS] CalendarTest.TestRangeOrUnitInterval(2015,2,11,Month,2419200.0d)
TestRangeOrUnitInterval : 1 ms

TestRangeOrUnitIntervalNotNull
    [PASS] CalendarTest.TestRangeOrUnitIntervalNotNull(2010,1,11,Day,86400.0d)
    [PASS] CalendarTest.TestRangeOrUnitIntervalNotNull(2010,2,11,Hour,3600.0d)
    [PASS] CalendarTest.TestRangeOrUnitIntervalNotNull(2015,2,11,Month,2419200.0d)
TestRangeOrUnitIntervalNotNull : 0 ms
    [PASS] CalendarTest.TestSettingHourComponent
    [PASS] CalendarTest.TestSignUpForDateNotification
    [PASS] CalendarTest.TestStartOfDay
CalendarTest : 31 ms

CoderTest
    [PASS] CoderTest.EncodeDecodeTest
CoderTest : 4 ms

DateFormatterTest
    [PASS] DateFormatterTest.GetDateFormatFromTemplateTest
    [PASS] DateFormatterTest.ToLocalizedStringTest
DateFormatterTest : 2 ms

DateTest
    [PASS] DateTest.DescriptionWithLocale
    [PASS] DateTest.InLimits
    [PASS] DateTest.OutLimits
    [PASS] DateTest.Precision32022
DateTest : 2 ms

DecimalNumberTest
    [PASS] DecimalNumberTest.One
DecimalNumberTest : 1 ms

DecimalTest
    [PASS] DecimalTest.CastDecimal
    [PASS] DecimalTest.CastDouble
    [PASS] DecimalTest.CastFloat
    [PASS] DecimalTest.CastInt
DecimalTest : 4 ms

DictionaryContainerTest
    [PASS] DictionaryContainerTest.Empty
    [PASS] DictionaryContainerTest.SetArrayValue_INativeObject
    [PASS] DictionaryContainerTest.SetArrayValue_NSNumber
    [PASS] DictionaryContainerTest.SetArrayValue_String
    [PASS] DictionaryContainerTest.SetArrayValue_T_Enum
    [PASS] DictionaryContainerTest.SetBooleanValue
    [PASS] DictionaryContainerTest.SetNumberValue_Int32
    [PASS] DictionaryContainerTest.SetNumberValue_UInt32
    [PASS] DictionaryContainerTest.SetStringValue
DictionaryContainerTest : 6 ms

DimensionTest
    [PASS] DimensionTest.BaseUnit
    [PASS] DimensionTest.NSUnitAcceleration_BaseUnit
    [PASS] DimensionTest.NSUnitAngle_BaseUnit
    [PASS] DimensionTest.NSUnitArea_BaseUnit
    [PASS] DimensionTest.NSUnitConcentrationMass_BaseUnit
    [PASS] DimensionTest.NSUnitDispersion_BaseUnit
    [PASS] DimensionTest.NSUnitDuration_BaseUnit
    [PASS] DimensionTest.NSUnitElectricCharge_BaseUnit
    [PASS] DimensionTest.NSUnitElectricCurrent_BaseUnit
    [PASS] DimensionTest.NSUnitElectricPotentialDifference_BaseUnit
    [PASS] DimensionTest.NSUnitElectricResistance_BaseUnit
    [PASS] DimensionTest.NSUnitEnergy_BaseUnit
    [PASS] DimensionTest.NSUnitFrequency_BaseUnit
    [PASS] DimensionTest.NSUnitFuelEfficiency_BaseUnit
    [PASS] DimensionTest.NSUnitIlluminance_BaseUnit
    [PASS] DimensionTest.NSUnitLength_BaseUnit
    [PASS] DimensionTest.NSUnitMass_BaseUnit
    [PASS] DimensionTest.NSUnitPower_BaseUnit
    [PASS] DimensionTest.NSUnitPressure_BaseUnit
    [PASS] DimensionTest.NSUnitSpeed_BaseUnit
    [PASS] DimensionTest.NSUnitTemperature_BaseUnit
    [PASS] DimensionTest.NSUnitVolume_BaseUnit
DimensionTest : 15 ms

EncodingDetectionOptionsTest
    [PASS] EncodingDetectionOptionsTest.SetValueEnumArray
EncodingDetectionOptionsTest : 1 ms

FileCoordinatorTest
    [PASS] FileCoordinatorTest.CoordinateBatch_Action
    [PASS] FileCoordinatorTest.CoordinateBatch_Action_Null
    [PASS] FileCoordinatorTest.CoordinateRead
    [PASS] FileCoordinatorTest.CoordinateReadWrite
    [PASS] FileCoordinatorTest.CoordinateReadWrite_Null
    [PASS] FileCoordinatorTest.CoordinateRead_Null
    [PASS] FileCoordinatorTest.CoordinateWrite
    [PASS] FileCoordinatorTest.CoordinateWriteWrite
    [PASS] FileCoordinatorTest.CoordinateWriteWrite_Null
    [PASS] FileCoordinatorTest.CoordinateWrite_Null
FileCoordinatorTest : 11 ms

FileHandleTest
    [PASS] FileHandleTest.Descriptor
    [PASS] FileHandleTest.DescriptorClose
FileHandleTest : 1 ms

FormatterTests
    [PASS] FormatterTests.DateGetObjectValueTest
    [PASS] FormatterTests.DateIntervalStringFromDate
    [PASS] FormatterTests.DateLocalizedStringFromDateComponents
    [PASS] FormatterTests.DateStringForObjectValue
    [PASS] FormatterTests.DateStringFromDate
    [PASS] FormatterTests.DateStringFromDateComponents
    [PASS] FormatterTests.DateStringFromTimeInterval
    [PASS] FormatterTests.DateTestProperties
    [PASS] FormatterTests.EnergyEnergyStringFromJoules
    [PASS] FormatterTests.EnergyEnergyStringFromValue
    [PASS] FormatterTests.EnergyGetObjectValue
    [PASS] FormatterTests.EnergyUnitStringFromJoules
    [PASS] FormatterTests.EnergyUnitStringFromValue
FormatterTests : 9 ms

HttpCookieTest
    [PASS] HttpCookieTest.CookieFromProperties
    [PASS] HttpCookieTest.DotNetInteropCommon
    [PASS] HttpCookieTest.DotNetInteropMax
    [PASS] HttpCookieTest.DotNetInteropMin
    [PASS] HttpCookieTest.DotNetInterop_NonSession
    [PASS] HttpCookieTest.NSDictionaryCtor
    [PASS] HttpCookieTest.NiceFourCtor
    [PASS] HttpCookieTest.NiceThreeCtor
    [PASS] HttpCookieTest.NiceTwoCtor
    [PASS] HttpCookieTest.PortList_4990
HttpCookieTest : 7 ms

IndexPathTest
    [PASS] IndexPathTest.CompareTest
    [PASS] IndexPathTest.CreateTest
    [PASS] IndexPathTest.FromIndex
    [PASS] IndexPathTest.IndexAtPositionTest
    [PASS] IndexPathTest.IndexPathByAddingIndexTest
    [PASS] IndexPathTest.IndexPathByRemovingLastIndexTest
IndexPathTest : 4 ms

KeyedUnarchiverTest
    [PASS] KeyedUnarchiverTest.Exceptions
KeyedUnarchiverTest : 1 ms

LocaleTest
    [PASS] LocaleTest.CountryLessLocale
    [PASS] LocaleTest.CurrentLocale
    [PASS] LocaleTest.DisplayName_En
    [PASS] LocaleTest.DisplayName_Fr
    [PASS] LocaleTest.FromLocaleIdentifier
    [PASS] LocaleTest.InitRegionInfo
    [PASS] LocaleTest.Properties
LocaleTest : 4 ms

MutableDataTest
    [PASS] MutableDataTest.Constructor
    [PASS] MutableDataTest.FromCapacity
    [PASS] MutableDataTest.FromLength
MutableDataTest : 2 ms

MutableSAttributedStringTest
    [PASS] MutableSAttributedStringTest.IndirectNullDictionary
    [PASS] MutableSAttributedStringTest.InitWith
    [PASS] MutableSAttributedStringTest.NullDictionary
MutableSAttributedStringTest : 1 ms

MutableStringTest
    [PASS] MutableStringTest.Delete
    [PASS] MutableStringTest.Insert
    [PASS] MutableStringTest.Replace
MutableStringTest : 3 ms

NSArray1Test
    [PASS] NSArray1Test.Ctor
    [PASS] NSArray1Test.FromNSObjectsCountTest
    [PASS] NSArray1Test.FromNSObjectsNullTest
    [PASS] NSArray1Test.FromNSObjectsTest
    [PASS] NSArray1Test.IEnumerableTest
NSArray1Test : 5 ms

NSArrayTest
    [PASS] NSArrayTest.Filter
    [PASS] NSArrayTest.FromNSObjects
    [PASS] NSArrayTest.FromStrings_Null
    [PASS] NSArrayTest.INativeObjects
    [PASS] NSArrayTest.Null
    [PASS] NSArrayTest.Sort
NSArrayTest : 4 ms

NSCharacterSetTest
    [PASS] NSCharacterSetTest.NSMutableCharacterSet_TestStaticSets
NSCharacterSetTest : 3 ms

NSDataTest
    [PASS] NSDataTest.AsStream
    [PASS] NSDataTest.Base64Data
    [PASS] NSDataTest.Base64String
    [PASS] NSDataTest.Base64_Long
    [PASS] NSDataTest.Base64_Short
    [PASS] NSDataTest.BytesLength
    [PASS] NSDataTest.ConstructorTest
    [PASS] NSDataTest.FromEmptyArrayTest
    [PASS] NSDataTest.FromFile
    [PASS] NSDataTest.FromFile_Options
    [PASS] NSDataTest.FromStream
    [PASS] NSDataTest.FromStream_CanNotRead
    [PASS] NSDataTest.FromStream_CanNotSeek
    [PASS] NSDataTest.FromStream_Negative
    [PASS] NSDataTest.FromStream_NoLength
    [PASS] NSDataTest.FromStream_Position
    [PASS] NSDataTest.FromString
    [PASS] NSDataTest.Https
    [PASS] NSDataTest.ToArray
    [PASS] NSDataTest.ToEmptyArray
    [PASS] NSDataTest.ToString_17693
NSDataTest : 158 ms

NSDateComponentsTest
    [PASS] NSDateComponentsTest.TestUndefinedComponent
NSDateComponentsTest : 1 ms

NSDictionary2Test
    [PASS] NSDictionary2Test.ContainsKeyTest
    [PASS] NSDictionary2Test.Copy
    [PASS] NSDictionary2Test.Ctor
    [PASS] NSDictionary2Test.Ctor_Arrays
    [PASS] NSDictionary2Test.Ctor_NSDictionary
    [PASS] NSDictionary2Test.DictionaryCtorKeyValues
    [PASS] NSDictionary2Test.FromObjectsAndKeysGenericTest
    [PASS] NSDictionary2Test.ICollection2Test
    [PASS] NSDictionary2Test.IDictionary2Test
    [PASS] NSDictionary2Test.IEnumerableTest
    [PASS] NSDictionary2Test.IEnumerable_KVP2Test
    [PASS] NSDictionary2Test.InbalancedCtor
    [PASS] NSDictionary2Test.IndexerTest
    [PASS] NSDictionary2Test.InvalidType
    [IGNORED] NSDictionary2Test.KeyValue_Autorelease : RetainCount unusable for testing
          at MonoTouchFixtures.Foundation.NSDictionary2Test.KeyValue_Autorelease () [0x00035] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Foundation/NSDictionary2Test.cs:103
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] NSDictionary2Test.KeysForObjectTest
    [PASS] NSDictionary2Test.KeysTest
    [PASS] NSDictionary2Test.MutableCopy
    [PASS] NSDictionary2Test.ObjectForKeyTest
    [PASS] NSDictionary2Test.ObjectsForKeysTest
    [PASS] NSDictionary2Test.TryGetValueTest
    [PASS] NSDictionary2Test.ValuesTest
    [IGNORED] NSDictionary2Test.XForY_Autorelease : RetainCount unusable for testing
          at MonoTouchFixtures.Foundation.NSDictionary2Test.XForY_Autorelease () [0x00035] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Foundation/NSDictionary2Test.cs:136
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
NSDictionary2Test : 16 ms

NSDictionaryTest
    [PASS] NSDictionaryTest.Copy
    [PASS] NSDictionaryTest.DictionaryCtorKeyValues
    [PASS] NSDictionaryTest.DictionaryCtorKeyValuesObjects
    [PASS] NSDictionaryTest.FromObjectsAndKeysTest
    [PASS] NSDictionaryTest.InbalancedCtor
    [PASS] NSDictionaryTest.InbalancedCtor2
    [PASS] NSDictionaryTest.IndexerTest
    [IGNORED] NSDictionaryTest.KeyValue_Autorelease : RetainCount unusable for testing
          at MonoTouchFixtures.Foundation.NSDictionaryTest.KeyValue_Autorelease () [0x00035] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Foundation/NSDictionaryTest.cs:93
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] NSDictionaryTest.MutableCopy
    [IGNORED] NSDictionaryTest.XForY_Autorelease : RetainCount unusable for testing
          at MonoTouchFixtures.Foundation.NSDictionaryTest.XForY_Autorelease () [0x00035] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Foundation/NSDictionaryTest.cs:126
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
NSDictionaryTest : 5 ms

NSExpressionTest
    [PASS] NSExpressionTest.AggregatePropertiesTest
    [PASS] NSExpressionTest.AnyKeyPropertiesTest
    [PASS] NSExpressionTest.BlockPropertiesTest
    [PASS] NSExpressionTest.ConstantPropertiesTest
    [PASS] NSExpressionTest.EvaluatedObjectPropertiesTest

FromConstant
    [PASS] NSExpressionTest.FromConstant("Foo")
    [PASS] NSExpressionTest.FromConstant(null)
FromConstant : 0 ms
    [PASS] NSExpressionTest.FromFormatConstant
    [PASS] NSExpressionTest.FromFormatWithArgsTest
    [PASS] NSExpressionTest.FromFormatWithNoArgsTest
    [PASS] NSExpressionTest.FromFunctionTest
    [PASS] NSExpressionTest.FromKeyPath
    [PASS] NSExpressionTest.FunctionPropertiesTest
    [PASS] NSExpressionTest.IntersectSetPropertiesTest
    [PASS] NSExpressionTest.KeyPathPropertiesTest
    [PASS] NSExpressionTest.MinusSetPropertiesTest
    [PASS] NSExpressionTest.UnionSetPropertiesTest
    [PASS] NSExpressionTest.VariablePropertiesTest
NSExpressionTest : 15 ms

NSFileManagerTest
    [PASS] NSFileManagerTest.DefaultManager
    [IGNORED] NSFileManagerTest.DocumentDirectory : DocumentsDirectory and MyDocuments point to different locations on mac
    [PASS] NSFileManagerTest.GetSkipBackupAttribute
    [PASS] NSFileManagerTest.GetUrlForUbiquityContainer : not iCloud enabled
          at MonoTouchFixtures.Foundation.NSFileManagerTest.GetUrlForUbiquityContainer () [0x00051] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Foundation/FileManagerTest.cs:51
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] NSFileManagerTest.LibraryDirectory
NSFileManagerTest : 6 ms

NSInputStreamTest
    [PASS] NSInputStreamTest.Data
    [PASS] NSInputStreamTest.Path
    [PASS] NSInputStreamTest.Read
    [PASS] NSInputStreamTest.SubclassedCtor
    [PASS] NSInputStreamTest.Url
NSInputStreamTest : 2 ms

NSKeyedUnarchiverTest
    [PASS] NSKeyedUnarchiverTest.DataTransformer_AllowedTopLevelTypes_WrapperTests
    [PASS] NSKeyedUnarchiverTest.GetUnarchivedObject_TypeWrappers
NSKeyedUnarchiverTest : 2 ms

NSLayoutConstraintTest
    [PASS] NSLayoutConstraintTest.FromVisualFormat
NSLayoutConstraintTest : 4 ms

NSLocaleTest
    [PASS] NSLocaleTest.GetNSObject_IntPtrZero
NSLocaleTest : 0 ms

NSMutableArray1Test
    [PASS] NSMutableArray1Test.AddObjectsTest
    [PASS] NSMutableArray1Test.AddTest
    [PASS] NSMutableArray1Test.ContainsTest
    [PASS] NSMutableArray1Test.Ctor
    [PASS] NSMutableArray1Test.Ctor_Capacity
    [PASS] NSMutableArray1Test.IEnumerable1Test
    [PASS] NSMutableArray1Test.IEnumerableTest
    [PASS] NSMutableArray1Test.IndexOfTest
    [PASS] NSMutableArray1Test.IndexerTest
    [PASS] NSMutableArray1Test.InsertObjectsTest
    [PASS] NSMutableArray1Test.InsertTest
    [PASS] NSMutableArray1Test.ReplaceObjectTest
NSMutableArray1Test : 10 ms

NSMutableDictionary2Test
    [PASS] NSMutableDictionary2Test.AddEntries
    [PASS] NSMutableDictionary2Test.AddTest
    [PASS] NSMutableDictionary2Test.ContainsKeyTest
    [PASS] NSMutableDictionary2Test.Copy
    [PASS] NSMutableDictionary2Test.Ctor
    [PASS] NSMutableDictionary2Test.Ctor_NSDictionary
    [PASS] NSMutableDictionary2Test.Ctor_NSMutableDictionary
    [PASS] NSMutableDictionary2Test.FromObjectsAndKeysGenericTest
    [PASS] NSMutableDictionary2Test.ICollection2Test
    [PASS] NSMutableDictionary2Test.IDictionary2Test
    [PASS] NSMutableDictionary2Test.IEnumerableTest
    [PASS] NSMutableDictionary2Test.IEnumerable_KVP2Test
    [PASS] NSMutableDictionary2Test.IndexerTest
    [PASS] NSMutableDictionary2Test.InvalidType
    [IGNORED] NSMutableDictionary2Test.KeyValue_Autorelease : RetainCount unusable for testing
          at MonoTouchFixtures.Foundation.NSMutableDictionary2Test.KeyValue_Autorelease () [0x00035] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Foundation/NSMutableDictionary2Test.cs:78
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] NSMutableDictionary2Test.KeysForObjectTest
    [PASS] NSMutableDictionary2Test.KeysTest
    [PASS] NSMutableDictionary2Test.MutableCopy
    [PASS] NSMutableDictionary2Test.ObjectForKeyTest
    [PASS] NSMutableDictionary2Test.ObjectsForKeysTest
    [PASS] NSMutableDictionary2Test.RemoveTest
    [PASS] NSMutableDictionary2Test.TryGetValueTest
    [PASS] NSMutableDictionary2Test.ValuesTest
    [IGNORED] NSMutableDictionary2Test.XForY_Autorelease : RetainCount unusable for testing
          at MonoTouchFixtures.Foundation.NSMutableDictionary2Test.XForY_Autorelease () [0x00035] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Foundation/NSMutableDictionary2Test.cs:111
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
NSMutableDictionary2Test : 20 ms

NSMutableOrderedSet1Test
    [PASS] NSMutableOrderedSet1Test.AddObjectsTest
    [PASS] NSMutableOrderedSet1Test.AddTest
    [PASS] NSMutableOrderedSet1Test.AsSetTest
    [PASS] NSMutableOrderedSet1Test.Ctor
    [PASS] NSMutableOrderedSet1Test.Ctor_Capacity
    [PASS] NSMutableOrderedSet1Test.Ctor_NSMutableOrderedSet
    [PASS] NSMutableOrderedSet1Test.Ctor_NSOrderedSet
    [PASS] NSMutableOrderedSet1Test.Ctor_NSSet
    [PASS] NSMutableOrderedSet1Test.Ctor_Params
    [PASS] NSMutableOrderedSet1Test.Ctor_Start
    [PASS] NSMutableOrderedSet1Test.IEnumerable1Test
    [PASS] NSMutableOrderedSet1Test.IEnumerableTest
    [PASS] NSMutableOrderedSet1Test.IndexerTest
    [PASS] NSMutableOrderedSet1Test.InsertObjectsTest
    [PASS] NSMutableOrderedSet1Test.InsertTest
    [PASS] NSMutableOrderedSet1Test.OperatorAddTest
    [PASS] NSMutableOrderedSet1Test.OperatorAddTest2
    [PASS] NSMutableOrderedSet1Test.OperatorAddTest3
    [PASS] NSMutableOrderedSet1Test.OperatorPlusReferenceTest
    [PASS] NSMutableOrderedSet1Test.OperatorSubtractTest
    [PASS] NSMutableOrderedSet1Test.OperatorSubtractTest2
    [PASS] NSMutableOrderedSet1Test.OperatorSubtractTest3
    [PASS] NSMutableOrderedSet1Test.RemoveObjectTest
    [PASS] NSMutableOrderedSet1Test.RemoveObjectsTest
    [PASS] NSMutableOrderedSet1Test.ReplaceObjectsTest
    [PASS] NSMutableOrderedSet1Test.ReplaceTest
NSMutableOrderedSet1Test : 14 ms

NSMutableOrderedSetTest
    [PASS] NSMutableOrderedSetTest.OperatorAddTest
    [PASS] NSMutableOrderedSetTest.OperatorDifferentTest
    [PASS] NSMutableOrderedSetTest.OperatorEqualTest
    [PASS] NSMutableOrderedSetTest.OperatorPlusReferenceTest
    [PASS] NSMutableOrderedSetTest.OperatorSubtractTest
NSMutableOrderedSetTest : 2 ms

NSMutableSet1Test
    [PASS] NSMutableSet1Test.AddObjectsTest
    [PASS] NSMutableSet1Test.AddTest
    [PASS] NSMutableSet1Test.AnyObjectTest
    [PASS] NSMutableSet1Test.ContainsTest
    [PASS] NSMutableSet1Test.Ctor
    [PASS] NSMutableSet1Test.Ctor_OtherMutableSet
    [PASS] NSMutableSet1Test.Ctor_OtherSet
    [PASS] NSMutableSet1Test.Ctor_Params
    [PASS] NSMutableSet1Test.IEnumerable1Test
    [PASS] NSMutableSet1Test.IEnumerableTest
    [PASS] NSMutableSet1Test.LookupMemberTest
    [PASS] NSMutableSet1Test.OperatorAddTest
    [PASS] NSMutableSet1Test.OperatorPlusReferenceTest
    [PASS] NSMutableSet1Test.OperatorSubtractTest
    [PASS] NSMutableSet1Test.RemoveTest
    [PASS] NSMutableSet1Test.ToArrayTest
NSMutableSet1Test : 11 ms

NSMutableSetTest
    [PASS] NSMutableSetTest.OperatorAddTest
    [PASS] NSMutableSetTest.OperatorPlusReferenceTest
    [PASS] NSMutableSetTest.OperatorSubtractTest
NSMutableSetTest : 1 ms

NSObjectTest
    [PASS] NSObjectTest.Copy
    [PASS] NSObjectTest.Encode
    [PASS] NSObjectTest.Equality
    [PASS] NSObjectTest.FromObject_Handle
    [PASS] NSObjectTest.FromObject_INativeObject
    [PASS] NSObjectTest.FromObject_NativeTypes
    [PASS] NSObjectTest.InvokeTest
    [PASS] NSObjectTest.IsDirectBinding
    [PASS] NSObjectTest.ObserverTest
    [PASS] NSObjectTest.SubclassEquality
    [PASS] NSObjectTest.SuperClass
    [PASS] NSObjectTest.ValueForInvalidKeyTest
NSObjectTest : 1140 ms

NSOrderedSet1Test
    [PASS] NSOrderedSet1Test.AsSetTest
    [PASS] NSOrderedSet1Test.ContainsTest
    [PASS] NSOrderedSet1Test.Ctor
    [PASS] NSOrderedSet1Test.Ctor_NSMutableOrderedSet
    [PASS] NSOrderedSet1Test.Ctor_NSOrderedSet
    [PASS] NSOrderedSet1Test.Ctor_NSSet
    [PASS] NSOrderedSet1Test.Ctor_Params
    [PASS] NSOrderedSet1Test.Ctor_Start
    [PASS] NSOrderedSet1Test.FirstObjectTest
    [PASS] NSOrderedSet1Test.IEnumerable1Test
    [PASS] NSOrderedSet1Test.IEnumerableTest
    [PASS] NSOrderedSet1Test.IndexOfTest
    [PASS] NSOrderedSet1Test.IndexerTest
    [PASS] NSOrderedSet1Test.LastObjectTest
    [PASS] NSOrderedSet1Test.OperatorAddTest
    [PASS] NSOrderedSet1Test.OperatorAddTest2
    [PASS] NSOrderedSet1Test.OperatorDifferentTest
    [PASS] NSOrderedSet1Test.OperatorEqualTest
    [PASS] NSOrderedSet1Test.OperatorPlusReferenceTest
    [PASS] NSOrderedSet1Test.OperatorSubtractTest
    [PASS] NSOrderedSet1Test.OperatorSubtractTest2
    [PASS] NSOrderedSet1Test.ToArrayTest
NSOrderedSet1Test : 10 ms

NSOrderedSetTest
    [PASS] NSOrderedSetTest.OperatorAddTest
    [PASS] NSOrderedSetTest.OperatorAddTest2
    [PASS] NSOrderedSetTest.OperatorAddTest3
    [PASS] NSOrderedSetTest.OperatorDifferentTest
    [PASS] NSOrderedSetTest.OperatorEqualTest
    [PASS] NSOrderedSetTest.OperatorPlusReferenceTest
    [PASS] NSOrderedSetTest.OperatorSubtractTest
    [PASS] NSOrderedSetTest.OperatorSubtractTest2
    [PASS] NSOrderedSetTest.OperatorSubtractTest3
NSOrderedSetTest : 3 ms

NSSet1Test
    [PASS] NSSet1Test.AnyObjectTest
    [PASS] NSSet1Test.ContainsTest
    [PASS] NSSet1Test.Ctor
    [PASS] NSSet1Test.Ctor_OtherMutableSet
    [PASS] NSSet1Test.Ctor_OtherSet
    [PASS] NSSet1Test.Ctor_Params
    [PASS] NSSet1Test.IEnumerable1Test
    [PASS] NSSet1Test.IEnumerableTest
    [PASS] NSSet1Test.LookupMemberTest
    [PASS] NSSet1Test.OperatorAddTest
    [PASS] NSSet1Test.OperatorPlusReferenceTest
    [PASS] NSSet1Test.OperatorSubtractTest
    [PASS] NSSet1Test.ToArrayTest
NSSet1Test : 7 ms

NSSetTest
    [PASS] NSSetTest.OperatorAddTest
    [PASS] NSSetTest.OperatorAddTest2
    [PASS] NSSetTest.OperatorPlus
    [PASS] NSSetTest.OperatorPlusReferenceTest
    [PASS] NSSetTest.OperatorSubtractTest
    [PASS] NSSetTest.OperatorSubtractTest2
    [PASS] NSSetTest.SetCtors
NSSetTest : 4 ms

NSTimeZoneTest
    [PASS] NSTimeZoneTest.AbbreviationTest
    [PASS] NSTimeZoneTest.AbbreviationsTest
    [PASS] NSTimeZoneTest.All_28300
    [PASS] NSTimeZoneTest.KnownTimeZoneNames
NSTimeZoneTest : 62 ms

NSUbiquitousKeyValueStoreTest
    [PASS] NSUbiquitousKeyValueStoreTest.Indexer
NSUbiquitousKeyValueStoreTest : 2 ms

NetServiceTest
    [PASS] NetServiceTest.DefaultCtor
NetServiceTest : 1 ms

NotificationCenterTest
    [IGNORED] NotificationCenterTest.Free : This test is 'randomly' failing the first time it's executed with debugging disabled (if executed with the rest of the tests) - CWLS show that the TestNotification instance is freed at the end of the test run.
    [PASS] NotificationCenterTest.ThreadSafe
NotificationCenterTest : 103 ms

NotificationQueueTest
    [PASS] NotificationQueueTest.DefaultQueue
NotificationQueueTest : 0 ms

NumberTest
    [PASS] NumberTest.CompareTo
    [PASS] NumberTest.CtorNSCoder
    [PASS] NumberTest.Equals
    [PASS] NumberTest.Singleton
NumberTest : 2 ms

OperationQueueTest
    [PASS] OperationQueueTest.Add_NSAction_Null
    [PASS] OperationQueueTest.Add_NSOperation_Null
    [PASS] OperationQueueTest.Add_NSOperations_Null
OperationQueueTest : 1 ms

OutputStreamTest
    [PASS] OutputStreamTest.Memory
    [PASS] OutputStreamTest.Path
    [PASS] OutputStreamTest.Write
OutputStreamTest : 2 ms

ProtocolAttributeTest
    [PASS] ProtocolAttributeTest.ModelMustBeProtocol
ProtocolAttributeTest : 55 ms

RegularExpressionTest
    [PASS] RegularExpressionTest.GetMatches
RegularExpressionTest : 4 ms

StringTest
    [PASS] StringTest.Compare
    [PASS] StringTest.Compare_Locale
    [PASS] StringTest.Compare_Null
    [PASS] StringTest.Compare_Options
    [PASS] StringTest.Compare_Range
    [PASS] StringTest.DrawingExtensions
    [PASS] StringTest.Equality
    [PASS] StringTest.FromData
    [PASS] StringTest.PathExtensions
    [PASS] StringTest.ReleaseEmptyString
    [PASS] StringTest.Replace_Range
StringTest : 8 ms

ThreadTest
    [PASS] ThreadTest.GetEntryAssemblyReturnsOk
    [PASS] ThreadTest.InitWithDataTest
    [PASS] ThreadTest.MainThread
ThreadTest : 13 ms

TimerTest
    [PASS] TimerTest.Bug17793
    [PASS] TimerTest.CreateTimer_NewSignature
TimerTest : 306 ms

UrlConnectionTest
    [PASS] UrlConnectionTest.StartCancel
UrlConnectionTest : 2 ms

UrlCredentialTest
    [PASS] UrlCredentialTest.Ctor_Trust
    [PASS] UrlCredentialTest.FromTrust
UrlCredentialTest : 4 ms

UrlProtectionSpaceTest
    [PASS] UrlProtectionSpaceTest.Http
    [PASS] UrlProtectionSpaceTest.HttpProxy
    [PASS] UrlProtectionSpaceTest.HttpProxy_Proxy
    [PASS] UrlProtectionSpaceTest.Https
UrlProtectionSpaceTest : 2 ms

UrlProtocolTest
    [PASS] UrlProtocolTest.RegistrarTest
    [PASS] UrlProtocolTest.Registration
UrlProtocolTest : 111 ms

UrlRequestTest
    [PASS] UrlRequestTest.Mutability_30744
UrlRequestTest : 1 ms

UrlSessionConfigurationTest
    [PASS] UrlSessionConfigurationTest.BackgroundSessionConfiguration
    [PASS] UrlSessionConfigurationTest.Default_Properties
UrlSessionConfigurationTest : 3 ms

UrlSessionTaskMetricsTest
    [PASS] UrlSessionTaskMetricsTest.Properties
UrlSessionTaskMetricsTest : 1 ms

UrlSessionTaskTest
    [PASS] UrlSessionTaskTest.NSUrlSessionDataTaskTest
    [PASS] UrlSessionTaskTest.NSUrlSessionDownloadTaskTest
    [PASS] UrlSessionTaskTest.NSUrlSessionUploadTaskTest
    [PASS] UrlSessionTaskTest.Properties
UrlSessionTaskTest : 7 ms

UrlSessionTaskTransactionMetricsTest
    [PASS] UrlSessionTaskTransactionMetricsTest.Properties
UrlSessionTaskTransactionMetricsTest : 2 ms

UrlSessionTest
    [PASS] UrlSessionTest.CreateDataTaskAsync
    [PASS] UrlSessionTest.DownloadDataAsync
    [PASS] UrlSessionTest.SharedSession
UrlSessionTest : 1374 ms

UrlTest
    [PASS] UrlTest.Bug13069
    [PASS] UrlTest.Copy
    [PASS] UrlTest.Ctor_string
    [PASS] UrlTest.Equals
    [PASS] UrlTest.Fields
    [PASS] UrlTest.FromString
    [PASS] UrlTest.InitWithSpaces
    [PASS] UrlTest.Invalid_29510
    [PASS] UrlTest.IsExcludedFromBackupKey
    [PASS] UrlTest.MutableCopy
    [PASS] UrlTest.SubclassEquality
    [PASS] UrlTest.TestEqualOperator
    [PASS] UrlTest.TestEqualOperatorNull
    [PASS] UrlTest.TestEqualOperatorSameInstace
    [PASS] UrlTest.TestNotEqualOperator
    [PASS] UrlTest.TestNotEqualOperatorNull
    [PASS] UrlTest.Unicode_6597
UrlTest : 6 ms

UserDefaultsTest
    [PASS] UserDefaultsTest.Ctor_SuiteName
    [PASS] UserDefaultsTest.Ctor_UserName
    [PASS] UserDefaultsTest.SetString
UserDefaultsTest : 2 ms

UuidTest
    [PASS] UuidTest.ConstructorFailures
    [PASS] UuidTest.Constructors
UuidTest : 1 ms

ZoneTest
    [PASS] ZoneTest.Default
ZoneTest : 0 ms

BaseEffectTest
    [PASS] BaseEffectTest.Properties
BaseEffectTest : 4 ms

EffectPropertyFogTest
    [PASS] EffectPropertyFogTest.Properties
EffectPropertyFogTest : 1 ms

EffectPropertyLightTest
    [PASS] EffectPropertyLightTest.Properties
EffectPropertyLightTest : 1 ms

EffectPropertytMaterialTest
    [PASS] EffectPropertytMaterialTest.Properties
EffectPropertytMaterialTest : 2 ms

EffectPropertytTransformTest
    [PASS] EffectPropertytTransformTest.Properties
EffectPropertytTransformTest : 1 ms

KViewTest
    [PASS] KViewTest.InitWithFrame
KViewTest : 1 ms

ExtendedGamepadSnapshotTest
    [PASS] ExtendedGamepadSnapshotTest.Nullability
ExtendedGamepadSnapshotTest : 1 ms

GamepadSnapshotTest
    [PASS] GamepadSnapshotTest.Nullability
GamepadSnapshotTest : 1 ms

LeaderboardTest
    [PASS] LeaderboardTest.DefaultCtor
    [PASS] LeaderboardTest.PlayersCtor
LeaderboardTest : 2 ms

NotificationBannerTest
    [PASS] NotificationBannerTest.Show_NSAction_Null
NotificationBannerTest : 6 ms

ScoreTest
    [PASS] ScoreTest.Ctor_String
ScoreTest : 4 ms

GKAgent3DTest
    [PASS] GKAgent3DTest.RotationTest
GKAgent3DTest : 3 ms

GKComponentSystemTests
    [PASS] GKComponentSystemTests.IndexerTest
    [PASS] GKComponentSystemTests.InitWithComponentClassType
GKComponentSystemTests : 2 ms

GKEntityTests
    [PASS] GKEntityTests.BadGetComponent
    [PASS] GKEntityTests.BadRemoval
    [PASS] GKEntityTests.GetAndRemoveTest
GKEntityTests : 1 ms

GKGridGraphTests
    [PASS] GKGridGraphTests.FromGridStartingAtTest
    [PASS] GKGridGraphTests.InitFromGridStartingAtTest
GKGridGraphTests : 7 ms

GKMeshGraphTests
    [PASS] GKMeshGraphTests.GKTriangleTest
GKMeshGraphTests : 3 ms

GKNoiseMapTests
    [PASS] GKNoiseMapTests.Vector2dTest
GKNoiseMapTests : 2 ms

GKNoiseTests
    [PASS] GKNoiseTests.Vector3dTest
GKNoiseTests : 1 ms

GKOctreeTests
    [PASS] GKOctreeTests.GKBoxTest
GKOctreeTests : 2 ms

GKPathTests
    [PASS] GKPathTests.FromPointsTest
    [PASS] GKPathTests.FromPointsVector3Test
    [PASS] GKPathTests.InitWithPointsTest
    [PASS] GKPathTests.InitWithPointsVector3Test
GKPathTests : 2 ms

GKPolygonObstacleTests
    [PASS] GKPolygonObstacleTests.FromPointsTest
    [PASS] GKPolygonObstacleTests.InitWithPointsTest
GKPolygonObstacleTests : 1 ms

GKQuadTreeTests
    [PASS] GKQuadTreeTests.GKQuadTest
GKQuadTreeTests : 1 ms

GKStateMachineTests
    [PASS] GKStateMachineTests.StateMachineTests
GKStateMachineTests : 1 ms

GKStateTests
    [PASS] GKStateTests.Concrete
    [PASS] GKStateTests.IsValidNextState
    [PASS] GKStateTests.NullIsValidNextState
GKStateTests : 1 ms

HMMutableSignificantTimeEventTest
    [PASS] HMMutableSignificantTimeEventTest.SignificantEventPropertyTest
HMMutableSignificantTimeEventTest : 2 ms

HMSignificantTimeEventTest
    [PASS] HMSignificantTimeEventTest.SignificantEventPropertyTest
HMSignificantTimeEventTest : 1 ms

HttpClientTest

EnsureModifiabilityPostSend
    [PASS] HttpClientTest.EnsureModifiabilityPostSend(System.Net.Http.HttpClientHandler,8)
    [PASS] HttpClientTest.EnsureModifiabilityPostSend(System.Net.Http.CFNetworkHandler,8)
    [PASS] HttpClientTest.EnsureModifiabilityPostSend(System.Net.Http.NSUrlSessionHandler,9)
EnsureModifiabilityPostSend : 5 ms
HttpClientTest : 5 ms

CGImageSourceTest
    [PASS] CGImageSourceTest.CopyMetadata
    [PASS] CGImageSourceTest.CopyProperties
    [PASS] CGImageSourceTest.CreateImageTest
    [PASS] CGImageSourceTest.CreateIncrementalTest
    [PASS] CGImageSourceTest.CreateThumbnailTest
    [PASS] CGImageSourceTest.FromDataProviderTest
    [PASS] CGImageSourceTest.FromDataTest
    [PASS] CGImageSourceTest.FromUrlTest
    [PASS] CGImageSourceTest.GetProperties
    [PASS] CGImageSourceTest.RemoveCache
CGImageSourceTest : 12 ms

ImageDestinationTest
    [PASS] ImageDestinationTest.AddImage
    [PASS] ImageDestinationTest.AddImageAndMetadata
    [PASS] ImageDestinationTest.CopyImageSource
    [PASS] ImageDestinationTest.Create_DataConsumer_BadUTI
    [PASS] ImageDestinationTest.Create_DataConsumer_GoodUTI
    [PASS] ImageDestinationTest.FromData_BadITU
    [PASS] ImageDestinationTest.FromData_GoodITU
    [PASS] ImageDestinationTest.FromUrl_BadITU
    [PASS] ImageDestinationTest.TypeIdentifiers
ImageDestinationTest : 6 ms

ImageMetadataTagTest
    [PASS] ImageMetadataTagTest.Ctor_Bool_False
    [PASS] ImageMetadataTagTest.Ctor_Bool_True
    [PASS] ImageMetadataTagTest.Ctor_NSArray
    [PASS] ImageMetadataTagTest.Ctor_NSDictionary
    [PASS] ImageMetadataTagTest.Ctor_NSNumber
    [PASS] ImageMetadataTagTest.Ctor_NSString
    [PASS] ImageMetadataTagTest.Ctor_Null
ImageMetadataTagTest : 4 ms

ImageMetadataTest
    [PASS] ImageMetadataTest.Defaults
ImageMetadataTest : 1 ms

MutableImageMetadataTest
    [PASS] MutableImageMetadataTest.Defaults
MutableImageMetadataTest : 1 ms

ContextTest
    [PASS] ContextTest.EvaluateScript
    [PASS] ContextTest.EvaluateScript_Context
    [PASS] ContextTest.EvaluateScript_Param
ContextTest : 6 ms

JSExportTest
    [PASS] JSExportTest.ExportTest
JSExportTest : 5 ms

ValueTest
    [PASS] ValueTest.CreatePromise
    [PASS] ValueTest.From
    [PASS] ValueTest.Invoke
    [PASS] ValueTest.IsEqual
ValueTest : 5 ms

LocalSearchRequestTest
    [PASS] LocalSearchRequestTest.Default
LocalSearchRequestTest : 2 ms

LocalSearchTest
    [PASS] LocalSearchTest.EmptyRequest
LocalSearchTest : 2008 ms

AudibleMediaTest
    [PASS] AudibleMediaTest.PreferredCharacteristics
AudibleMediaTest : 1 ms

CaptionAppearanceTest
    [PASS] CaptionAppearanceTest.DidDisplayCaptions
    [PASS] CaptionAppearanceTest.GetDisplayType
CaptionAppearanceTest : 3 ms

ImageCaptioningTest
    [PASS] ImageCaptioningTest.GetCaption
    [PASS] ImageCaptioningTest.GetMetadataTagPath
    [PASS] ImageCaptioningTest.SetCaption
ImageCaptioningTest : 40 ms

RemoteCommandCenterTest
    [PASS] RemoteCommandCenterTest.Shared
    [PASS] RemoteCommandCenterTest.Shared_8
    [PASS] RemoteCommandCenterTest.Shared_9
RemoteCommandCenterTest : 3 ms

SkipIntervalCommandTest
    [PASS] SkipIntervalCommandTest.ManualBinding
SkipIntervalCommandTest : 1 ms

AudioProcessingTapTest
    [PASS] AudioProcessingTapTest.Initialization
AudioProcessingTapTest : 3 ms

FormatNamesTest
    [PASS] FormatNamesTest.LocalizedNameForMediaSubType
    [PASS] FormatNamesTest.LocalizedNameForMediaType
FormatNamesTest : 1 ms

ClearValueTest
    [PASS] ClearValueTest.Constructor
ClearValueTest : 1 ms

DeviceTest
    [INCONCLUSIVE] DeviceTest.System : Metal is not supported
          at MonoTouchFixtures.Metal.DeviceTest.System () [0x00018] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Metal/DeviceTest.cs:27
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
DeviceTest : 3 ms

HeapDescriptorTest
    [IGNORED] HeapDescriptorTest.GetSetCpuCacheModeTest : Type is missing on the simulator
          at MonoTouchFixtures.Metal.HeapDescriptorTest.SetUp () [0x00016] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Metal/HeapDescriptorTest.cs:28
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] HeapDescriptorTest.GetSetSizeTest : Type is missing on the simulator
          at MonoTouchFixtures.Metal.HeapDescriptorTest.SetUp () [0x00016] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Metal/HeapDescriptorTest.cs:28
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] HeapDescriptorTest.GetSetStorageModeTest : Type is missing on the simulator
          at MonoTouchFixtures.Metal.HeapDescriptorTest.SetUp () [0x00016] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Metal/HeapDescriptorTest.cs:28
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] HeapDescriptorTest.Properties : Type is missing on the simulator
          at MonoTouchFixtures.Metal.HeapDescriptorTest.SetUp () [0x00016] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Metal/HeapDescriptorTest.cs:28
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
HeapDescriptorTest : 2 ms

MTLArgumentDescriptorTest
    [PASS] MTLArgumentDescriptorTest.GetSetAccessTest
    [PASS] MTLArgumentDescriptorTest.GetSetArrayLengthTest
    [PASS] MTLArgumentDescriptorTest.GetSetConstantBlockAlignmentTest
    [PASS] MTLArgumentDescriptorTest.GetSetDataTypeTest
    [PASS] MTLArgumentDescriptorTest.GetSetIndexTest
    [PASS] MTLArgumentDescriptorTest.GetSetTextureTypeTest
MTLArgumentDescriptorTest : 3 ms

MTLAttributeDescriptorTest
    [PASS] MTLAttributeDescriptorTest.GetSetBufferIndexTest
    [PASS] MTLAttributeDescriptorTest.GetSetFormatTest
    [PASS] MTLAttributeDescriptorTest.GetSetOffsetTest
MTLAttributeDescriptorTest : 2 ms

MTLAttributeTest
    [PASS] MTLAttributeTest.GetActiveTest
    [PASS] MTLAttributeTest.GetAttributeIndexTest
    [PASS] MTLAttributeTest.GetAttributeTypeTest
    [PASS] MTLAttributeTest.GetIsPatchControlPointDataTest
    [PASS] MTLAttributeTest.GetIsPatchDataTest
    [PASS] MTLAttributeTest.GetNameTest
MTLAttributeTest : 2 ms

MTLBufferLayoutDescriptorTest
    [PASS] MTLBufferLayoutDescriptorTest.GetSetStepFunctionTest
    [PASS] MTLBufferLayoutDescriptorTest.GetSetStepRate
    [PASS] MTLBufferLayoutDescriptorTest.GetSetStrideTest
MTLBufferLayoutDescriptorTest : 1 ms

MTLFunctionConstantTest
    [PASS] MTLFunctionConstantTest.GetIndexTest
    [PASS] MTLFunctionConstantTest.GetIsRequiredTest
    [PASS] MTLFunctionConstantTest.GetNameTest
    [PASS] MTLFunctionConstantTest.GetTypeTest
MTLFunctionConstantTest : 1 ms

MTLIndirectCommandBufferDescriptorTest
    [PASS] MTLIndirectCommandBufferDescriptorTest.GetSetCommandTypesTest
    [PASS] MTLIndirectCommandBufferDescriptorTest.GetSetInheritBuffersTest
    [PASS] MTLIndirectCommandBufferDescriptorTest.GetSetMaxFragmentBufferBindCountTest
    [PASS] MTLIndirectCommandBufferDescriptorTest.GetSetMaxVertexBufferBindCountTest
MTLIndirectCommandBufferDescriptorTest : 1 ms

MTLPipelineBufferDescriptorTest
    [PASS] MTLPipelineBufferDescriptorTest.GetSetMutabilityTest
MTLPipelineBufferDescriptorTest : 1 ms

MTLPointerTypeTests
    [PASS] MTLPointerTypeTests.GetAccessTest
    [PASS] MTLPointerTypeTests.GetAlignmentTest
    [PASS] MTLPointerTypeTests.GetDataSizeTest
    [PASS] MTLPointerTypeTests.GetElementIsArgumentBufferTest
    [PASS] MTLPointerTypeTests.GetElementTypeTest
MTLPointerTypeTests : 1 ms

MTLSharedEventListenerTest
    [IGNORED] MTLSharedEventListenerTest.GetSetCommandTypesTest : This test only runs on device.
          at TestRuntime.AssertDevice () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:144
          at MonoTouchFixtures.Metal.MTLSharedEventListenerTest.SetUp () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Metal/MTLSharedEventListenerTest.cs:25
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
MTLSharedEventListenerTest : 1 ms

MTLStageInRegionIndirectArgumentsTest
    [PASS] MTLStageInRegionIndirectArgumentsTest.SizeOfMTLStageInRegionIndirectArgumentsTest
MTLStageInRegionIndirectArgumentsTest : 0 ms

MTLStageInputOutputDescriptorTest
    [PASS] MTLStageInputOutputDescriptorTest.GetAttributesTest
    [PASS] MTLStageInputOutputDescriptorTest.GetLayoutsTest
    [PASS] MTLStageInputOutputDescriptorTest.GetSetIndexBufferTest
    [PASS] MTLStageInputOutputDescriptorTest.GetSetIndexType
MTLStageInputOutputDescriptorTest : 2 ms

MTLTextureReferenceTypeTests
    [PASS] MTLTextureReferenceTypeTests.GetAccessTest
    [PASS] MTLTextureReferenceTypeTests.GetIsDepthTextureTest
    [PASS] MTLTextureReferenceTypeTests.GetTextureDataType
    [PASS] MTLTextureReferenceTypeTests.GetTextureType
MTLTextureReferenceTypeTests : 1 ms

StructTest
    [PASS] StructTest.MTLQuadTessellationFactorsHalfStructSize
    [PASS] StructTest.MTLTriangleTessellationFactorsHalfStructSize
StructTest : 0 ms

ImageScaleTest
ImageScaleTest : 1 ms

KernelTest
KernelTest : 1 ms

MPSAccelerationStructureTests
MPSAccelerationStructureTests : 0 ms

MPSImageBatchTests
MPSImageBatchTests : 1 ms

MPSImageHistogramEqualizationTest
MPSImageHistogramEqualizationTest : 0 ms

MPSImageHistogramSpecificationTest
MPSImageHistogramSpecificationTest : 0 ms

MPSImageHistogramTest
MPSImageHistogramTest : 0 ms

MPSImageNormalizedHistogramTests
MPSImageNormalizedHistogramTests : 0 ms

MPSStateBatchTests
MPSStateBatchTests : 1 ms

MPSStateResourceListTests
MPSStateResourceListTests : 0 ms

UTTypeTest
    [PASS] UTTypeTest.CreatePreferredIdentifier
    [PASS] UTTypeTest.Equals
    [PASS] UTTypeTest.GetDeclaration
    [PASS] UTTypeTest.GetDeclaringBundleURL
    [PASS] UTTypeTest.GetPreferredTag
    [PASS] UTTypeTest.NSStringConstants
UTTypeTest : 31 ms

A_MDLAnimatedValueTypesTests
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedMatrix4x4Test
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedQuaternionArrayTest
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedQuaternionTest
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedScalarArrayTest
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedScalarTest
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedVector2Test
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedVector3ArrayTest
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedVector3Test
    [PASS] A_MDLAnimatedValueTypesTests.MDLAnimatedVector4Test
    [PASS] A_MDLAnimatedValueTypesTests.MDLMatrix4x4ArrayTest
A_MDLAnimatedValueTypesTests : 143 ms

MDCameraTest
    [PASS] MDCameraTest.ProjectionMatrix
MDCameraTest : 3 ms

MDLAssetTest
    [PASS] MDLAssetTest.BoundingBoxTest
MDLAssetTest : 1 ms

MDLLightTest
    [PASS] MDLLightTest.IrradianceAtPointTest
MDLLightTest : 1 ms

MDLMaterialPropertyTest
    [PASS] MDLMaterialPropertyTest.Copy
    [PASS] MDLMaterialPropertyTest.Ctors
MDLMaterialPropertyTest : 9 ms

MDLMeshTest
    [PASS] MDLMeshTest.CreateBoxWithDimensonTest
    [PASS] MDLMeshTest.CreateBoxWithExtentTest
    [PASS] MDLMeshTest.CreateCapsuleTest
    [PASS] MDLMeshTest.CreateConeTest
    [PASS] MDLMeshTest.CreateCylinderTest
    [PASS] MDLMeshTest.CreateCylindroidTest
    [PASS] MDLMeshTest.CreateEllipsoidTest
    [PASS] MDLMeshTest.CreateEllipticalConeTest
    [PASS] MDLMeshTest.CreateHemisphereTest
    [PASS] MDLMeshTest.CreateIcosahedronTest
    [PASS] MDLMeshTest.CreatePaneTest
    [PASS] MDLMeshTest.CreatePlaneTest
    [PASS] MDLMeshTest.CreateSphereTest
MDLMeshTest : 14 ms

MDLNoiseTextureTest
    [PASS] MDLNoiseTextureTest.Ctor
MDLNoiseTextureTest : 1 ms

MDLObjectTest
    [PASS] MDLObjectTest.GetBoundingBox
    [PASS] MDLObjectTest.ProtocolTest
MDLObjectTest : 5 ms

MDLStereoscopicCameraTest
    [PASS] MDLStereoscopicCameraTest.Properties
MDLStereoscopicCameraTest : 2 ms

MDLTextureTest
    [PASS] MDLTextureTest.CreateIrradianceTextureCubeTest_a
    [PASS] MDLTextureTest.CreateIrradianceTextureCubeTest_b
    [PASS] MDLTextureTest.Ctor
    [PASS] MDLTextureTest.DimensionsTest
MDLTextureTest : 2 ms

MDLTransformComponentTest
    [PASS] MDLTransformComponentTest.CreateGlobalTransformTest
    [PASS] MDLTransformComponentTest.LocalTransformTest
    [PASS] MDLTransformComponentTest.MatrixTest
MDLTransformComponentTest : 4 ms

MDLTransformTest
    [PASS] MDLTransformTest.Ctors
    [PASS] MDLTransformTest.GetRotationMatrixTest
    [PASS] MDLTransformTest.RotationAtTimeTest
    [PASS] MDLTransformTest.ScaleAtTimeTest
    [PASS] MDLTransformTest.TranslationAtTimeTest
MDLTransformTest : 4 ms

MDLVertexAttributeTest
    [PASS] MDLVertexAttributeTest.Ctors
    [PASS] MDLVertexAttributeTest.Properties
MDLVertexAttributeTest : 2 ms

MDLVoxelArrayTest
    [PASS] MDLVoxelArrayTest.BoundingBoxTest
MDLVoxelArrayTest : 2 ms

MonoRuntimeTests
    [PASS] MonoRuntimeTests.Bug18632
    [PASS] MonoRuntimeTests.Bug26989
MonoRuntimeTests : 7 ms

EmbeddingTest
    [PASS] EmbeddingTest.Write
EmbeddingTest : 25 ms

GazetteerTest
    [PASS] GazetteerTest.Dictionary
GazetteerTest : 2 ms

NLLanguageRecognizerTest
    [PASS] NLLanguageRecognizerTest.GetDominantLanguageTest
    [PASS] NLLanguageRecognizerTest.HandelNumbers
    [PASS] NLLanguageRecognizerTest.Process
NLLanguageRecognizerTest : 19 ms

NLTaggerTest
    [PASS] NLTaggerTest.GetTag
    [PASS] NLTaggerTest.GetTags
NLTaggerTest : 7 ms

NWBrowserDescriptorTest
    [PASS] NWBrowserDescriptorTest.TestBonjourDomainProperty
    [PASS] NWBrowserDescriptorTest.TestBonjourTypeProperty
    [PASS] NWBrowserDescriptorTest.TestCreateNullDomain
    [PASS] NWBrowserDescriptorTest.TestIncludeTxtRecordProperty
NWBrowserDescriptorTest : 1 ms

NWBrowserTest
    [PASS] NWBrowserTest.TestConstructorNullParameters
    [PASS] NWBrowserTest.TestDispatchQueuPropertyNull
    [PASS] NWBrowserTest.TestStart
    [PASS] NWBrowserTest.TestStartNoQ
    [PASS] NWBrowserTest.TestStateChangesHandler
NWBrowserTest : 958 ms

NWConnectionTest
    [PASS] NWConnectionTest.TestCancel
    [PASS] NWConnectionTest.TestEndpointProperty
    [PASS] NWConnectionTest.TestForceCancel
    [PASS] NWConnectionTest.TestParametersProperty
    [PASS] NWConnectionTest.TestSetQPropertyNull
NWConnectionTest : 6025 ms

NWEstablishmentReportTest
    [PASS] NWEstablishmentReportTest.TestConnectionSetupTime
    [PASS] NWEstablishmentReportTest.TestDuration
    [PASS] NWEstablishmentReportTest.TestEnumerateResolutions
    [PASS] NWEstablishmentReportTest.TestPreviousAttemptCount
    [IGNORED] NWEstablishmentReportTest.TestProxyConfigured : CI bots might have proxies setup and will mean that the test will fail.
          at TestRuntime.IgnoreInCI (System.String message) [0x0001e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:114
          at MonoTouchFixtures.Network.NWEstablishmentReportTest.TestProxyConfigured () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Network/NWEstablishmentReportTest.cs:94
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] NWEstablishmentReportTest.TestProxyEnpoint : CI bots might have proxies setup and will mean that the test will fail.
          at TestRuntime.IgnoreInCI (System.String message) [0x0001e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:114
          at MonoTouchFixtures.Network.NWEstablishmentReportTest.TestProxyEnpoint () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Network/NWEstablishmentReportTest.cs:124
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] NWEstablishmentReportTest.TestUsedProxy : CI bots might have proxies setup and will mean that the test will fail.
          at TestRuntime.IgnoreInCI (System.String message) [0x0001e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:114
          at MonoTouchFixtures.Network.NWEstablishmentReportTest.TestUsedProxy () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Network/NWEstablishmentReportTest.cs:87
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
NWEstablishmentReportTest : 6 ms

NWFramerMessageTest
    [PASS] NWFramerMessageTest.TestGetData
    [PASS] NWFramerMessageTest.TestGetDataMissingKey
    [PASS] NWFramerMessageTest.TestGetObject
    [PASS] NWFramerMessageTest.TestGetObjectMissingKey
NWFramerMessageTest : 2 ms

NWIPProtocolMetadataTest
    [PASS] NWIPProtocolMetadataTest.TestEcnFlagProperty
    [PASS] NWIPProtocolMetadataTest.TestMetadataType
    [PASS] NWIPProtocolMetadataTest.TestReceiveTimeProperty
    [PASS] NWIPProtocolMetadataTest.TestServiceClassProperty
NWIPProtocolMetadataTest : 2 ms

NWListenerTest
    [PASS] NWListenerTest.TestConnectionLimit
NWListenerTest : 1 ms

NWParametersTest
    [PASS] NWParametersTest.CreateSecureTcpTest
    [PASS] NWParametersTest.CreateSecureTcpTestDoNotSetUpProtocol
    [PASS] NWParametersTest.CreateSecureTcpTestDoNotSetUpTls
    [PASS] NWParametersTest.CreateSecureUpdTest
    [PASS] NWParametersTest.CreateSecureUpdTestDoNotSetUpProtocol
    [PASS] NWParametersTest.CreateSecureUpdTestDoNotSetUpTls
    [PASS] NWParametersTest.ExpiredDnsBehaviorPropertyTest
    [PASS] NWParametersTest.FastOpenEnabledPropertyTest
    [PASS] NWParametersTest.IncludePeerToPeerPropertyTest
    [IGNORED] NWParametersTest.LocalEndpointPropertyTest : nw_parameters_copy_local_endpoint always return null. Rdar filled 44095278.
          at MonoTouchFixtures.Network.NWParametersTest.LocalEndpointPropertyTest () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Network/NWParametersTest.cs:354
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] NWParametersTest.LocalOnlyPropertyTest
    [PASS] NWParametersTest.MultiPathServicePropertyTest
    [PASS] NWParametersTest.PreferNoProxyPropertyTest
    [PASS] NWParametersTest.ProhibitInterfaceTest
    [PASS] NWParametersTest.ProhibitInterfaceTypeTest
    [PASS] NWParametersTest.ProtocolStackPropertyTest
    [PASS] NWParametersTest.RequiredInterfacePropertyTest
    [PASS] NWParametersTest.RequiredInterfaceTypePropertyTest
    [PASS] NWParametersTest.ReuseLocalAddressPropertyTest
    [PASS] NWParametersTest.ServiceClassPropertyTest
    [PASS] NWParametersTest.TestProhibitConstrained
NWParametersTest : 12 ms

NWPathTest
    [PASS] NWPathTest.EnumerateGatewayNullCallbackTest
    [PASS] NWPathTest.EnumerateGatewayTest
    [PASS] NWPathTest.HasDnsPropertyTest
    [PASS] NWPathTest.HasIPV4PropertyTest
    [IGNORED] NWPathTest.HasIPV6PropertyTest : We cannot test the use of IPV6 since it is different per machine configuraton and makes the test flaky.
          at MonoTouchFixtures.Network.NWPathTest.HasIPV6PropertyTest () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/Network/NWPathTest.cs:131
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] NWPathTest.IsExpensivePropertyTest
    [PASS] NWPathTest.IterateInterfacesTest
    [PASS] NWPathTest.StatusPropertyTest
    [PASS] NWPathTest.UsesInterfaceTypeTest
NWPathTest : 10009 ms

NWProtocolDefinitionTest
    [PASS] NWProtocolDefinitionTest.IPDefinitionTest
    [PASS] NWProtocolDefinitionTest.TcpDefinitionTest
    [PASS] NWProtocolDefinitionTest.TlsDefinitionTest
    [PASS] NWProtocolDefinitionTest.UdpDefinitionTest
    [PASS] NWProtocolDefinitionTest.WebSocketDefinitionTest
NWProtocolDefinitionTest : 1 ms

NWProtocolIPOptionsTest
    [PASS] NWProtocolIPOptionsTest.SetCaculateReceiveTimeTest
    [PASS] NWProtocolIPOptionsTest.SetDisableFragmentation
    [PASS] NWProtocolIPOptionsTest.SetHopLimitTest
    [PASS] NWProtocolIPOptionsTest.SetIPLocalAddressPreference
    [PASS] NWProtocolIPOptionsTest.SetIPVersionTest
    [PASS] NWProtocolIPOptionsTest.SetUseMinimumMtu
NWProtocolIPOptionsTest : 23 ms

NWProtocolMetadataTest
    [PASS] NWProtocolMetadataTest.IP
    [PASS] NWProtocolMetadataTest.Udp
NWProtocolMetadataTest : 2 ms

NWProtocolOptionsTest
    [PASS] NWProtocolOptionsTest.CreateTcpTest
    [PASS] NWProtocolOptionsTest.CreateTlsTest
    [PASS] NWProtocolOptionsTest.CreateUdpTest
    [PASS] NWProtocolOptionsTest.SetIPLocalAddressPreference
NWProtocolOptionsTest : 43 ms

NWProtocolStackTest
    [PASS] NWProtocolStackTest.ClearApplicationProtocolsTest
    [PASS] NWProtocolStackTest.PrependApplicationProtocolNullOptionsTest
NWProtocolStackTest : 24 ms

NWProtocolTcpOptionsTest
    [PASS] NWProtocolTcpOptionsTest.ConnectionTimeoutTest
    [PASS] NWProtocolTcpOptionsTest.DisableAckStretchingTest
    [PASS] NWProtocolTcpOptionsTest.DisableEcnTest
    [PASS] NWProtocolTcpOptionsTest.EnableFastOpenTest
    [PASS] NWProtocolTcpOptionsTest.EnableKeepAliveTest
    [PASS] NWProtocolTcpOptionsTest.KeepAliveCountTest
    [PASS] NWProtocolTcpOptionsTest.KeepAliveIdleTimeTest
    [PASS] NWProtocolTcpOptionsTest.MaximumSegmentSizeTest
    [PASS] NWProtocolTcpOptionsTest.NoDelayTest
    [PASS] NWProtocolTcpOptionsTest.NoOptionsTest
    [PASS] NWProtocolTcpOptionsTest.NoPushTest
    [PASS] NWProtocolTcpOptionsTest.PersistTimeoutTest
    [PASS] NWProtocolTcpOptionsTest.RetransmitConnectionDropTimeTest
    [PASS] NWProtocolTcpOptionsTest.RetransmitFinDropTest
NWProtocolTcpOptionsTest : 3 ms

NWProtocolTlsOptionsTest
    [PASS] NWProtocolTlsOptionsTest.ProtocolOptionsTest
NWProtocolTlsOptionsTest : 0 ms

NWProtocolUdpOptionsTest
    [PASS] NWProtocolUdpOptionsTest.PreferNoChecksumTest
NWProtocolUdpOptionsTest : 0 ms

NWTxtRecordTest
    [PASS] NWTxtRecordTest.TestAddByteValue
    [PASS] NWTxtRecordTest.TestAddNoValue
    [PASS] NWTxtRecordTest.TestAddNullStringValue
    [PASS] NWTxtRecordTest.TestAddStringValue
    [PASS] NWTxtRecordTest.TestApply
    [PASS] NWTxtRecordTest.TestFromBytes
    [PASS] NWTxtRecordTest.TestGetRaw
    [PASS] NWTxtRecordTest.TestGetValueMissing
    [PASS] NWTxtRecordTest.TestGetValuePresent
    [PASS] NWTxtRecordTest.TestIsDictionary
    [PASS] NWTxtRecordTest.TestKeyCount
    [PASS] NWTxtRecordTest.TestMissingKey
    [PASS] NWTxtRecordTest.TestNotNullEquals
    [PASS] NWTxtRecordTest.TestPresentKey
    [PASS] NWTxtRecordTest.TestRemoveMissingKey
    [PASS] NWTxtRecordTest.TestRemovePresentKey
NWTxtRecordTest : 5 ms

NWWebSocketMetadataTest
    [PASS] NWWebSocketMetadataTest.TestConstructor
    [PASS] NWWebSocketMetadataTest.TestPongHandlerNullCallaback
    [PASS] NWWebSocketMetadataTest.TestPongHandlerNullQ
    [PASS] NWWebSocketMetadataTest.TestServerResponse
NWWebSocketMetadataTest : 1 ms

NWWebSocketOptionsTest
    [PASS] NWWebSocketOptionsTest.TestAddSubprotocol
    [PASS] NWWebSocketOptionsTest.TestAddSubprotocolNullValue
    [PASS] NWWebSocketOptionsTest.TestAutoReplyPing
    [PASS] NWWebSocketOptionsTest.TestClientRequenHandlerNullQ
    [PASS] NWWebSocketOptionsTest.TestClientRequestHandlerNullCallback
    [PASS] NWWebSocketOptionsTest.TestConstructorInvalidVersion
    [PASS] NWWebSocketOptionsTest.TestMaxMessageSize
    [PASS] NWWebSocketOptionsTest.TestSetHeader
    [PASS] NWWebSocketOptionsTest.TestSetHeaderNullName
    [PASS] NWWebSocketOptionsTest.TestSetHeaderNullValue
    [PASS] NWWebSocketOptionsTest.TestSkipHandShake
NWWebSocketOptionsTest : 5 ms

BlockSignatureTest
    [PASS] BlockSignatureTest.WithUserDelegateTypeAttribute
    [PASS] BlockSignatureTest.WithoutUserDelegateTypeAttribute
BlockSignatureTest : 1 ms

BlocksTest
    [PASS] BlocksTest.InvalidBlockTrampolines
    [PASS] BlocksTest.TestSetupBlock
BlocksTest : 2 ms

ClassTest
    [PASS] ClassTest.Bug33981
    [PASS] ClassTest.Ctor
    [PASS] ClassTest.GetHandle
    [PASS] ClassTest.IsCustomType
    [PASS] ClassTest.Lookup
    [PASS] ClassTest.LookupTest
    [PASS] ClassTest.getClassTest
ClassTest : 40 ms

DlfcnTest
    [PASS] DlfcnTest.OpenClose_libSystem
DlfcnTest : 0 ms

ExceptionsTest
    [PASS] ExceptionsTest.ManagedExceptionPassthrough
    [PASS] ExceptionsTest.ObjCException
ExceptionsTest : 7 ms

ProtocolTest
    [PASS] ProtocolTest.Ctors
ProtocolTest : 1 ms

RegistrarTest
    [PASS] RegistrarTest.BlockCollection
    [PASS] RegistrarTest.BlockReturnTest
    [PASS] RegistrarTest.Bug23289
    [PASS] RegistrarTest.Bug34224
    [PASS] RegistrarTest.ByrefParameter
    [PASS] RegistrarTest.ConformsToProtocolTest
    [PASS] RegistrarTest.ConformsToProtocolTest2
    [PASS] RegistrarTest.ConstructorChaining
    [PASS] RegistrarTest.ExportedGenericsTest
    [PASS] RegistrarTest.FakeTypeTest
    [PASS] RegistrarTest.GenericVirtualTest
    [PASS] RegistrarTest.IProtocolTest
    [PASS] RegistrarTest.IdAsIntPtrTest
    [PASS] RegistrarTest.InOutProtocolMethodArgument
    [PASS] RegistrarTest.MethodEncodings
    [PASS] RegistrarTest.OutNSErrorOnStack1
    [PASS] RegistrarTest.OutNSErrorOnStack2
    [PASS] RegistrarTest.OutOverriddenWithoutOutAttribute
    [PASS] RegistrarTest.PropertySetters
    [PASS] RegistrarTest.ProtocolArgument
    [PASS] RegistrarTest.RefOutTest_CFBundle
    [PASS] RegistrarTest.RefOutTest_Class
    [PASS] RegistrarTest.RefOutTest_ClassArray
    [PASS] RegistrarTest.RefOutTest_INSCoding
    [PASS] RegistrarTest.RefOutTest_INSCodingArray
    [PASS] RegistrarTest.RefOutTest_Int
    [PASS] RegistrarTest.RefOutTest_NSObject
    [PASS] RegistrarTest.RefOutTest_NSObjectArray
    [PASS] RegistrarTest.RefOutTest_NSValue
    [PASS] RegistrarTest.RefOutTest_NSValueArray
    [PASS] RegistrarTest.RefOutTest_Sel
    [PASS] RegistrarTest.RefOutTest_String
    [PASS] RegistrarTest.RefOutTest_StringArray
    [PASS] RegistrarTest.RegistrarRemoval
    [PASS] RegistrarTest.SelectorReturnValue
    [PASS] RegistrarTest.TestCGPointParameter
    [PASS] RegistrarTest.TestConstrainedGenericType
    [PASS] RegistrarTest.TestConstrainedGenericType2
    [PASS] RegistrarTest.TestCopyWithZone
    [PASS] RegistrarTest.TestCtors
    [PASS] RegistrarTest.TestGeneric
    [PASS] RegistrarTest.TestGenericUIView
    [PASS] RegistrarTest.TestINSCodingArray
    [PASS] RegistrarTest.TestINativeObject
    [PASS] RegistrarTest.TestInheritedProtocols
    [PASS] RegistrarTest.TestInheritedStaticMethods
    [PASS] RegistrarTest.TestInstanceMethodOnOpenGenericType
    [PASS] RegistrarTest.TestNSObjectArray
    [PASS] RegistrarTest.TestNativeEnum
    [PASS] RegistrarTest.TestNestedGenericType
    [PASS] RegistrarTest.TestNonVirtualProperty
    [PASS] RegistrarTest.TestNullOutParameters
    [PASS] RegistrarTest.TestObjCProperties
    [PASS] RegistrarTest.TestOutNSString
    [PASS] RegistrarTest.TestProperties
    [PASS] RegistrarTest.TestProtocolAndRegister
    [PASS] RegistrarTest.TestProtocolRegistration
    [PASS] RegistrarTest.TestRegisteredName
    [PASS] RegistrarTest.TestRetainReturnValue
    [PASS] RegistrarTest.TestStaticProperties
    [PASS] RegistrarTest.TestStringArray
    [PASS] RegistrarTest.TestStructAndOut
    [PASS] RegistrarTest.TestThreadSafety
    [PASS] RegistrarTest.TestTypeEncodings
    [PASS] RegistrarTest.TestVirtual
RegistrarTest : 2010 ms

RegistrarTestGenerated
    [PASS] RegistrarTestGenerated.NSNumberBindAs_BooleanArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Boolean_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Boolean_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Boolean_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_ByteArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Byte_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Byte_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Byte_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_DoubleArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Double_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Double_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Double_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int16Array_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int16_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int16_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int16_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int32Array_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int32_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int32_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int32_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int64Array_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int64_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int64_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Int64_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_NSStreamStatusArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_NSStreamStatus_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_NSStreamStatus_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_NSStreamStatus_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_SByteArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_SByte_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_SByte_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_SByte_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_SingleArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Single_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Single_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_Single_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt16Array_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt16_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt16_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt16_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt32Array_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt32_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt32_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt32_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt64Array_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt64_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt64_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_UInt64_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nfloatArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nfloat_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nfloat_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nfloat_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nintArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nint_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nint_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nint_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nuintArray_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nuint_Array_Overrides
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nuint_Bindings
    [PASS] RegistrarTestGenerated.NSNumberBindAs_nuint_Overrides
    [PASS] RegistrarTestGenerated.NSStringBindAs_SecKeyAlgorithmArray_Bindings
    [PASS] RegistrarTestGenerated.NSStringBindAs_SecKeyAlgorithm_Array_Overrides
    [PASS] RegistrarTestGenerated.NSStringBindAs_SecKeyAlgorithm_Bindings
    [PASS] RegistrarTestGenerated.NSStringBindAs_SecKeyAlgorithm_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CATransform3DArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CATransform3D_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CATransform3D_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CATransform3D_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGAffineTransformArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGAffineTransform_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGAffineTransform_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGAffineTransform_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGPointArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGPoint_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGPoint_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGPoint_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGRectArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGRect_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGRect_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGRect_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGSizeArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGSize_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGSize_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGSize_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGVectorArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGVector_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGVector_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CGVector_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CLLocationCoordinate2DArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CLLocationCoordinate2D_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CLLocationCoordinate2D_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CLLocationCoordinate2D_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeMappingArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeMapping_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeMapping_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeMapping_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeRangeArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeRange_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeRange_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTimeRange_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTime_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTime_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_CMTime_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_MKCoordinateSpanArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_MKCoordinateSpan_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_MKCoordinateSpan_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_MKCoordinateSpan_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSDirectionalEdgeInsetsArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSDirectionalEdgeInsets_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSDirectionalEdgeInsets_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSDirectionalEdgeInsets_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSRangeArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSRange_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSRange_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_NSRange_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNMatrix4Array_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNMatrix4_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNMatrix4_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNMatrix4_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector3Array_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector3_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector3_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector3_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector4Array_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector4_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector4_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_SCNVector4_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIEdgeInsetsArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIEdgeInsets_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIEdgeInsets_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIEdgeInsets_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIOffsetArray_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIOffset_Array_Overrides
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIOffset_Bindings
    [PASS] RegistrarTestGenerated.NSValueBindAs_UIOffset_Overrides
    [PASS] RegistrarTestGenerated.Test_c
    [PASS] RegistrarTestGenerated.Test_cc
    [PASS] RegistrarTestGenerated.Test_ccc
    [PASS] RegistrarTestGenerated.Test_cccc
    [PASS] RegistrarTestGenerated.Test_d
    [PASS] RegistrarTestGenerated.Test_dd
    [PASS] RegistrarTestGenerated.Test_ddd
    [PASS] RegistrarTestGenerated.Test_dddd
    [PASS] RegistrarTestGenerated.Test_ddddd
    [PASS] RegistrarTestGenerated.Test_ddi
    [PASS] RegistrarTestGenerated.Test_di
    [PASS] RegistrarTestGenerated.Test_didi
    [PASS] RegistrarTestGenerated.Test_dldl
    [PASS] RegistrarTestGenerated.Test_f
    [PASS] RegistrarTestGenerated.Test_ff
    [PASS] RegistrarTestGenerated.Test_fff
    [PASS] RegistrarTestGenerated.Test_ffff
    [PASS] RegistrarTestGenerated.Test_fffff
    [PASS] RegistrarTestGenerated.Test_fi
    [PASS] RegistrarTestGenerated.Test_fifi
    [PASS] RegistrarTestGenerated.Test_i
    [PASS] RegistrarTestGenerated.Test_id
    [PASS] RegistrarTestGenerated.Test_idi
    [PASS] RegistrarTestGenerated.Test_idid
    [PASS] RegistrarTestGenerated.Test_if
    [PASS] RegistrarTestGenerated.Test_iff
    [PASS] RegistrarTestGenerated.Test_ifif
    [PASS] RegistrarTestGenerated.Test_ii
    [PASS] RegistrarTestGenerated.Test_iid
    [PASS] RegistrarTestGenerated.Test_iiff
    [PASS] RegistrarTestGenerated.Test_iii
    [PASS] RegistrarTestGenerated.Test_iiii
    [PASS] RegistrarTestGenerated.Test_iiiii
    [PASS] RegistrarTestGenerated.Test_l
    [PASS] RegistrarTestGenerated.Test_ldld
    [PASS] RegistrarTestGenerated.Test_ll
    [PASS] RegistrarTestGenerated.Test_lll
    [PASS] RegistrarTestGenerated.Test_llll
    [PASS] RegistrarTestGenerated.Test_lllll
    [PASS] RegistrarTestGenerated.Test_s
    [PASS] RegistrarTestGenerated.Test_ss
    [PASS] RegistrarTestGenerated.Test_sss
    [PASS] RegistrarTestGenerated.Test_ssss
RegistrarTestGenerated : 214 ms

RuntimeTest
    [PASS] RuntimeTest.ConnectMethod
    [PASS] RuntimeTest.ConnectMethod1
    [PASS] RuntimeTest.ConnectMethod2
    [PASS] RuntimeTest.ConnectMethod3
    [PASS] RuntimeTest.ConnectMethodTest
    [PASS] RuntimeTest.FinalizationRaceCondition
    [PASS] RuntimeTest.GetINativeObjectTest
    [PASS] RuntimeTest.GetINativeObject_ForcedType
    [PASS] RuntimeTest.GetNSObject_Different_Class
    [PASS] RuntimeTest.GetNSObject_IntPtrZero
    [PASS] RuntimeTest.GetNSObject_Posing_Class
    [PASS] RuntimeTest.GetNSObject_Subclass
    [PASS] RuntimeTest.MX8029
    [PASS] RuntimeTest.NSAutoreleasePoolInThreadPool
    [PASS] RuntimeTest.RegisterAssembly_null

ResurrectedObjectsDisposedTest
    [PASS] RuntimeTest.ResurrectedObjectsDisposedTest(Foundation.NSObject)
    [PASS] RuntimeTest.ResurrectedObjectsDisposedTest(MonoTouchFixtures.ObjCRuntime.RuntimeTest+ResurrectedObjectsDisposedTestClass)
ResurrectedObjectsDisposedTest : 1047 ms
    [PASS] RuntimeTest.UsableUntilDead
RuntimeTest : 11345 ms

TrampolineTest
    [PASS] TrampolineTest.ArrayTest
    [PASS] TrampolineTest.DoubleReturnTest
    [PASS] TrampolineTest.FloatReturnTest
    [PASS] TrampolineTest.FloatingPointStretTrampolineTest
    [PASS] TrampolineTest.IntPtrTest
    [PASS] TrampolineTest.LoooongTest
    [PASS] TrampolineTest.OutParamTest
    [PASS] TrampolineTest.OutValueTypeTest
    [PASS] TrampolineTest.StretTrampolineTest
    [PASS] TrampolineTest.X64ArgumentOverflow
TrampolineTest : 13 ms

TrampolineTestGenerated
    [PASS] TrampolineTestGenerated.Test_c
    [PASS] TrampolineTestGenerated.Test_cc
    [PASS] TrampolineTestGenerated.Test_ccc
    [PASS] TrampolineTestGenerated.Test_cccc
    [PASS] TrampolineTestGenerated.Test_d
    [PASS] TrampolineTestGenerated.Test_dd
    [PASS] TrampolineTestGenerated.Test_ddd
    [PASS] TrampolineTestGenerated.Test_dddd
    [PASS] TrampolineTestGenerated.Test_ddddd
    [PASS] TrampolineTestGenerated.Test_ddi
    [PASS] TrampolineTestGenerated.Test_di
    [PASS] TrampolineTestGenerated.Test_didi
    [PASS] TrampolineTestGenerated.Test_dldl
    [PASS] TrampolineTestGenerated.Test_f
    [PASS] TrampolineTestGenerated.Test_ff
    [PASS] TrampolineTestGenerated.Test_fff
    [PASS] TrampolineTestGenerated.Test_ffff
    [PASS] TrampolineTestGenerated.Test_fffff
    [PASS] TrampolineTestGenerated.Test_fi
    [PASS] TrampolineTestGenerated.Test_fifi
    [PASS] TrampolineTestGenerated.Test_i
    [PASS] TrampolineTestGenerated.Test_id
    [PASS] TrampolineTestGenerated.Test_idi
    [PASS] TrampolineTestGenerated.Test_idid
    [PASS] TrampolineTestGenerated.Test_if
    [PASS] TrampolineTestGenerated.Test_iff
    [PASS] TrampolineTestGenerated.Test_ifif
    [PASS] TrampolineTestGenerated.Test_ii
    [PASS] TrampolineTestGenerated.Test_iid
    [PASS] TrampolineTestGenerated.Test_iiff
    [PASS] TrampolineTestGenerated.Test_iii
    [PASS] TrampolineTestGenerated.Test_iiii
    [PASS] TrampolineTestGenerated.Test_iiiii
    [PASS] TrampolineTestGenerated.Test_l
    [PASS] TrampolineTestGenerated.Test_ldld
    [PASS] TrampolineTestGenerated.Test_ll
    [PASS] TrampolineTestGenerated.Test_lll
    [PASS] TrampolineTestGenerated.Test_llll
    [PASS] TrampolineTestGenerated.Test_lllll
    [PASS] TrampolineTestGenerated.Test_s
    [PASS] TrampolineTestGenerated.Test_ss
    [PASS] TrampolineTestGenerated.Test_sss
    [PASS] TrampolineTestGenerated.Test_ssss
TrampolineTestGenerated : 74 ms

EAGLContextTest
    [PASS] EAGLContextTest.PresentRenderBufferTest
EAGLContextTest : 1 ms

ActionTest
    [PASS] ActionTest.TimingFunction_5058
    [PASS] ActionTest.TimingFunction_5072
ActionTest : 1 ms

GeometrySourceTest
    [IGNORED] GeometrySourceTest.FromMetalBuffer : This test only runs on device.
          at TestRuntime.AssertDevice () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:144
          at MonoTouchFixtures.SceneKit.GeometrySourceTest.FromMetalBuffer () [0x0001b] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/SceneKit/GeometrySourceTest.cs:47
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
GeometrySourceTest : 1 ms

NodeTest
    [PASS] NodeTest.AddAnimation
    [PASS] NodeTest.AddAnimation_Overload
NodeTest : 3 ms

SCNViewTests
    [PASS] SCNViewTests.NullOverlaySceneTest
SCNViewTests : 2 ms

StructTest
    [PASS] StructTest.Matrix
    [PASS] StructTest.Quaternion
    [PASS] StructTest.Vector
StructTest : 1 ms

CertificateTest
    [PASS] CertificateTest.GenerateKeyPairTest
    [PASS] CertificateTest.MailNSData
    [PASS] CertificateTest.MailRaw
    [PASS] CertificateTest.MailX1
    [IGNORED] CertificateTest.MailX2 : https://bugzilla.xamarin.com/show_bug.cgi?id=39952
    [PASS] CertificateTest.X2
CertificateTest : 81 ms

IdentityTest
    [PASS] IdentityTest.AccessCertificates
    [PASS] IdentityTest.I2
    [PASS] IdentityTest.Identity
IdentityTest : 11 ms

ImportExportTest
    [PASS] ImportExportTest.P12_AuthFailed
    [PASS] ImportExportTest.P12_Success
ImportExportTest : 3 ms

KeyChainTest
    [PASS] KeyChainTest.AddQueryRemove_Identity
    [PASS] KeyChainTest.Add_Certificate
    [PASS] KeyChainTest.CheckId
    [PASS] KeyChainTest.QueryAsData
    [PASS] KeyChainTest.QueryAsDataArray
    [PASS] KeyChainTest.SecItemAdd_Identity
KeyChainTest : 26 ms

KeyTest
    [IGNORED] KeyTest.BenchmarkManaged4096 : Just to compare performance with BenchmarkNative4096
    [IGNORED] KeyTest.BenchmarkNative4096 : Just to compare performance with BenchmarkManaged4096
    [PASS] KeyTest.CreateRandomKeyTest
    [PASS] KeyTest.EC
    [PASS] KeyTest.ECSecPrimeRandom
    [PASS] KeyTest.EncryptTooLarge
    [PASS] KeyTest.Encrypt_Empty
    [PASS] KeyTest.Encrypt_New
    [PASS] KeyTest.Encrypt_Old
    [PASS] KeyTest.GenerateKeyPairTooLargeRSA
    [PASS] KeyTest.RSA
    [PASS] KeyTest.RoundtripRSA1024OAEP
    [PASS] KeyTest.RoundtripRSAMinPKCS1
    [PASS] KeyTest.SignVerifyECSHA1
    [PASS] KeyTest.SignVerifyRSAMinPKCS1SHA1
KeyTest : 148 ms

ProtocolOptionsTest
    [PASS] ProtocolOptionsTest.Defaults
    [PASS] ProtocolOptionsTest.Equals
    [PASS] ProtocolOptionsTest.NewTlsOptions
ProtocolOptionsTest : 2 ms

RecordTest
    [PASS] RecordTest.Accessible_17579
    [PASS] RecordTest.AuthenticationType_17579
    [PASS] RecordTest.DeskCase_83099_InmutableDictionary
    [PASS] RecordTest.Identity
    [PASS] RecordTest.IdentityRecordTest
    [PASS] RecordTest.KeyRecordTest
    [PASS] RecordTest.Match
    [PASS] RecordTest.Protocol_17579
    [PASS] RecordTest.SecRecordRecordTest
RecordTest : 144 ms

SecPolicyTest
    [PASS] SecPolicyTest.BasicX509Policy
    [PASS] SecPolicyTest.CreateUnknownPolicy
    [PASS] SecPolicyTest.CreateWellKnownPolicies
    [PASS] SecPolicyTest.RevocationPolicy
    [PASS] SecPolicyTest.SslClient
    [PASS] SecPolicyTest.SslServer
    [PASS] SecPolicyTest.SslServerNoHost
SecPolicyTest : 4 ms

SecProtocolMetadataTest
    [PASS] SecProtocolMetadataTest.TlsDefaults
SecProtocolMetadataTest : 87 ms

SecStatusCodeTest
    [PASS] SecStatusCodeTest.ErrorDescriptionTest
SecStatusCodeTest : 1 ms

SecureTransportTest
    [PASS] SecureTransportTest.DatagramDefaults
    [PASS] SecureTransportTest.SslSupportedCiphers
    [PASS] SecureTransportTest.StreamDefaults
    [PASS] SecureTransportTest.Tls12
SecureTransportTest : 165 ms

TrustTest
    [PASS] TrustTest.Basic_Leaf_Only
    [PASS] TrustTest.Client_Leaf_Only
    [PASS] TrustTest.HostName_Leaf_Only
    [PASS] TrustTest.NoHostName
    [PASS] TrustTest.Timestamps
    [PASS] TrustTest.Trust2_FullChain
    [PASS] TrustTest.Trust2_Leaf_Only
    [PASS] TrustTest.Trust2_NoRoot
    [PASS] TrustTest.Trust_FullChain
    [PASS] TrustTest.Trust_Leaf_Only
    [PASS] TrustTest.Trust_NoRoot
TrustTest : 2750 ms

MatrixFloat2x2Test
    [PASS] MatrixFloat2x2Test.Determinant
    [PASS] MatrixFloat2x2Test.ElementConstructor
    [PASS] MatrixFloat2x2Test.Elements
    [PASS] MatrixFloat2x2Test.Equality_Operator
    [PASS] MatrixFloat2x2Test.Equals_Matrix
    [PASS] MatrixFloat2x2Test.Equals_Object
    [PASS] MatrixFloat2x2Test.Explicit_Operator_FromMatrix2
    [PASS] MatrixFloat2x2Test.Explicit_Operator_ToMatrix2
    [PASS] MatrixFloat2x2Test.Identity
    [PASS] MatrixFloat2x2Test.Inequality_Operator
    [PASS] MatrixFloat2x2Test.Multiply
    [PASS] MatrixFloat2x2Test.Multiply_ByRef
    [PASS] MatrixFloat2x2Test.Multiply_Operator
    [PASS] MatrixFloat2x2Test.ToStringTest
    [PASS] MatrixFloat2x2Test.TransposeInstance
    [PASS] MatrixFloat2x2Test.TransposeStatic
    [PASS] MatrixFloat2x2Test.TransposeStatic_ByRef
MatrixFloat2x2Test : 4 ms

MatrixFloat3x3Test
    [PASS] MatrixFloat3x3Test.Determinant
    [PASS] MatrixFloat3x3Test.ElementConstructor
    [PASS] MatrixFloat3x3Test.Elements
    [PASS] MatrixFloat3x3Test.Equality_Operator
    [PASS] MatrixFloat3x3Test.Equals_Matrix
    [PASS] MatrixFloat3x3Test.Equals_Object
    [PASS] MatrixFloat3x3Test.Explicit_Operator_FromMatrix3
    [PASS] MatrixFloat3x3Test.Explicit_Operator_ToMatrix3
    [PASS] MatrixFloat3x3Test.Identity
    [PASS] MatrixFloat3x3Test.Inequality_Operator
    [PASS] MatrixFloat3x3Test.Multiply
    [PASS] MatrixFloat3x3Test.Multiply_ByRef
    [PASS] MatrixFloat3x3Test.Multiply_Operator
    [PASS] MatrixFloat3x3Test.ToStringTest
    [PASS] MatrixFloat3x3Test.TransposeInstance
    [PASS] MatrixFloat3x3Test.TransposeStatic
    [PASS] MatrixFloat3x3Test.TransposeStatic_ByRef
MatrixFloat3x3Test : 4 ms

MatrixFloat4x4Test
    [PASS] MatrixFloat4x4Test.Determinant
    [PASS] MatrixFloat4x4Test.ElementConstructor
    [PASS] MatrixFloat4x4Test.Elements
    [PASS] MatrixFloat4x4Test.Equality_Operator
    [PASS] MatrixFloat4x4Test.Equals_Matrix
    [PASS] MatrixFloat4x4Test.Equals_Object
    [PASS] MatrixFloat4x4Test.Explicit_Operator_FromMatrix4
    [PASS] MatrixFloat4x4Test.Explicit_Operator_ToMatrix4
    [PASS] MatrixFloat4x4Test.Identity
    [PASS] MatrixFloat4x4Test.Inequality_Operator
    [PASS] MatrixFloat4x4Test.Multiply
    [PASS] MatrixFloat4x4Test.Multiply_ByRef
    [PASS] MatrixFloat4x4Test.Multiply_Operator
    [PASS] MatrixFloat4x4Test.RowConstructor
    [PASS] MatrixFloat4x4Test.ToStringTest
    [PASS] MatrixFloat4x4Test.TransposeInstance
    [PASS] MatrixFloat4x4Test.TransposeStatic
    [PASS] MatrixFloat4x4Test.TransposeStatic_ByRef
MatrixFloat4x4Test : 6 ms

NMatrix4dTest
    [PASS] NMatrix4dTest.Determinant
    [PASS] NMatrix4dTest.ElementConstructor
    [PASS] NMatrix4dTest.Elements
    [PASS] NMatrix4dTest.Equality_Operator
    [PASS] NMatrix4dTest.Equals_Matrix
    [PASS] NMatrix4dTest.Equals_Object
    [PASS] NMatrix4dTest.Explicit_Operator_FromMatrix4d
    [PASS] NMatrix4dTest.Explicit_Operator_ToMatrix4d
    [PASS] NMatrix4dTest.Identity
    [PASS] NMatrix4dTest.Inequality_Operator
    [PASS] NMatrix4dTest.Multiply
    [PASS] NMatrix4dTest.Multiply_ByRef
    [PASS] NMatrix4dTest.Multiply_Operator
    [PASS] NMatrix4dTest.RowConstructor
    [PASS] NMatrix4dTest.ToStringTest
    [PASS] NMatrix4dTest.TransposeInstance
    [PASS] NMatrix4dTest.TransposeStatic
    [PASS] NMatrix4dTest.TransposeStatic_ByRef
NMatrix4dTest : 7 ms

NMatrix4x3Test
    [PASS] NMatrix4x3Test.ElementConstructor
    [PASS] NMatrix4x3Test.Elements
    [PASS] NMatrix4x3Test.Equality_Operator
    [PASS] NMatrix4x3Test.Equals_Matrix
    [PASS] NMatrix4x3Test.Equals_Object
    [PASS] NMatrix4x3Test.Inequality_Operator
    [PASS] NMatrix4x3Test.ToStringTest
NMatrix4x3Test : 2 ms

NVector3dTest
    [PASS] NVector3dTest.ElementConstructor
    [PASS] NVector3dTest.Equality_Operator
    [PASS] NVector3dTest.Equals_Object
    [PASS] NVector3dTest.Equals_Vector
    [PASS] NVector3dTest.Explicit_Operator_FromVector3
    [PASS] NVector3dTest.Explicit_Operator_ToVector3
    [PASS] NVector3dTest.Inequality_Operator
    [PASS] NVector3dTest.ToStringTest
NVector3dTest : 2 ms

VectorFloat3Test
    [PASS] VectorFloat3Test.ElementConstructor
    [PASS] VectorFloat3Test.Equality_Operator
    [PASS] VectorFloat3Test.Equals_Object
    [PASS] VectorFloat3Test.Equals_Vector
    [PASS] VectorFloat3Test.Explicit_Operator_FromVector3
    [PASS] VectorFloat3Test.Explicit_Operator_ToVector3
    [PASS] VectorFloat3Test.Inequality_Operator
    [PASS] VectorFloat3Test.ToStringTest
VectorFloat3Test : 2 ms

FieldNodeTest
    [PASS] FieldNodeTest.CreateCustomField
    [PASS] FieldNodeTest.CreateLinearGravityField
    [PASS] FieldNodeTest.CreateRadialGravityField
    [PASS] FieldNodeTest.CreateVelocityField
FieldNodeTest : 5 ms

KeyframeSequenceTest
    [PASS] KeyframeSequenceTest.Ctor_Arrays
    [PASS] KeyframeSequenceTest.Ctor_Arrays_Null
    [PASS] KeyframeSequenceTest.Ctor_Capacity
KeyframeSequenceTest : 2 ms

PhysicsBodyTest
    [PASS] PhysicsBodyTest.BodyWithEdgeLoopFromRect
PhysicsBodyTest : 0 ms

PhysicsJointFixedTest
    [PASS] PhysicsJointFixedTest.Create
PhysicsJointFixedTest : 2 ms

PhysicsJointLimitTest
    [PASS] PhysicsJointLimitTest.Create
PhysicsJointLimitTest : 1 ms

PhysicsWorldTest
    [PASS] PhysicsWorldTest.SampleFields
PhysicsWorldTest : 1 ms

SK3DNodeTest
    [IGNORED] SK3DNodeTest.ProjectPoint : This doesn't seem to work properly in the iOS 9+ or macOS 10.11+
          at MonoTouchFixtures.SpriteKit.SK3DNodeTest.ProjectPoint () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/SpriteKit/SK3DNodeTest.cs:49
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] SK3DNodeTest.UnprojectPoint : This doesn't seem to work properly in the iOS 9
          at MonoTouchFixtures.SpriteKit.SK3DNodeTest.UnprojectPoint () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/SpriteKit/SK3DNodeTest.cs:77
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
SK3DNodeTest : 1 ms

SKShapeNodeTest
    [PASS] SKShapeNodeTest.FromPointsOffsetTest
    [PASS] SKShapeNodeTest.FromPointsTest
    [PASS] SKShapeNodeTest.FromSplinePointsOffsetTest
    [PASS] SKShapeNodeTest.FromSplinePointsTest
SKShapeNodeTest : 2 ms

SKTransformNodeTest
    [PASS] SKTransformNodeTest.EulerAngles
    [PASS] SKTransformNodeTest.QuaternionTest
    [PASS] SKTransformNodeTest.RotationMatrix
SKTransformNodeTest : 2 ms

SpriteNodeTest
    [PASS] SpriteNodeTest.Color
    [PASS] SpriteNodeTest.Ctor
    [PASS] SpriteNodeTest.CtorColor
    [PASS] SpriteNodeTest.CtorName
    [PASS] SpriteNodeTest.CtorTexture
    [PASS] SpriteNodeTest.CtorTextureColor
    [PASS] SpriteNodeTest.Texture
SpriteNodeTest : 5 ms

TextureAtlasTest
    [PASS] TextureAtlasTest.Empty
TextureAtlasTest : 1 ms

TextureTest
    [PASS] TextureTest.Atlas_MissingResource
TextureTest : 2 ms

UniformTest
    [PASS] UniformTest.Create
    [PASS] UniformTest.Ctors
UniformTest : 8 ms

WarpGeometryGridTest
    [PASS] WarpGeometryGridTest.CreateTest
    [PASS] WarpGeometryGridTest.GetGridByReplacingDestPositionsTest
    [PASS] WarpGeometryGridTest.GetGridByReplacingSourcePositionsTest
    [PASS] WarpGeometryGridTest.SKWarpGeometryGridTest
WarpGeometryGridTest : 2 ms

ReceiptRefreshRequestTest
    [PASS] ReceiptRefreshRequestTest.TerminateForInvalidReceipt
ReceiptRefreshRequestTest : 0 ms

Symbols
    [IGNORED] Symbols.FunctionNames : This is a device-only test.
          at MonoTouchFixtures.Symbols.FunctionNames () [0x0000d] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/mono/Symbols.cs:26
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
Symbols : 0 ms

NativeTypes
    [PASS] NativeTypes.CompareTo
    [PASS] NativeTypes.Equals
    [PASS] NativeTypes.IsInfinity
    [PASS] NativeTypes.IsNan
    [PASS] NativeTypes.IsNegativeInfinity
    [PASS] NativeTypes.IsPositiveInfinity
    [PASS] NativeTypes.NaN_Cast
    [PASS] NativeTypes.NegativeInfinity_Cast
    [PASS] NativeTypes.PositiveInfinity_Cast
NativeTypes : 3 ms

CaptiveNetworkTest
    [PASS] CaptiveNetworkTest.Fields
    [PASS] CaptiveNetworkTest.MarkPortalOffline
    [PASS] CaptiveNetworkTest.MarkPortalOffline_Null
    [PASS] CaptiveNetworkTest.MarkPortalOnline
    [PASS] CaptiveNetworkTest.MarkPortalOnline_Null
    [PASS] CaptiveNetworkTest.SetSupportedSSIDs
    [PASS] CaptiveNetworkTest.SetSupportedSSIDs_Null
    [PASS] CaptiveNetworkTest.TryCopyCurrentNetworkInfo
    [PASS] CaptiveNetworkTest.TryCopyCurrentNetworkInfo_Null
CaptiveNetworkTest : 2 ms

NetworkReachabilityTest
    [PASS] NetworkReachabilityTest.CtorIPAddress
    [PASS] NetworkReachabilityTest.CtorIPAddressPair
    [PASS] NetworkReachabilityTest.CtorNameAddress
    [PASS] NetworkReachabilityTest.Ctor_Invalid
NetworkReachabilityTest : 5 ms

StatusCodeErrorTest
    [PASS] StatusCodeErrorTest.InvalidStatusCode
StatusCodeErrorTest : 0 ms

A_UIStackViewTest
    [PASS] A_UIStackViewTest.InitWithFrameTest
A_UIStackViewTest : 1 ms

AccessibilityTest
    [PASS] AccessibilityTest.RequestGuidedAccessSession
AccessibilityTest : 2 ms

ActivityIndicatorViewTest
    [PASS] ActivityIndicatorViewTest.InitWithFrame
ActivityIndicatorViewTest : 1 ms

AppearanceTest
    [PASS] AppearanceTest.Appearance
    [PASS] AppearanceTest.AppearanceWhenContainedIn
    [PASS] AppearanceTest.AppearanceWhenContainedIn_UITraitCollection
    [PASS] AppearanceTest.Appearance_UITraitCollection
    [PASS] AppearanceTest.Equality
    [PASS] AppearanceTest.Inequality
AppearanceTest : 5 ms

ApplicationTest
    [PASS] ApplicationTest.BackgroundTaskInvalid
    [PASS] ApplicationTest.BeginBackgroundTask_Null
    [PASS] ApplicationTest.MinimumKeepAliveTimeout
    [PASS] ApplicationTest.SendAction_Null
ApplicationTest : 2 ms

ButtonBarItemTest
    [PASS] ButtonBarItemTest.Action_Set
    [PASS] ButtonBarItemTest.BackButtonBackgroundImage
    [PASS] ButtonBarItemTest.BackgroundImage
    [PASS] ButtonBarItemTest.CustomView_Null
    [PASS] ButtonBarItemTest.InitWithImage
    [PASS] ButtonBarItemTest.InitWithImage2
    [PASS] ButtonBarItemTest.InitWithText
    [PASS] ButtonBarItemTest.TintColor_Null
ButtonBarItemTest : 4 ms

ButtonTest
    [PASS] ButtonTest.InitWithFrame
    [PASS] ButtonTest.NullAllowed
    [PASS] ButtonTest.Tag_12557
ButtonTest : 2 ms

CollectionViewControllerTest
    [PASS] CollectionViewControllerTest.Ctor
CollectionViewControllerTest : 1 ms

CollectionViewTransitionLayoutTest
    [PASS] CollectionViewTransitionLayoutTest.Ctor
CollectionViewTransitionLayoutTest : 1 ms

ColorTest
    [PASS] ColorTest.HSB
    [PASS] ColorTest.HSBA
    [PASS] ColorTest.HSBA_No_Saturation
    [PASS] ColorTest.Pattern_7362
    [PASS] ColorTest.RGB
    [PASS] ColorTest.RGBA
    [PASS] ColorTest.RGBAConstructor
    [PASS] ColorTest.ToString_

WAConstructor
    [PASS] ColorTest.WAConstructor(0.2d,0.4d)
    [PASS] ColorTest.WAConstructor(0.3d,0.5d)
    [PASS] ColorTest.WAConstructor(0.4d,0.6d)
    [PASS] ColorTest.WAConstructor(0.5d,0.7d)
WAConstructor : 0 ms
ColorTest : 6 ms

ControlTest
    [PASS] ControlTest.AddTargetMakeDirty
    [PASS] ControlTest.AddTargetTable
    [PASS] ControlTest.CancelTrackingTest
    [PASS] ControlTest.InitWithFrame
ControlTest : 17 ms

DeviceTest
DeviceTest : 0 ms

DictationPhraseTest
    [PASS] DictationPhraseTest.Defaults
DictationPhraseTest : 0 ms

DirectionalEdgeInsetsTest
    [PASS] DirectionalEdgeInsetsTest.FromString_Null
    [PASS] DirectionalEdgeInsetsTest.Operators
    [PASS] DirectionalEdgeInsetsTest.ToFromString_Zero
DirectionalEdgeInsetsTest : 1 ms

EdgeInsetsTest
    [PASS] EdgeInsetsTest.FromString_Null
    [PASS] EdgeInsetsTest.InsetRect
    [PASS] EdgeInsetsTest.InsetRect_Zero
    [PASS] EdgeInsetsTest.Operators
    [PASS] EdgeInsetsTest.ToFromString_Zero
EdgeInsetsTest : 1 ms

FloatRangeTest
    [IGNORED] FloatRangeTest.Equals
    [PASS] FloatRangeTest.IsInfinite
    [IGNORED] FloatRangeTest.ManagedVersusNative
FloatRangeTest : 0 ms

FontTest
    [PASS] FontTest.Methods
    [PASS] FontTest.NullFonts
    [PASS] FontTest.Properties
    [PASS] FontTest.TestDescriptors
    [PASS] FontTest.WithSize
FontTest : 5 ms

GestureRecognizerTest
    [PASS] GestureRecognizerTest.DoubleDispose
    [IGNORED] GestureRecognizerTest.NoStrongCycles : Issue: https://github.com/xamarin/maccore/issues/1345 && WIP PR: https://github.com/xamarin/xamarin-macios/pull/5462
    [PASS] GestureRecognizerTest.Null
GestureRecognizerTest : 2 ms

GraphicsRendererTest
    [PASS] GraphicsRendererTest.BaseDefaultFormat
    [PASS] GraphicsRendererTest.ImageDefaultFormat
    [PASS] GraphicsRendererTest.PdfDefaultFormat
GraphicsRendererTest : 1 ms

GuidedAccessRestrictionTest
    [PASS] GuidedAccessRestrictionTest.GetState
GuidedAccessRestrictionTest : 0 ms

ImageTest
    [PASS] ImageTest.CGImageBackend
    [PASS] ImageTest.CreateAnimatedImage
    [PASS] ImageTest.FromImage_Null
    [PASS] ImageTest.TestAutorelease
ImageTest : 72 ms

ImageViewTest
    [PASS] ImageViewTest.AnimationImages
    [PASS] ImageViewTest.HighlightedAnimationImages_BackingFields
    [PASS] ImageViewTest.InitWithFrame
ImageViewTest : 1 ms

LabelTest
    [PASS] LabelTest.HighlightedTextColor
    [PASS] LabelTest.InitWithFrame
LabelTest : 1 ms

LayoutConstraintTest
    [PASS] LayoutConstraintTest.Create
    [PASS] LayoutConstraintTest.FromVisualFormat
    [PASS] LayoutConstraintTest.FromVisualFormat_NullMetrics
LayoutConstraintTest : 3 ms

LayoutManagerTest
    [PASS] LayoutManagerTest.Defaults
    [PASS] LayoutManagerTest.GetGlyphsTest
LayoutManagerTest : 4 ms

NSDiffableDataSourceSnapshotTest
    [PASS] NSDiffableDataSourceSnapshotTest.GHIssue6567Test
    [PASS] NSDiffableDataSourceSnapshotTest.ObjectUsageTest
NSDiffableDataSourceSnapshotTest : 1 ms

NavigationBarTest
    [PASS] NavigationBarTest.BackgroundImage
    [PASS] NavigationBarTest.InitWithFrame
NavigationBarTest : 1 ms

NavigationControllerTest
    [PASS] NavigationControllerTest.ViewControllers_EmptyNull
NavigationControllerTest : 1 ms

NavigationItemTest
NavigationItemTest : 0 ms

NibTest
    [PASS] NibTest.FromName_DoesNotExists
NibTest : 0 ms

PageControlTest
    [PASS] PageControlTest.InitWithFrame
PageControlTest : 1 ms

PageViewControllerTest
    [PASS] PageViewControllerTest.Defaults
    [PASS] PageViewControllerTest.SetViewControllers
PageViewControllerTest : 3 ms

PanGestureRecognizerTest
    [PASS] PanGestureRecognizerTest.Null
PanGestureRecognizerTest : 1 ms

PopoverBackgroundViewTest
    [PASS] PopoverBackgroundViewTest.InitWithFrame
PopoverBackgroundViewTest : 0 ms

PopoverControllerTest
    [PASS] PopoverControllerTest.Defaults
    [PASS] PopoverControllerTest.PopoverBackgroundViewType
    [INCONCLUSIVE] PopoverControllerTest.PresentFromBarButtonItem_BadButton : Requires iPad
          at MonoTouchFixtures.UIKit.PopoverControllerTest.PresentFromBarButtonItem_BadButton () [0x00016] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/UIKit/PopoverControllerTest.cs:60
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [PASS] PopoverControllerTest.PresentFromRect
    [INCONCLUSIVE] PopoverControllerTest.PresentFromRect_BadView : Requires iPad
          at MonoTouchFixtures.UIKit.PopoverControllerTest.PresentFromRect_BadView () [0x00016] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/UIKit/PopoverControllerTest.cs:96
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
PopoverControllerTest : 1 ms

ProgressViewTest
    [PASS] ProgressViewTest.InitWithFrame
ProgressViewTest : 2 ms

ScrollViewTest
    [PASS] ScrollViewTest.InitWithFrame
ScrollViewTest : 1 ms

SearchBarTest
SearchBarTest : 0 ms

SegmentedControlTest
    [PASS] SegmentedControlTest.Appearance_7
    [PASS] SegmentedControlTest.BackgroundImage
    [PASS] SegmentedControlTest.CtorNSArray
    [PASS] SegmentedControlTest.CtorNSString
    [PASS] SegmentedControlTest.CtorObjects
    [PASS] SegmentedControlTest.CtorString
    [PASS] SegmentedControlTest.CtorUIImage
    [PASS] SegmentedControlTest.InitWithFrame
SegmentedControlTest : 12 ms

SplitViewControllerTest
    [PASS] SplitViewControllerTest.Defaults
    [IGNORED] SplitViewControllerTest.PresentsWithGesture : This test is disabled on TVOS.
          at TestRuntime.IgnoreOnTVOS () [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/common/TestRuntime.cs:694
          at MonoTouchFixtures.UIKit.SplitViewControllerTest.PresentsWithGesture () [0x00015] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/monotouch-test/UIKit/SplitViewControllerTest.cs:53
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
SplitViewControllerTest : 1 ms

StringAttributesTest
    [PASS] StringAttributesTest.MutableStringAttributesTest
    [PASS] StringAttributesTest.RetainCount
    [PASS] StringAttributesTest.RetainCount_7
StringAttributesTest : 4 ms

TabBarControllerTest
    [PASS] TabBarControllerTest.Ctor_Defaults
TabBarControllerTest : 3 ms

TabBarItemTest
    [PASS] TabBarItemTest.Ctor_2
    [PASS] TabBarItemTest.Ctor_3
    [PASS] TabBarItemTest.Ctor_3a_Null
    [PASS] TabBarItemTest.Ctor_3b_Null
    [PASS] TabBarItemTest.Ctor_Defaults
    [PASS] TabBarItemTest.SelectedImage_7a
    [PASS] TabBarItemTest.SelectedImage_7b
TabBarItemTest : 4 ms

TabBarTest
    [PASS] TabBarTest.BackgroundImage
    [PASS] TabBarTest.InitWithFrame
    [PASS] TabBarTest.Items
    [PASS] TabBarTest.SelectedItem
    [PASS] TabBarTest.SelectionIndicatorImage
    [PASS] TabBarTest.TintColor
TabBarTest : 4 ms

TableViewCellTest
    [PASS] TableViewCellTest.InitWithFrame
TableViewCellTest : 1 ms

TableViewControllerTest
TableViewControllerTest : 0 ms

TableViewTest
    [PASS] TableViewTest.InitWithFrame
TableViewTest : 1 ms

TextAttachmentTest
    [PASS] TextAttachmentTest.CtorNull
TextAttachmentTest : 1 ms

TextContainerTest
    [PASS] TextContainerTest.Layout
TextContainerTest : 0 ms

TextFieldTest
    [PASS] TextFieldTest.EmptySelection
    [PASS] TextFieldTest.GetCaretRectForPositiont_Null
    [PASS] TextFieldTest.InitWithFrame
    [PASS] TextFieldTest.InputAccessoryViewTest
    [PASS] TextFieldTest.LeftRight
    [PASS] TextFieldTest.TextInputTraits
TextFieldTest : 7 ms

TextViewTest
    [PASS] TextViewTest.EmptySelection
    [PASS] TextViewTest.InitWithFrame
    [PASS] TextViewTest.LayoutManager
    [PASS] TextViewTest.NonEmptySelection
    [PASS] TextViewTest.TextInputTraits
TextViewTest : 9 ms

UIAlertControllerTest
    [PASS] UIAlertControllerTest.InitWithNibNameTest
UIAlertControllerTest : 2 ms

UIContentSizeCategoryTest
    [PASS] UIContentSizeCategoryTest.Compare
    [PASS] UIContentSizeCategoryTest.IsAccessibilityCategory
UIContentSizeCategoryTest : 1 ms

UISearchControllerTest
    [PASS] UISearchControllerTest.InitWithNibNameTest
UISearchControllerTest : 6 ms

ViewControllerTest
    [PASS] ViewControllerTest.AppearanceTransition
    [PASS] ViewControllerTest.Defaults
    [PASS] ViewControllerTest.NSAction_Null
    [PASS] ViewControllerTest.NonModal
    [PASS] ViewControllerTest.Toolbars_Null
    [PASS] ViewControllerTest.View_Null
ViewControllerTest : 6 ms

ViewTest
    [PASS] ViewTest.AnimateNotify_Null_a1
    [PASS] ViewTest.AnimateNotify_Null_a2
    [PASS] ViewTest.AnimateNotify_Null_c1
    [PASS] ViewTest.AnimateNotify_Null_c2
    [PASS] ViewTest.Animate_Null_a1
    [PASS] ViewTest.Animate_Null_a2
    [PASS] ViewTest.Animate_Null_a3
    [PASS] ViewTest.Animate_Null_c1
    [PASS] ViewTest.Animate_Null_c2
    [PASS] ViewTest.BackgroundColorTest
    [PASS] ViewTest.Convert_Null
    [PASS] ViewTest.Equality
    [PASS] ViewTest.HitTest_Null
    [PASS] ViewTest.InitWithFrame
    [PASS] ViewTest.PointInside_Null
    [PASS] ViewTest.SizeThatFits
    [PASS] ViewTest.Subviews
    [PASS] ViewTest.TintColor
    [PASS] ViewTest.TraitMatch
    [PASS] ViewTest.TraitTest
    [PASS] ViewTest.TransitionNotify_Null_a1
    [PASS] ViewTest.TransitionNotify_Null_c1
    [PASS] ViewTest.TransitionNotify_Null_c2
    [PASS] ViewTest.Transition_Null_a1
    [PASS] ViewTest.Transition_Null_c1
    [PASS] ViewTest.Transition_Null_c2
ViewTest : 9 ms

WindowTest
    [PASS] WindowTest.Convert_Null
    [PASS] WindowTest.InitWithFrame
    [PASS] WindowTest.IsKeyWindow_5199
    [PASS] WindowTest.Level
WindowTest : 4 ms

VTCompressionSessionTests
    [PASS] VTCompressionSessionTests.CompressionSessionCreateTest
    [PASS] VTCompressionSessionTests.CompressionSessionGetSerializablePropertiesTest
    [PASS] VTCompressionSessionTests.CompressionSessionGetSupportedPropertiesTest
    [PASS] VTCompressionSessionTests.CompressionSessionSetCompressionPropertiesMultiPassStorageTest
    [PASS] VTCompressionSessionTests.CompressionSessionSetCompressionPropertiesTest
    [PASS] VTCompressionSessionTests.CompressionSessionSetPropertiesTest
VTCompressionSessionTests : 6 ms

VTDecompressionSessionTests
    [PASS] VTDecompressionSessionTests.DecompressionSessionCreateTest
    [PASS] VTDecompressionSessionTests.DecompressionSessionGetSupportedPropertiesTest
    [PASS] VTDecompressionSessionTests.DecompressionSessionSetDecompressionPropertiesTest
    [PASS] VTDecompressionSessionTests.DecompressionSessionSetPropertiesTest
VTDecompressionSessionTests : 7 ms

VTFrameSiloTests
    [PASS] VTFrameSiloTests.ForEachTest
    [PASS] VTFrameSiloTests.FrameSiloCreateTest
    [PASS] VTFrameSiloTests.SetTimeRangesTest
VTFrameSiloTests : 2 ms

VTMultiPassStorageTests
    [PASS] VTMultiPassStorageTests.MultiPassStorageCloseTest
    [PASS] VTMultiPassStorageTests.MultiPassStorageCreateTest
VTMultiPassStorageTests : 1 ms

VTUtilitiesTests
    [PASS] VTUtilitiesTests.ToCGImageTest
VTUtilitiesTests : 4 ms

VTVideoEncoderListTests
    [PASS] VTVideoEncoderListTests.SupportedEncoderPropertiesTest
    [PASS] VTVideoEncoderListTests.VideoEncoderListTest
VTVideoEncoderListTests : 1 ms

VNRequestTests
    [PASS] VNRequestTests.VNSupportedRevisionsTest
    [PASS] VNRequestTests.VNSupportedRevisionsTwoTest
    [PASS] VNRequestTests.VNSupportedRevisionsUnsupportedTest
VNRequestTests : 15 ms

WeakReferenceTest
    [PASS] WeakReferenceTest.NoRetainCyclesExpectedTest
    [PASS] WeakReferenceTest.RetainCyclesExpectedTest
    [PASS] WeakReferenceTest.WeakTest
WeakReferenceTest : 899 ms

RegistrarSharedTest
    [PASS] RegistrarSharedTest.IntPtrCtor
RegistrarSharedTest : 1 ms

AUParameterNodeTest
    [PASS] AUParameterNodeTest.CreateTokenByAddingParameterRecordingObserver
    [IGNORED] AUParameterNodeTest.ImplementorDisplayNameWithLengthCallback
    [PASS] AUParameterNodeTest.ImplementorStringFromValueCallback
    [PASS] AUParameterNodeTest.ImplementorValueFromStringCallback
    [PASS] AUParameterNodeTest.RemoveParameterObserver
AUParameterNodeTest : 1059 ms

AVPlayerLooperTest
AVPlayerLooperTest : 0 ms

NSLinguisticAnalysisTest
    [PASS] NSLinguisticAnalysisTest.EnumerateSubstringsInRangeTest
    [PASS] NSLinguisticAnalysisTest.GetLinguisticTagsTest
    [PASS] NSLinguisticAnalysisTest.StopEnumerateSubstringsInRangeTest
NSLinguisticAnalysisTest : 7 ms

NSMutableDictionaryTest
    [PASS] NSMutableDictionaryTest.AddEntries
    [PASS] NSMutableDictionaryTest.Bug39993
    [PASS] NSMutableDictionaryTest.IndexerTest
NSMutableDictionaryTest : 1 ms

NSStringTest
    [PASS] NSStringTest.LocalizedFormatTest

NSStringSubstringExceptions
    [PASS] NSStringTest.NSStringSubstringExceptions("asdf",-1,0,"start")
    [PASS] NSStringTest.NSStringSubstringExceptions("asdf",0,-1,"length")
    [PASS] NSStringTest.NSStringSubstringExceptions("asdf",5,0,"start")
    [PASS] NSStringTest.NSStringSubstringExceptions("asdf",0,5,"length")
NSStringSubstringExceptions : 1 ms

TestNSStringSubstrings
    [PASS] NSStringTest.TestNSStringSubstrings("asdf",0,4)
    [PASS] NSStringTest.TestNSStringSubstrings("asdf",0,2)
    [PASS] NSStringTest.TestNSStringSubstrings("asdf",1,3)
    [PASS] NSStringTest.TestNSStringSubstrings("asdf",4,0)
TestNSStringSubstrings : 0 ms
NSStringTest : 5 ms

NWPathMonitorTest
    [PASS] NWPathMonitorTest.PathIsAlwaysUpdatedWithNewHandlerTest
    [PASS] NWPathMonitorTest.StatusPropertyTest
NWPathMonitorTest : 331 ms
monotouchtest.exe : 54945 ms

EmbeddedResources.dll

ResourcesTest
    [PASS] ResourcesTest.Embedded
ResourcesTest : 22 ms
EmbeddedResources.dll : 22 ms

bindings-test.dll

ProtocolTest
    [PASS] ProtocolTest.OnlyProtocol
    [PASS] ProtocolTest.ProtocolMembers
    [PASS] ProtocolTest.ProtocolWithBaseType
    [PASS] ProtocolTest.ProtocolWithBaseTypeAndModel
ProtocolTest : 7 ms

RegistrarBindingTest
    [PASS] RegistrarBindingTest.BlockCallback

LinkedAway
    [IGNORED] RegistrarBindingTest.LinkedAway(True,True) : This test is only applicable if optimized & linking all assemblies.
          at Xamarin.BindingTests.RegistrarBindingTest.LinkedAway (System.Boolean required, System.Boolean instance) [0x00017] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/bindings-test/RegistrarBindingTest.cs:257
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] RegistrarBindingTest.LinkedAway(True,False) : This test is only applicable if optimized & linking all assemblies.
          at Xamarin.BindingTests.RegistrarBindingTest.LinkedAway (System.Boolean required, System.Boolean instance) [0x00017] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/bindings-test/RegistrarBindingTest.cs:257
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] RegistrarBindingTest.LinkedAway(False,True) : This test is only applicable if optimized & linking all assemblies.
          at Xamarin.BindingTests.RegistrarBindingTest.LinkedAway (System.Boolean required, System.Boolean instance) [0x00017] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/bindings-test/RegistrarBindingTest.cs:257
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
    [IGNORED] RegistrarBindingTest.LinkedAway(False,False) : This test is only applicable if optimized & linking all assemblies.
          at Xamarin.BindingTests.RegistrarBindingTest.LinkedAway (System.Boolean required, System.Boolean instance) [0x00017] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tests/bindings-test/RegistrarBindingTest.cs:257
          at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
          at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395
LinkedAway : 2 ms

ProtocolWithBlockProperties
    [PASS] RegistrarBindingTest.ProtocolWithBlockProperties(True,True)
    [PASS] RegistrarBindingTest.ProtocolWithBlockProperties(True,False)
    [PASS] RegistrarBindingTest.ProtocolWithBlockProperties(False,True)
    [PASS] RegistrarBindingTest.ProtocolWithBlockProperties(False,False)
ProtocolWithBlockProperties : 1 ms

ProtocolWithNativeBlockProperties
    [PASS] RegistrarBindingTest.ProtocolWithNativeBlockProperties(True,True)
    [PASS] RegistrarBindingTest.ProtocolWithNativeBlockProperties(True,False)
    [PASS] RegistrarBindingTest.ProtocolWithNativeBlockProperties(False,True)
    [PASS] RegistrarBindingTest.ProtocolWithNativeBlockProperties(False,False)
ProtocolWithNativeBlockProperties : 1 ms

ProtocolWithReturnValues
    [PASS] RegistrarBindingTest.ProtocolWithReturnValues(True,True)
    [PASS] RegistrarBindingTest.ProtocolWithReturnValues(True,False)
    [PASS] RegistrarBindingTest.ProtocolWithReturnValues(False,True)
    [PASS] RegistrarBindingTest.ProtocolWithReturnValues(False,False)
ProtocolWithReturnValues : 1 ms
RegistrarBindingTest : 7 ms

RuntimeTest
    [PASS] RuntimeTest.MainThreadDeallocationTest
    [PASS] RuntimeTest.MainThreadDeallocationTestQOS
    [PASS] RuntimeTest.WrapperTypeLookupTest
RuntimeTest : 3 ms
bindings-test.dll : 17 ms
Tests run: 2286 Passed: 2282 Inconclusive: 4 Failed: 0 Ignored: 47
]]>
</TouchUnitExtraData>
</TouchUnitTestRun>
