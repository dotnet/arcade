// <auto-generated>
using System.Reflection;


namespace Microsoft.DotNet
{
    internal static partial class TestStrings
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(TestStrings)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }
#if !NET20
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
#endif
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);

        private static string GetResourceString(string resourceKey, string[] formatterNames)
        {
           var value = GetResourceString(resourceKey);
           if (formatterNames != null)
           {
               for (var i = 0; i < formatterNames.Length; i++)
               {
                   value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
               }
           }
           return value;
        }

        /// <summary>The format '{noun}' has {adjective} parameters.</summary>
        internal static string @StringWithNamedArgs => GetResourceString("StringWithNamedArgs");
        /// <summary>The format '{noun}' has {adjective} parameters.</summary>
        internal static string FormatStringWithNamedArgs(object noun, object adjective)
           => string.Format(Culture, GetResourceString("StringWithNamedArgs", new [] { "noun", "adjective" }), noun, adjective);

        /// <summary>The really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really long format st ...</summary>
        internal static string @StringWithNumberedArgs => GetResourceString("StringWithNumberedArgs");
        /// <summary>The really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really long format st ...</summary>
        internal static string FormatStringWithNumberedArgs(object p0, object p1, object p2)
           => string.Format(Culture, GetResourceString("StringWithNumberedArgs"), p0, p1, p2);

        /// <summary>No arguments for this one.</summary>
        internal static string @StringWithoutArgs => GetResourceString("StringWithoutArgs");

    }
}
