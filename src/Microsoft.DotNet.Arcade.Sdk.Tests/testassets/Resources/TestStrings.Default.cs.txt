// <auto-generated>
using System.Reflection;


namespace Microsoft.DotNet
{
    internal static partial class TestStrings
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(TestStrings)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }
#if !NET20
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
#endif
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);
        /// <summary>The format '{noun}' has {adjective} parameters.</summary>
        internal static string @StringWithNamedArgs => GetResourceString("StringWithNamedArgs");
        /// <summary>The really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really really long format st ...</summary>
        internal static string @StringWithNumberedArgs => GetResourceString("StringWithNumberedArgs");
        /// <summary>No arguments for this one.</summary>
        internal static string @StringWithoutArgs => GetResourceString("StringWithoutArgs");

    }
}
