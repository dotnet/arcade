<?xml version="1.0" encoding="utf-8"?>
<!-- All Rights Reserved. Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <UsingTask TaskName="ExtractResWResourcesFromAssemblies" AssemblyFile="$(MSBuildTestAssemblyPath)" />

  <PropertyGroup>
    <RunnerDir>%RUNTIME_PATH%Runner\</RunnerDir>
    <LauncherPath>%RUNTIME_PATH%Launcher\WindowsStoreAppLauncher.exe</LauncherPath>
    <_RuntimePath>%RUNTIME_PATH%UAPLayout\</_RuntimePath>

    <RunTestsDependsOn>CheckUAPToolsInstalled;$(RunTestsDependsOn);MakeTestSpecificResourcesPriFile</RunTestsDependsOn>
  </PropertyGroup>
  
  <!-- Properties needed to create resources.pri -->
  <PropertyGroup>
    <_MakePriExecutable>$(TestAssetsDir)makepri.exe</_MakePriExecutable>
    <_MakePriConfigTemplate>$(TestAssetsDir)MakePriConfigFile.xml</_MakePriConfigTemplate>

    <_CommonPriFile Condition="'$(_CommonPriFile)' == ''">$(RuntimePath)resw/resources.pri</_CommonPriFile>
    <_TestSpecificPriFile>$(TestPath)resources.pri</_TestSpecificPriFile>
    <_MakePriHelpersDir>$(IntermediateOutputPath)makepri</_MakePriHelpersDir>
    <_MakePriConfigFile>$(_MakePriHelpersDir)/ModifiedConfigFile.xml</_MakePriConfigFile>
    <_ReswListFile>$(_MakePriHelpersDir)/reswlist.RESFILES</_ReswListFile>
    <_PriListFile>$(_MakePriHelpersDir)/prilist.RESFILES</_PriListFile>
    <_ExternalReswOutputPath>$(ResourcesFolderPath)/external/</_ExternalReswOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <_AllRuntimeDllFiles Include="$(RuntimePath)\*.dll" Exclude="$(RuntimePath)\Microsoft.VisualStudio.TestPlatform.*dll;$(RuntimePath)\Microsoft.TestPlatform.*dll" />
    <_ExternalReswFiles Include="$(_ExternalReswOutputPath)*.resw" Exclude="$(RuntimePath)\Microsoft.VisualStudio.TestPlatform.*resw;$(RuntimePath)\Microsoft.TestPlatform.*resw" />

    <!-- The first time the CreateReswFilesForExternalDependencies target is executed the itemgroup _ExternalReswFiles will be empty
    and that will avoid the target from executing, so we add a dummy file if they are empty so that the target is executed the first time. -->
    <_ExternalReswFiles Condition="@(_ExternalReswFiles) == ''" Include="$(_ExternalReswOutputPath)dummy.resw" />
  </ItemGroup>

  <Target Name="CheckUAPToolsInstalled">

    <!-- For UAP, make sure the Runner and Launcher folder exist, otherwise the tests cannot run -->
    <Error Condition="!Exists('$(TestHostRootPath)\Runner') OR !Exists('$(TestHostRootPath)\Launcher')"
           Text="We cannot run the tests for UAP because either the Runner or the Launcher could not be found. You need to specify the UAPToolsFolder property when calling build.cmd to fix this." />

  </Target>

  <Target Name="CreateReswFilesForExternalDependencies"
          Condition="'$(ShouldSkipExternalResources)' != 'true'"
          Inputs="@(_AllRuntimeDllFiles)"
          Outputs="@(_ExternalReswFiles)">

    <ExtractResWResourcesFromAssemblies InputAssemblies="@(_AllRuntimeDllFiles)"
                                        OutputPath="$(_ExternalReswOutputPath)"
                                        InternalReswDirectory="$(ResourcesFolderPath)" />

  </Target>

  <!-- This target the necessary config file in order to create the UAP runner's resources.pri file using MakePri.exe -->
  <Target Name="CreateMakePriConfigFileFromTemplate"
          Inputs="$(_MakePriConfigTemplate)"
          Outputs="$(_MakePriConfigFile)">

    <MakeDir Directories="$(_MakePriHelpersDir)" />

    <WriteLinesToFile File="$(_MakePriConfigFile)"
                      Lines="$([System.IO.File]::ReadAllText('$(_MakePriConfigTemplate)').Replace('{reswfilelist}', '$(_ReswListFile)').Replace('{prireslist}', '$(_PriListFile)'))"
                      Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="$(_MakePriConfigFile)" />
    </ItemGroup>

  </Target>

  <!-- This target gets all the resw files to be used to create the UAP runner's resources.pri file -->
  <Target Name="CalculateResWFiles"
          DependsOnTargets="CreateReswFilesForExternalDependencies">

    <ItemGroup>
      <_TestResWFiles Include="$(TestResourcesFolderPath)\*.resw" Exclude="$(TestResourcesFolderPath)\Microsoft.VisualStudio.TestPlatform.*resw;$(TestResourcesFolderPath)\Microsoft.TestPlatform.*resw" />
      <_CommonResWFiles Include="$(ResourcesFolderPath)\**\*.resw" Exclude="$(ResourcesFolderPath)\**\Microsoft.VisualStudio.TestPlatform.*resw;$(ResourcesFolderPath)\**\Microsoft.TestPlatform.*resw" />
    </ItemGroup>
  </Target>

  <!-- This target creates a resources.pri file that contains all the framework resources, this is a common file used by all of our test assemblies that have no specific resources. -->
  <Target Name="MakeCommonResourcesPriFile"
          DependsOnTargets="CalculateResWFiles;CreateMakePriConfigFileFromTemplate"
          Inputs="@(_CommonResWFiles)"
          Outputs="$(_CommonPriFile)">

    <!-- We write the list of resw files that have to be indexed by makepri.exe -->
    <WriteLinesToFile File="$(_ReswListFile)"
                      Lines="@(_CommonResWFiles)"
                      Overwrite="true" />

    <!-- We write the list of base pri files to merge with the resw files by makepri.exe -->
    <WriteLinesToFile File="$(_PriListFile)"
                      Lines="$(TestHostRootPath)\Runner\resources.pri"
                      Overwrite="true" />

    <PropertyGroup>
      <_MakePriCommand>$(_MakePriExecutable) versioned /o /pr "$(TestHostRootPath)\Runner" /cf "$(_MakePriConfigFile)" /of "$(_CommonPriFile)" /if "$(TestHostRootPath)\Runner\resources.pri"</_MakePriCommand>
    </PropertyGroup>

    <!-- We call MakePri.exe to create common resources.pri file -->
    <Exec Command="$(_MakePriCommand)" StandardOutputImportance="Low" StdErrEncoding="Unicode"/>

    <ItemGroup>
      <FileWrites Include="$(_CommonPriFile)" />
    </ItemGroup>

  </Target>

  <!-- This target creates the resources.pri file for every test assembly in order to be able to run the tests inside an appx. -->
  <Target Name="MakeTestSpecificResourcesPriFile"
          DependsOnTargets="MakeCommonResourcesPriFile">

    <!-- We write the list of resw files that have to be indexed by makepri.exe only if this test project has its own resources. -->
    <WriteLinesToFile Condition="'$(TestProjectNeedsModifiedPriFile)' == 'true'"
                      File="$(_ReswListFile)"
                      Lines="@(_TestResWFiles)"
                      Overwrite="true" />

    <!-- We write the list of base pri files to merge with the resw files by makepri.exe only if this test project has its own resources. -->
    <WriteLinesToFile Condition="'$(TestProjectNeedsModifiedPriFile)' == 'true'"
                      File="$(_PriListFile)"
                      Lines="$(_CommonPriFile)"
                      Overwrite="true" />

    <PropertyGroup Condition="'$(TestProjectNeedsModifiedPriFile)' == 'true'">
      <_MakePriCommand>$(_MakePriExecutable) versioned /o /pr "$(RuntimePath)resw" /cf "$(_MakePriConfigFile)" /of "$(TestPath)" /if "$(_CommonPriFile)"</_MakePriCommand>
    </PropertyGroup>

    <!-- We call MakePri.exe to create common resources.pri file only if this test project has its own resources. -->
    <Exec Command="$(_MakePriCommand)"
          StandardOutputImportance="Low"
          StdErrEncoding="Unicode"
          Condition="'$(TestProjectNeedsModifiedPriFile)' == 'true'" />

    <Copy Condition="'$(TestProjectNeedsModifiedPriFile)' != 'true' AND Exists('$(_CommonPriFile)')"
          SourceFiles="$(_CommonPriFile)"
          DestinationFiles="$(TestPath)\resources.pri"
          SkipUnchangedFiles="true" />

    <Copy Condition="'$(TestProjectNeedsModifiedPriFile)' != 'true' AND !Exists('$(_CommonPriFile)')"
          SourceFiles="$(TestHostRootPath)\Runner\resources.pri"
          DestinationFiles="$(TestPath)\resources.pri"
          SkipUnchangedFiles="true" />

  </Target>

</Project>