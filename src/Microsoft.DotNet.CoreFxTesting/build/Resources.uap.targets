<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <UsingTask TaskName="ExtractResWResourcesFromAssemblies" AssemblyFile="$(MSBuildTestAssemblyPath)" />

  <PropertyGroup>
    <!-- We need to binplace the resources as resw files to create the runner's pri file. -->
    <ResourcesFolderPath Condition="'$(ResourcesFolderPath)' == ''">$(RuntimePath)resw</ResourcesFolderPath>

    <_MakePriExecutable>$(TestAssetsDir)makepri.exe</_MakePriExecutable>
    <_MakePriConfigTemplate>$(TestAssetsDir)MakePriConfigFile.xml</_MakePriConfigTemplate>

    <_CommonPriFile Condition="'$(_CommonPriFile)' == ''">$(RuntimePath)resw/resources.pri</_CommonPriFile>
    <_MakePriHelpersDir>$(IntermediateOutputPath)makepri</_MakePriHelpersDir>
    <_MakePriConfigFile>$(_MakePriHelpersDir)/ModifiedConfigFile.xml</_MakePriConfigFile>
    <_ReswListFile>$(_MakePriHelpersDir)/reswlist.RESFILES</_ReswListFile>
    <_PriListFile>$(_MakePriHelpersDir)/prilist.RESFILES</_PriListFile>
    <_ExternalReswOutputPath>$(ResourcesFolderPath)/external/</_ExternalReswOutputPath>
    <_TestSpecificPriFile>$(TestPath)resources.pri</_TestSpecificPriFile>

    <CompileDependsOn>CopyResxFilesToReswFiles;$(CompileDependsOn);</CompileDependsOn>
  </PropertyGroup>
  
  <ItemGroup>
    <_AllRuntimeDllFiles Include="$(RuntimePath)\*.dll" Exclude="$(RuntimePath)\Microsoft.VisualStudio.TestPlatform.*dll;$(RuntimePath)\Microsoft.TestPlatform.*dll" />
    <_ExternalReswFiles Include="$(_ExternalReswOutputPath)*.resw" Exclude="$(RuntimePath)\Microsoft.VisualStudio.TestPlatform.*resw;$(RuntimePath)\Microsoft.TestPlatform.*resw" />

    <!-- The first time the CreateReswFilesForExternalDependencies target is executed the itemgroup _ExternalReswFiles will be empty
    and that will avoid the target from executing, so we add a dummy file if they are empty so that the target is executed the first time. -->
    <_ExternalReswFiles Condition="@(_ExternalReswFiles) == ''" Include="$(_ExternalReswOutputPath)dummy.resw" />
  </ItemGroup>

  <Target Name="CalculateResourcesFileNames">

    <ItemGroup>
      <_AllResxFiles Include="@(EmbeddedResource->'%(FullPath)')" Condition="'%(Extension)' == '.resx'">
        <ReswName Condition="'%(EmbeddedResource.ReswName)' == ''">%(EmbeddedResource.ManifestResourceName)</ReswName>
      </_AllResxFiles>
    </ItemGroup>

    <PropertyGroup>
      <ProjectHasResources Condition="'@(_AllResxFiles)' != ''">true</ProjectHasResources>
      <TestProjectNeedsModifiedPriFile Condition="'$(IsTestProject)' == 'true' AND '$(ProjectHasResources)' == 'true'">true</TestProjectNeedsModifiedPriFile>
      <TestResourcesFolderPath Condition="'$(TestProjectNeedsModifiedPriFile)' == 'true'">$(RuntimePath)$(AssemblyName).Resw</TestResourcesFolderPath>
      <_ResWDestinationPath Condition="'$(TestResourcesFolderPath)' != ''">$(TestResourcesFolderPath)</_ResWDestinationPath>
      <_ResWDestinationPath Condition="'$(TestResourcesFolderPath)' == ''">$(ResourcesFolderPath)</_ResWDestinationPath>
    </PropertyGroup>

    <ItemGroup>
      <_ReswOutputFiles Include="@(_AllResxFiles->'$(_ResWDestinationPath)/%(ReswName).resw')" />
    </ItemGroup>

  </Target>

  <Target Name="CopyResxFilesToReswFiles"
          DependsOnTargets="CalculateResourcesFileNames"
          Inputs="@(_AllResxFiles)"
          Outputs="@(_ReswOutputFiles)" >

    <Copy SourceFiles="@(_AllResxFiles)"
          DestinationFiles="@(_ReswOutputFiles)"
          SkipUnchangedFiles="true">
          <Output TaskParameter="CopiedFiles" ItemName="FilesCreated" />
    </Copy>

    <!-- We need to touch the copied files so that the target that uses them can track the inputs and outputs with the copied timestamp -->
    <Touch Files="@(FilesCreated)" />

  </Target>

  <!-- This target creates the necessary config file in order to create the UAP runner's resources.pri file using MakePri.exe -->
  <Target Name="CreateMakePriConfigFileFromTemplate"
          Inputs="$(_MakePriConfigTemplate)"
          Outputs="$(_MakePriConfigFile)">

    <MakeDir Directories="$(_MakePriHelpersDir)" />

    <WriteLinesToFile File="$(_MakePriConfigFile)"
                      Lines="$([System.IO.File]::ReadAllText('$(_MakePriConfigTemplate)').Replace('{reswfilelist}', '$(_ReswListFile)').Replace('{prireslist}', '$(_PriListFile)'))"
                      Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="$(_MakePriConfigFile)" />
    </ItemGroup>

  </Target>

  <Target Name="CreateReswFilesForExternalDependencies"
          Condition="'$(ShouldSkipExternalResources)' != 'true'"
          Inputs="@(_AllRuntimeDllFiles)"
          Outputs="@(_ExternalReswFiles)">

    <ExtractResWResourcesFromAssemblies InputAssemblies="@(_AllRuntimeDllFiles)"
                                        OutputPath="$(_ExternalReswOutputPath)"
                                        InternalReswDirectory="$(ResourcesFolderPath)" />

  </Target>

  <!-- This target gets all the resw files to be used to create the UAP runner's resources.pri file -->
  <Target Name="CalculateResWFiles"
          DependsOnTargets="CreateReswFilesForExternalDependencies">

    <ItemGroup>
      <_TestResWFiles Include="$(TestResourcesFolderPath)\*.resw" Exclude="$(TestResourcesFolderPath)\Microsoft.VisualStudio.TestPlatform.*resw;$(TestResourcesFolderPath)\Microsoft.TestPlatform.*resw" />
      <_CommonResWFiles Include="$(ResourcesFolderPath)\**\*.resw" Exclude="$(ResourcesFolderPath)\**\Microsoft.VisualStudio.TestPlatform.*resw;$(ResourcesFolderPath)\**\Microsoft.TestPlatform.*resw" />
    </ItemGroup>
  </Target>

  <!-- This target creates a resources.pri file that contains all the framework resources, this is a common file used by all of our test assemblies that have no specific resources. -->
  <Target Name="MakeCommonResourcesPriFile"
          DependsOnTargets="CalculateResWFiles;CreateMakePriConfigFileFromTemplate"
          Inputs="@(_CommonResWFiles)"
          Outputs="$(_CommonPriFile)">

    <!-- We write the list of resw files that have to be indexed by makepri.exe -->
    <WriteLinesToFile File="$(_ReswListFile)"
                      Lines="@(_CommonResWFiles)"
                      Overwrite="true" />

    <!-- We write the list of base pri files to merge with the resw files by makepri.exe -->
    <WriteLinesToFile File="$(_PriListFile)"
                      Lines="$(TestHostRootPath)\Runner\resources.pri"
                      Overwrite="true" />

    <PropertyGroup>
      <_MakePriCommand>$(_MakePriExecutable) versioned /o /pr "$(TestHostRootPath)\Runner" /cf "$(_MakePriConfigFile)" /of "$(_CommonPriFile)" /if "$(TestHostRootPath)\Runner\resources.pri"</_MakePriCommand>
    </PropertyGroup>

    <!-- We call MakePri.exe to create common resources.pri file -->
    <Exec Command="$(_MakePriCommand)" StandardOutputImportance="Low" StdErrEncoding="Unicode"/>

    <ItemGroup>
      <FileWrites Include="$(_CommonPriFile)" />
    </ItemGroup>

  </Target>

</Project>