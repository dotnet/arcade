<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <PropertyGroup>
    <CoverageReportInputPath Condition="'$(CoverageReportInputPath)' == ''">$(CoverageOutputPath)</CoverageReportInputPath>
    <CoverageReportDir Condition="'$(CoverageReportDir)' == ''">$([MSBuild]::NormaliizeDirectory('$(TestPath)', 'report'))</CoverageReportDir>
    <CoverageReportTypes Condition="'$(CoverageReportTypes)' == ''">Html</CoverageReportTypes>
    <CoverageReportVerbosity Condition="'$(CoverageReportVerbosity)' == ''">Info</CoverageReportVerbosity>
    <CoverageReportResultsPath>$([MSBuild]::NormalizePath('$(CoverageReportDir)', 'index.htm'))</CoverageReportResultsPath>

    <CoverageReportCommandLine>"$(DotNetTool)" tool run reportgenerator "-reports:$(CoverageReportInputPath)" "-targetdir:$(CoverageReportDir.TrimEnd('\/'))" "-reporttypes:$(CoverageReportTypes)" "-verbosity:$(CoverageReportVerbosity)"</CoverageReportCommandLine>
  </PropertyGroup>

  <!-- Skip generating individual reports if a full report is generated. -->
  <ItemGroup Condition="'$(GenerateFullCoverageReport)' != 'true'">
    <PostRunScriptCommands Include="$(CoverageReportCommandLine)" />
  </ItemGroup>

  <Target Name="GenerateCoverageReport"
          Condition="'$(GenerateFullCoverageReport)' == 'true'"
          AfterTargets="TestAllProjects"
          Inputs="$(CoverageReportInputPath)"
          Outputs="$(CoverageReportResultsPath)">

    <Exec Command="$(CoverageReportCommandLine)" />

  </Target>

</Project>
