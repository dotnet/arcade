<?xml version="1.0" encoding="utf-8"?>
<!-- All Rights Reserved. Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <PropertyGroup>
    <PerfRunnerName Condition="'$(PerfRunnerName)' == ''">BenchmarksRunner.exe</PerfRunnerName>

    <!-- 
      By default we run all benchmarks from given folder.
      Unix OSes are replacing an asterisk with file name of every file in the directory,
      so we need to wrap it with '*' to make it work
    -->
    <PerfRunnerFilter>*</PerfRunnerFilter>
    <PerfRunnerFilter Condition="'$(TargetOS)' != 'Windows_NT'">'*'</PerfRunnerFilter>
    
    <CollectFlags>BranchMispredictions+CacheMisses+InstructionRetired</CollectFlags>

    <!-- 
      Currently BenchmarkDotNet uses ETW for Profiling on Windows, when we add new profiler
      for Unix we are going to add it here.
    -->
    <ProfilerName Condition="'$(TargetOS)' == 'Windows_NT'">ETW</ProfilerName>
    
    <!-- For diagnostic benchmarks we specify the profiler and hardware counters we want to get. -->
    <_PerfRunnerArgs Condition="'$(PerformanceType)' == 'Diagnostic'">--profiler $(ProfilerName) --counters $(CollectFlags)</PerfRunnerArgs>

    <!-- Expected to be passed in as a global property be the user to set additional arguments. -->
    <_PerfRunnerArgs Condition="'$(PerfRunnerArgs)' != ''">$(PerfRunnerArgs)</_PerfRunnerArgs>
    
    <RunArguments>--filter $(PerfRunnerFilter) $(_PerfRunnerArgs) || $(CliExitErrorCommand)</RunArguments>
  </PropertyGroup>

  <!-- Helix dependencies -->
  <ItemGroup Condition="'$(ArchiveTests)' == 'true' AND '$(IncludePerformanceTestFrameworkReferences)' == 'true'">
    <TestArchiveDependencies Include="$(RuntimePath)BenchmarkDotNet.dll" />
    <TestArchiveDependencies Include="$(RuntimePath)BenchmarkDotNet.Diagnostics.Windows.dll" />
  </ItemGroup>

</Project>