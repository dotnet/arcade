<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <UsingTask TaskName="ChooseBestTargetFrameworkTask" AssemblyFile="..\tools\netcoreapp2.1\Microsoft.DotNet.Build.Tasks.TargetFramework.dll"/>
  <UsingTask TaskName="ChooseBestTargetFrameworkReference" AssemblyFile="..\tools\netcoreapp2.1\Microsoft.DotNet.Build.Tasks.TargetFramework.dll"/>
  
  <Target Name="RunOnlyBestConfiguration" BeforeTargets="DispatchToInnerBuilds">    
    <ItemGroup>
      <!-- Emptying the list -->
      <_InnerBuildProjects Remove="@(_InnerBuildProjects)" />
    </ItemGroup>

    <ChooseBestTargetFrameworkTask TargetFrameworkOsGroup="$(TargetFrameworkOsGroup)"
                                   TargetFrameworks="@(TargetFrameworksList)"
                                   RuntimeGraph="$(RuntimeGraph)" >
      <Output TaskParameter="BestTargetFramework" PropertyName="BestTargetFramework" />      
    </ChooseBestTargetFrameworkTask>

    <ItemGroup>
      <_InnerBuildProjects Include="$(MSBuildProjectFile)">
        <AdditionalProperties>TargetFramework=$(BestTargetFramework)</AdditionalProperties>
      </_InnerBuildProjects>
    </ItemGroup>
  </Target>
  
  <Target Name="StripOsGroupFromTargetFrameworks" BeforeTargets="CollectPackageReferences">
    <ItemGroup>
      <_t1 Include="$(TargetFrameworks)" />
      <_t1 Length="$([System.String]::new('%(Identity)').IndexOf('-'))"/>
      <_t1 Condition="'%(Length)' == '-1'" Length="$([System.String]::new('%(Identity)').Length)"/>
      <_t2 Include="$([System.String]::new('%(_t1.Identity)').Substring(0, '%(_t1.Length)'))" />
    </ItemGroup>
    
    <PropertyGroup>
      <TargetFrameworks>@(_t2->Distinct())</TargetFrameworks>
    </PropertyGroup>
  </Target>

  <Target Name="AttachOsGroupFromTargetFrameworks" AfterTargets="Restore">    
    <PropertyGroup>
      <TargetFrameworks>$(OriginalTargetFrameworks)</TargetFrameworks>
    </PropertyGroup>
  </Target>

  <Target Name="ChooseBestTargetFrameworkReferenceTarget">
    <ChooseBestTargetFrameworkReference TargetFrameworkOsGroup="$(BestTargetFramework)"
                                   TargetFrameworks="@(TargetFrameworksList)"
                                   RuntimeGraph="$(RuntimeGraph)" >
      <Output TaskParameter="BestTargetFrameworkArray" ItemName="BestTargetFrameworks" />
    </ChooseBestTargetFrameworkReference>
  </Target>

  <Target Name="ResolveP2Preferences" BeforeTargets="AssignProjectConfiguration">
    
    <MSBuild Projects="@(ProjectReference)"
              Targets="GetTargetFrameworks"
              ContinueOnError="true"
              SkipNonexistentTargets="true">

     <Output TaskParameter="TargetOutputs" ItemName="projectRefWithTfms"/>
    </MSBuild>
     
    <PropertyGroup>
      <_tfm>$(TargetFramework)</_tfm>
      <_tfm Condition="'$(TargetFrameworkOsGroup)' != ''">$(TargetFrameworkOsGroup)</_tfm>
    </PropertyGroup>

    <ChooseBestTargetFrameworkReference TargetFrameworkOsGroup="$(_tfm)"
                                   TargetFrameworks="@(projectRefWithTfms)"
                                   RuntimeGraph="$(RuntimeGraph)" >
      <Output TaskParameter="TargetFrameworksWithTargetFramework" ItemName="BestTargetFrameworks" />
    </ChooseBestTargetFrameworkReference>
    
    <ItemGroup>
      <ProjectReference Remove="@(ProjectReference)" />
      <ProjectReference Include="@(BestTargetFrameworks)" SkipGetTargetFrameworkProperties="true"/>
    </ItemGroup>
    <Message Text="@(BestTargetFrameworks)" Importance="high"/>
  </Target>

</Project>
